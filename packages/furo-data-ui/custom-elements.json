{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "src/basefilter.js",
      "declarations": [
        {
          "kind": "class",
          "description": "FOR DOCUMENTATION PURPOSES ONLY\n\nBase filter is the base element to build special filter comparator fields\nYour element is then bindable with type filter.Comparator\n\n after binding with .. a wire --filternode is triggered\n\n ### internal hooks\n #### --clear\n Use this to clear the filter val and is.",
          "name": "BaseFilter",
          "members": [
            {
              "kind": "method",
              "name": "_FBPReady",
              "description": "flow is ready lifecycle method",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "bindFilterCondition",
              "parameters": [
                {
                  "name": "fc"
                }
              ]
            },
            {
              "kind": "field",
              "name": "comparators",
              "privacy": "public",
              "description": "Semicolon separated list of acceptable comparators.\n\nlike: gt, lt",
              "attribute": "comparators"
            },
            {
              "kind": "field",
              "name": "defaultComparator",
              "privacy": "public",
              "description": "set this to init with this comparator or set the comparator to this value on clear",
              "attribute": "default-comparator"
            },
            {
              "kind": "field",
              "name": "label",
              "privacy": "public",
              "description": "The label for the input",
              "attribute": "label"
            },
            {
              "kind": "field",
              "name": "hideComparator",
              "privacy": "public",
              "description": "hide the comparator dropdown",
              "attribute": "hide-comparator",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hideClear",
              "privacy": "public",
              "description": "hide the clear",
              "attribute": "hide-clear"
            },
            {
              "kind": "field",
              "name": "condensed",
              "privacy": "public",
              "attribute": "condensed"
            }
          ],
          "attributes": [
            {
              "name": "comparators",
              "description": "Semicolon separated list of acceptable comparators.\n\nlike: gt, lt",
              "fieldName": "comparators"
            },
            {
              "name": "default-comparator",
              "description": "set this to init with this comparator or set the comparator to this value on clear",
              "fieldName": "defaultComparator"
            },
            {
              "name": "label",
              "description": "The label for the input",
              "fieldName": "label"
            },
            {
              "name": "hide-comparator",
              "description": "hide the comparator dropdown",
              "fieldName": "hideComparator"
            },
            {
              "name": "hide-clear",
              "description": "hide the clear",
              "fieldName": "hideClear"
            },
            {
              "name": "condensed",
              "fieldName": "condensed"
            }
          ],
          "mixins": [
            {
              "name": "FBP",
              "package": "@furo/fbp"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "base component to make a bindable filter",
          "tagName": "furo-data-filter-doc",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "BaseFilter",
          "declaration": {
            "name": "BaseFilter",
            "module": "src/basefilter.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "furo-data-filter-doc",
          "declaration": {
            "name": "BaseFilter",
            "module": "src/basefilter.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/furo-chart-display.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`furo-chart-display`\n Component to display charts with apex the apex charts lib (https://github.com/apexcharts/apexcharts.js).\n\n Use `furo-data-chart-binder` to connect your data.\n\n ```html\n <furo-chart-display chart-type=\"bar\">\n    <furo-data-chart-binder\n        Æ’-bind-data=\"--projectDAO(*.entities)\"\n        data-field=\"data.cost_limit.units\"\n        category-field=\"data.description\"\n    ></furo-data-chart-binder>\n </furo-chart-display>\n ```",
          "name": "FuroChartDisplay",
          "members": [
            {
              "kind": "field",
              "name": "sparkline",
              "privacy": "public",
              "description": "Hides all elements of the chart other than the primary graphic.\nUse this to visualize data in very small areas.",
              "attribute": "sparkline"
            },
            {
              "kind": "field",
              "name": "xaxisTitle",
              "privacy": "public",
              "description": "Give the x-axis a title which will be displayed below the axis labels by default.",
              "attribute": "xaxis-title"
            },
            {
              "kind": "field",
              "name": "xaxisDatetime",
              "privacy": "public",
              "description": "Set this to true if you have datetime, google.type.date or timestamp data on the x-axis",
              "attribute": "xaxis-datetime"
            },
            {
              "kind": "field",
              "name": "zebra",
              "privacy": "public",
              "description": "set zebra color like zebra=\"#f3f4f5, #fff\" to get stripes",
              "attribute": "zebra"
            },
            {
              "kind": "field",
              "name": "noDataText",
              "privacy": "public",
              "description": "Set the text to display, if no data is given.\n\nIf this option is not set, the default is **No data.**",
              "attribute": "no-data-text"
            },
            {
              "kind": "field",
              "name": "legend",
              "privacy": "public",
              "description": "Enables the legend on bottom left with offset 0:0",
              "attribute": "legend"
            },
            {
              "kind": "field",
              "name": "dataLabels",
              "privacy": "public",
              "description": "Enable labels with data on every item.",
              "attribute": "data-labels"
            },
            {
              "kind": "field",
              "name": "tooltip",
              "privacy": "public",
              "description": "show a tooltip on mouseover",
              "attribute": "tooltip"
            },
            {
              "kind": "field",
              "name": "legendAlign",
              "privacy": "public",
              "description": "Aligns the legend to `left` `center` `right`\n\ndefault is **left**",
              "attribute": "legend-align"
            },
            {
              "kind": "field",
              "name": "legendPosition",
              "privacy": "public",
              "description": "Set the position of the legend to `top`, `right`, `bottom`, `left`\n\nDefault is **bottom**",
              "attribute": "legend-position"
            },
            {
              "kind": "field",
              "name": "legendOffsetX",
              "privacy": "public",
              "description": "Moves the legend in the **x** direction for n pixels from `legend-position`",
              "attribute": "legend-offset-x"
            },
            {
              "kind": "field",
              "name": "legendOffsetY",
              "privacy": "public",
              "description": "Moves the legend in the **y** direction for n pixels from `legend-position`",
              "attribute": "legend-offset-y"
            },
            {
              "kind": "field",
              "name": "toolbar",
              "privacy": "public",
              "description": "Enables the toolbar",
              "attribute": "toolbar"
            },
            {
              "kind": "field",
              "name": "toolbarDownload",
              "privacy": "public",
              "description": "Enables the download option in the toolbar (svg,csv,png)",
              "attribute": "toolbar-download"
            },
            {
              "kind": "field",
              "name": "plotHorizontal",
              "privacy": "public",
              "description": "Enable this to draw the bars horizontally",
              "attribute": "plot-horizontal"
            },
            {
              "kind": "field",
              "name": "grid",
              "privacy": "public",
              "description": "Draw the horizontal grid lines",
              "attribute": "grid"
            },
            {
              "kind": "field",
              "name": "chartType",
              "privacy": "public",
              "description": "\nline, area, bar are mixable\n\nradar, scatter, heatmap\n\npie donut polarArea radialBar can only consume 1 data series",
              "attribute": "chart-type"
            },
            {
              "kind": "field",
              "name": "stacked",
              "privacy": "public",
              "description": "WORK IN PROGRESS\nStacked bar charts are not mixable",
              "attribute": "stacked"
            },
            {
              "kind": "field",
              "name": "titleText",
              "privacy": "public",
              "description": "Set the title.",
              "attribute": "title-text"
            },
            {
              "kind": "field",
              "name": "titleAlign",
              "privacy": "public",
              "description": "Aligns the title. Possible values are 'left', 'center', 'right'\n\nDefault is **left**",
              "attribute": "title-align"
            },
            {
              "kind": "field",
              "name": "titleOffsetX",
              "privacy": "public",
              "description": "Moves the title for n pixels on the x-axis from the alignment direction",
              "attribute": "title-offset-x"
            },
            {
              "kind": "field",
              "name": "titleOffsetY",
              "privacy": "public",
              "description": "Moves the title for n pixels on the y-axis from the alignment direction",
              "attribute": "title-offset-y"
            },
            {
              "kind": "field",
              "name": "fixedHeight",
              "privacy": "public",
              "description": "Set a fixed height for the plot. Default is auto, this can be useful if you need to control the heights",
              "attribute": "fixed-height"
            },
            {
              "kind": "method",
              "name": "_initChart",
              "parameters": [
                {
                  "name": "apexOptions"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_FBPReady",
              "description": "flow is ready lifecycle method",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_registerDataSourceComponents",
              "parameters": [
                {
                  "name": "dataSources"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_fillInitialData"
            },
            {
              "kind": "field",
              "name": "apexOptions",
              "type": {
                "text": "object"
              },
              "default": "{\n      series: [],\n      yaxis: [],\n      // belize qualitative color palete\n      colors: [\n        '#5899DA',\n        '#E8743B',\n        '#19A979',\n        '#ED4A7B',\n        '#945ECF',\n        '#13A4B4',\n        '#525DF4',\n        '#BF399E',\n        '#6C8893',\n        '#EE6868',\n        '#2F6497',\n      ],\n      noData: {\n        text: 'No data.',\n        align: 'center',\n        verticalAlign: 'middle',\n        offsetX: 0,\n        offsetY: 0,\n        style: {\n          color: undefined,\n          fontSize: '14px',\n          fontFamily: undefined,\n        },\n      },\n      chart: {\n        // height: 550,\n        type: 'line',\n        stacked: false,\n        events: {},\n        toolbar: {\n          show: false, // disable by default\n          tools: {\n            download: false,\n            selection: true,\n            zoom: true,\n            zoomin: true,\n            zoomout: true,\n            pan: true,\n            reset: true,\n          },\n        },\n        sparkline: {\n          enabled: false,\n        },\n      },\n      grid: {\n        show: false, // https://apexcharts.com/docs/options/grid/\n        // zebra\n        // row: {\n        //  colors: [\"#f3f4f5\", \"#fff\"],\n        // }\n      },\n      dataLabels: {\n        enabled: false,\n      },\n\n      title: {\n        // text: 'XYZ - Analysis',\n        align: 'left',\n        // offsetX: 70,\n      },\n      stroke: {},\n\n      tooltip: {\n        enabled: false,\n        fixed: {\n          enabled: false,\n          position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft\n          offsetY: 30,\n          offsetX: 160,\n        },\n      },\n      legend: {\n        show: false,\n        position: 'bottom',\n        horizontalAlign: 'left',\n        offsetX: 0,\n        offsetY: 0,\n        formatter: (seriesName, opts) => {\n          if (\n            opts.w.config.yaxis[opts.seriesIndex] &&\n            opts.w.config.yaxis[opts.seriesIndex].legendLabel\n          ) {\n            return [opts.w.config.yaxis[opts.seriesIndex].legendLabel];\n          }\n          return [seriesName];\n        },\n      },\n      plotOptions: {},\n      xaxis: {\n        // type: \"datetime\",\n\n        // tickAmount: 6,\n        title: {\n          text: undefined,\n        },\n      },\n    }"
            }
          ],
          "events": [
            {
              "type": {
                "text": "Fieldnode"
              },
              "description": " Fired when a marker for this data source was clicked. Note: the event is fired from the furo-data-chart-binder",
              "name": "data-point-clicked"
            }
          ],
          "attributes": [
            {
              "name": "chart-type",
              "description": "\nline, area, bar are mixable\n\nradar, scatter, heatmap\n\npie donut polarArea radialBar can only consume 1 data series",
              "fieldName": "chartType"
            },
            {
              "name": "title-text",
              "description": "Set the title.",
              "fieldName": "titleText"
            },
            {
              "name": "title-align",
              "description": "Aligns the title. Possible values are 'left', 'center', 'right'\n\nDefault is **left**",
              "fieldName": "titleAlign"
            },
            {
              "name": "title-offset-x",
              "description": "Moves the title for n pixels on the x-axis from the alignment direction",
              "fieldName": "titleOffsetX"
            },
            {
              "name": "title-offset-y",
              "description": "Moves the title for n pixels on the y-axis from the alignment direction",
              "fieldName": "titleOffsetY"
            },
            {
              "name": "no-data-text",
              "description": "Set the text to display, if no data is given.\n\nIf this option is not set, the default is **No data.**",
              "fieldName": "noDataText"
            },
            {
              "name": "stacked",
              "description": "WORK IN PROGRESS\nStacked bar charts are not mixable",
              "fieldName": "stacked"
            },
            {
              "name": "data-labels",
              "description": "Enable labels with data on every item.",
              "fieldName": "dataLabels"
            },
            {
              "name": "fixed-height",
              "description": "Set a fixed height for the plot. Default is auto, this can be useful if you need to control the heights",
              "fieldName": "fixedHeight"
            },
            {
              "name": "tooltip",
              "description": "show a tooltip on mouseover",
              "fieldName": "tooltip"
            },
            {
              "name": "legend",
              "description": "Enables the legend on bottom left with offset 0:0",
              "fieldName": "legend"
            },
            {
              "name": "grid",
              "description": "Draw the horizontal grid lines",
              "fieldName": "grid"
            },
            {
              "name": "legend-align",
              "description": "Aligns the legend to `left` `center` `right`\n\ndefault is **left**",
              "fieldName": "legendAlign"
            },
            {
              "name": "legend-position",
              "description": "Set the position of the legend to `top`, `right`, `bottom`, `left`\n\nDefault is **bottom**",
              "fieldName": "legendPosition"
            },
            {
              "name": "legend-offset-x",
              "description": "Moves the legend in the **x** direction for n pixels from `legend-position`",
              "fieldName": "legendOffsetX"
            },
            {
              "name": "legend-offset-y",
              "description": "Moves the legend in the **y** direction for n pixels from `legend-position`",
              "fieldName": "legendOffsetY"
            },
            {
              "name": "toolbar",
              "description": "Enables the toolbar",
              "fieldName": "toolbar"
            },
            {
              "name": "toolbar-download",
              "description": "Enables the download option in the toolbar (svg,csv,png)",
              "fieldName": "toolbarDownload"
            },
            {
              "name": "plot-horizontal",
              "description": "Enable this to draw the bars horizontally",
              "fieldName": "plotHorizontal"
            },
            {
              "name": "sparkline",
              "description": "Hides all elements of the chart other than the primary graphic.\nUse this to visualize data in very small areas.",
              "fieldName": "sparkline"
            },
            {
              "name": "zebra",
              "description": "set zebra color like zebra=\"#f3f4f5, #fff\" to get stripes",
              "fieldName": "zebra"
            },
            {
              "name": "xaxis-title",
              "description": "Give the x-axis a title which will be displayed below the axis labels by default.",
              "fieldName": "xaxisTitle"
            },
            {
              "name": "xaxis-datetime",
              "description": "Set this to true if you have datetime, google.type.date or timestamp data on the x-axis",
              "fieldName": "xaxisDatetime"
            }
          ],
          "mixins": [
            {
              "name": "FBP",
              "package": "@furo/fbp"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "Display charts with data objects",
          "tagName": "furo-chart-display",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "furo-chart-display",
          "declaration": {
            "name": "FuroChartDisplay",
            "module": "src/furo-chart-display.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/furo-data-chart-binder.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`furo-data-chart-binder`\n Connects data objects (repeaterNodes) with the charting lib.\n\n Use multiple binders if you need more then one series per chart.\n\n ```html\n <furo-chart-display chart-type=\"bar\">\n    <furo-data-chart-binder\n        Æ’-bind-data=\"--projectDAO(*.entities)\"\n        data-field=\"data.cost_limit.units\"\n        category-field=\"data.description\"\n    ></furo-data-chart-binder>\n </furo-chart-display>\n ```",
          "name": "FuroDataChartBinder",
          "members": [
            {
              "kind": "field",
              "name": "axisLabelOpposite",
              "privacy": "public",
              "description": "Put the axis label on the opposite site (usually right)",
              "attribute": "axis-label-opposite"
            },
            {
              "kind": "field",
              "name": "axisLabel",
              "privacy": "public",
              "description": "Text for the y axis",
              "attribute": "axis-label"
            },
            {
              "kind": "field",
              "name": "axisLabelColor",
              "privacy": "public",
              "description": "Custom color for the y axis description text",
              "attribute": "axis-label-color"
            },
            {
              "kind": "field",
              "name": "axisBorder",
              "privacy": "public",
              "description": "Show a border on the right side of the y axis descriptions and labels.",
              "attribute": "axis-border"
            },
            {
              "kind": "field",
              "name": "axisBorderColor",
              "privacy": "public",
              "description": "Custom color for the border.",
              "attribute": "axis-border-color"
            },
            {
              "kind": "field",
              "name": "axisTicks",
              "privacy": "public",
              "description": "Show tick marks on the y axis.",
              "attribute": "axis-ticks"
            },
            {
              "kind": "field",
              "name": "axisTooltip",
              "privacy": "public",
              "description": "Show a tooltip with the current value while hovering.",
              "attribute": "axis-tooltip"
            },
            {
              "kind": "field",
              "name": "axisTicksColor",
              "privacy": "public",
              "description": "Custom color for the ticks",
              "attribute": "axis-ticks-color"
            },
            {
              "kind": "field",
              "name": "seriesName",
              "privacy": "public",
              "description": "Series with same name will get the same y-axis",
              "attribute": "series-name"
            },
            {
              "kind": "field",
              "name": "legendLabel",
              "privacy": "public",
              "description": "Label the Series for the legend. This text is also shown on the tooltips. This is useful when you have more then one data series.",
              "attribute": "legend-label"
            },
            {
              "kind": "method",
              "name": "bindData",
              "parameters": [
                {
                  "name": "data"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_dataPointSelection",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "context"
                },
                {
                  "name": "config"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_convertData",
              "description": "Prepares the data for the according chart display\n\nsome charts want 1 dimensional data (pie, donut) and others expect more dimensions (boxplot,...)",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_initEmptySeries"
            },
            {
              "kind": "method",
              "name": "_pathGet",
              "parameters": [
                {
                  "name": "root",
                  "description": "Object from which to dereference path from",
                  "type": {
                    "text": "Object"
                  }
                },
                {
                  "name": "path",
                  "description": "Path to read",
                  "type": {
                    "text": "string | !Array<string|number>"
                  }
                }
              ],
              "description": "Reads a value from a path.  If any sub-property in the path is `undefined`,\nthis method returns `undefined` (will never throw.",
              "return": {
                "type": {
                  "text": "*"
                }
              }
            },
            {
              "kind": "method",
              "name": "_split",
              "parameters": [
                {
                  "name": "path"
                }
              ]
            },
            {
              "kind": "field",
              "name": "strokeWidth",
              "type": {
                "text": "number"
              },
              "default": "1",
              "privacy": "public",
              "description": "Define the thickness of the lines in px.",
              "attribute": "chart-stroke-width"
            },
            {
              "kind": "field",
              "name": "markerSize",
              "type": {
                "text": "number"
              },
              "default": "0",
              "privacy": "public",
              "description": "Set the size of the markers (hover state) in px.",
              "attribute": "chart-marker-size"
            },
            {
              "kind": "field",
              "name": "strokeCurve",
              "type": {
                "text": "string"
              },
              "default": "'straight'",
              "privacy": "public",
              "description": "Define the curve style for line and area charts.\n\n Possible values: 'smooth', 'straight',  'stepline'",
              "attribute": "chart-curve"
            },
            {
              "kind": "field",
              "name": "options",
              "type": {
                "text": "object"
              },
              "default": "{\n      seriesName: undefined,\n      legendLabel: undefined, // custom field\n      opposite: false,\n      axisTicks: {\n        show: false,\n        borderType: 'solid',\n        color: '#666666',\n        width: 6,\n        offsetX: 0,\n        offsetY: 0,\n      },\n      axisBorder: {\n        show: false,\n        color: '#666666',\n        stroke: 1,\n      },\n      labels: {\n        show: false,\n        style: {\n          colors: '#666666',\n        },\n      },\n      title: {\n        style: {\n          color: '#666666',\n        },\n      },\n      tooltip: {\n        enabled: false,\n        offsetX: 0,\n      },\n    }"
            },
            {
              "kind": "field",
              "name": "dataField",
              "privacy": "public",
              "description": "Define the data field or fields here. For most charts this is **the y axis**.\n\nSome charts requires more then one data field (i.e. bubbles want at least 3 fields `data-field=\"data.start.day, data.end.day, data.start.day\"` ).",
              "attribute": "data-field"
            },
            {
              "kind": "field",
              "name": "categoryField",
              "privacy": "public",
              "description": "Define the category field here (only 1 field). You can think of this as it is the x axis for your chart.",
              "attribute": "category-field"
            },
            {
              "kind": "field",
              "name": "chartType",
              "privacy": "public",
              "description": "**Use this for mixed charts scenarios only**, prefer to define the chart-type on the chart-display.\nSpecify the default type on the display and set the custom type on this binder.",
              "attribute": "chart-type"
            },
            {
              "kind": "field",
              "name": "chartColor",
              "privacy": "public",
              "description": "If you need to give an explicit color for the series you can use this attribute.",
              "attribute": "chart-color"
            },
            {
              "kind": "field",
              "name": "xaxis",
              "privacy": "public",
              "attribute": "xaxis"
            }
          ],
          "events": [
            {
              "type": {
                "text": "Fieldnode"
              },
              "description": " Fired when a marker for this data source was clicked",
              "name": "data-point-clicked"
            },
            {
              "type": {
                "text": "data-series"
              },
              "description": " Fired when datasource has updated data",
              "name": "data-updated"
            }
          ],
          "attributes": [
            {
              "name": "data-field",
              "description": "Define the data field or fields here. For most charts this is **the y axis**.\n\nSome charts requires more then one data field (i.e. bubbles want at least 3 fields `data-field=\"data.start.day, data.end.day, data.start.day\"` ).",
              "fieldName": "dataField"
            },
            {
              "name": "category-field",
              "description": "Define the category field here (only 1 field). You can think of this as it is the x axis for your chart.",
              "fieldName": "categoryField"
            },
            {
              "name": "legend-label",
              "description": "Label the Series for the legend. This text is also shown on the tooltips. This is useful when you have more then one data series.",
              "fieldName": "legendLabel"
            },
            {
              "name": "series-name",
              "description": "Series with same name will get the same y-axis",
              "fieldName": "seriesName"
            },
            {
              "name": "chart-type",
              "description": "**Use this for mixed charts scenarios only**, prefer to define the chart-type on the chart-display.\nSpecify the default type on the display and set the custom type on this binder.",
              "fieldName": "chartType"
            },
            {
              "name": "chart-color",
              "description": "If you need to give an explicit color for the series you can use this attribute.",
              "fieldName": "chartColor"
            },
            {
              "name": "axis-label-opposite",
              "description": "Put the axis label on the opposite site (usually right)",
              "fieldName": "axisLabelOpposite"
            },
            {
              "name": "axis-label",
              "description": "Text for the y axis",
              "fieldName": "axisLabel"
            },
            {
              "name": "axis-label-color",
              "description": "Custom color for the y axis description text",
              "fieldName": "axisLabelColor"
            },
            {
              "name": "axis-border",
              "description": "Show a border on the right side of the y axis descriptions and labels.",
              "fieldName": "axisBorder"
            },
            {
              "name": "axis-border-color",
              "description": "Custom color for the border.",
              "fieldName": "axisBorderColor"
            },
            {
              "name": "axis-ticks",
              "description": "Show tick marks on the y axis.",
              "fieldName": "axisTicks"
            },
            {
              "name": "axis-tooltip",
              "description": "Show a tooltip with the current value while hovering.",
              "fieldName": "axisTooltip"
            },
            {
              "name": "axis-ticks-color",
              "description": "Custom color for the ticks",
              "fieldName": "axisTicksColor"
            },
            {
              "name": "chart-curve",
              "description": "Define the curve style for line and area charts.\n\n Possible values: 'smooth', 'straight',  'stepline'",
              "fieldName": "strokeCurve"
            },
            {
              "name": "chart-stroke-width",
              "description": "Define the thickness of the lines in px.",
              "fieldName": "strokeWidth"
            },
            {
              "name": "chart-marker-size",
              "description": "Set the size of the markers (hover state) in px.",
              "fieldName": "markerSize"
            },
            {
              "name": "xaxis",
              "fieldName": "xaxis"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "connect data to a chart",
          "tagName": "furo-data-chart-binder",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "furo-data-chart-binder",
          "declaration": {
            "name": "FuroDataChartBinder",
            "module": "src/furo-data-chart-binder.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/furo-data-context-menu-display.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FuroDataContextMenuDisplay",
          "members": [
            {
              "kind": "method",
              "name": "_FBPReady",
              "description": "flow is ready lifecycle method",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "hideMenu"
            },
            {
              "kind": "method",
              "name": "triggerNavigation",
              "parameters": [
                {
                  "name": "key"
                }
              ],
              "description": "Interface for the furo navigation pad"
            },
            {
              "kind": "field",
              "name": "borderDistance",
              "type": {
                "text": "number"
              },
              "default": "48"
            },
            {
              "kind": "field",
              "name": "_repeatsChanged"
            },
            {
              "kind": "field",
              "name": "condensed",
              "privacy": "public",
              "description": "set this for condensed mode",
              "attribute": "condensed",
              "reflects": true
            }
          ],
          "attributes": [
            {
              "name": "condensed",
              "description": "set this for condensed mode",
              "fieldName": "condensed"
            }
          ],
          "mixins": [
            {
              "name": "FBP",
              "package": "@furo/fbp"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "furo-data-context-menu-display",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FuroDataContextMenuDisplay",
          "declaration": {
            "name": "FuroDataContextMenuDisplay",
            "module": "src/furo-data-context-menu-display.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "furo-data-context-menu-display",
          "declaration": {
            "name": "FuroDataContextMenuDisplay",
            "module": "src/furo-data-context-menu-display.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/furo-data-context-menu.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`furo-data-context-menu`\n A  [material design](https://material.io/components/menus/) context menu or menu element.\n\n You have to put a `furo-data-context-menu-display` element in one of the parent elements of the element where you use the `furo-data-context-menu`.\n The app-shell is a good place for that.\n\n```html\n <furo-data-context-menu condensed position=\"below\" Æ’-trigger=\"--menuClkd\" Æ’-bind-data=\"--menuObject\" @-menu-item-selected=\"--menuItem\">\n     <furo-icon-button icon=\"menu\" @-click=\"--menuClkd\"></furo-icon-button>\n </furo-data-context-menu>\n```",
          "name": "FuroDataContextMenu",
          "slots": [
            {
              "type": {
                "text": "HTMLElement"
              },
              "description": "default slot to add an individual context menu opener component (e.g. furo-icon-button).",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "bindData",
              "parameters": [
                {
                  "name": "menu"
                },
                {
                  "description": "|| RepeaterNode}",
                  "name": "",
                  "type": {
                    "text": "Fieldnode"
                  }
                }
              ],
              "description": "Bind your menu object with the signature of menu.Menuitem or [menu.Menuitem]."
            },
            {
              "kind": "method",
              "name": "setContext",
              "parameters": [
                {
                  "name": "ctx",
                  "description": "Can be anything, will be returned at the menu-item-selected method",
                  "type": {
                    "text": "*"
                  }
                }
              ],
              "description": "Sets the context. Use this if you want to set a Object as context"
            },
            {
              "kind": "method",
              "name": "trigger",
              "parameters": [
                {
                  "name": "byKeyboard"
                }
              ],
              "description": "Triggers the context menu. Set by keyboard to true to focus the first element for keyboard navigation"
            },
            {
              "kind": "method",
              "name": "triggerContext",
              "parameters": [
                {
                  "name": "context",
                  "type": {
                    "text": "Object"
                  }
                },
                {
                  "name": "byKeyboard"
                }
              ],
              "description": "triggers the menu with context"
            },
            {
              "kind": "method",
              "name": "_FBPReady",
              "description": "flow is ready lifecycle method",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_context",
              "privacy": "public",
              "description": "Use this to set a string value as context.",
              "attribute": "context"
            },
            {
              "kind": "field",
              "name": "condensed",
              "privacy": "public",
              "description": "set this for condensed mode.",
              "attribute": "condensed"
            }
          ],
          "events": [
            {
              "type": {
                "text": "{context, menuitem}"
              },
              "description": " Fired when context menu was triggered",
              "name": "open-furo-data-menu-requested"
            },
            {
              "type": {
                "text": "{context, menuitem}"
              },
              "description": " Fired when a menu item is selected",
              "name": "menu-item-selected"
            }
          ],
          "attributes": [
            {
              "name": "context",
              "description": "Use this to set a string value as context.",
              "fieldName": "_context"
            },
            {
              "name": "condensed",
              "description": "set this for condensed mode.",
              "fieldName": "condensed"
            }
          ],
          "mixins": [
            {
              "name": "FBP",
              "package": "@furo/fbp"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "a context menu",
          "tagName": "furo-data-context-menu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FuroDataContextMenu",
          "declaration": {
            "name": "FuroDataContextMenu",
            "module": "src/furo-data-context-menu.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "furo-data-context-menu",
          "declaration": {
            "name": "FuroDataContextMenu",
            "module": "src/furo-data-context-menu.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/furo-data-filter-checkbox.js",
      "declarations": [
        {
          "kind": "class",
          "description": "INITIAL VERSION\n`furo-data-filter-text`\nText element bindable with type filter.Condition",
          "name": "FuroDataFilterCheckbox",
          "members": [
            {
              "kind": "method",
              "name": "_FBPReady",
              "description": "flow is ready lifecycle method",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "method",
              "name": "bindFilterCondition",
              "parameters": [
                {
                  "name": "fc"
                }
              ],
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "comparators",
              "privacy": "public",
              "description": "Semicolon separated list of acceptable comparators.\n\nlike: gt, lt",
              "attribute": "comparators",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "defaultComparator",
              "privacy": "public",
              "description": "set this to init with this comparator or set the comparator to this value on clear",
              "attribute": "default-comparator",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "privacy": "public",
              "description": "The label for the input",
              "attribute": "label",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "hideComparator",
              "privacy": "public",
              "description": "hide the comparator dropdown",
              "attribute": "hide-comparator",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "hideClear",
              "privacy": "public",
              "description": "hide the clear",
              "attribute": "hide-clear",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "condensed",
              "privacy": "public",
              "attribute": "condensed",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseFilter",
            "module": "/src/basefilter.js"
          },
          "summary": "text filter",
          "tagName": "furo-data-filter-checkbox",
          "customElement": true,
          "attributes": [
            {
              "name": "comparators",
              "description": "Semicolon separated list of acceptable comparators.\n\nlike: gt, lt",
              "fieldName": "comparators",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "default-comparator",
              "description": "set this to init with this comparator or set the comparator to this value on clear",
              "fieldName": "defaultComparator",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "label",
              "description": "The label for the input",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "hide-comparator",
              "description": "hide the comparator dropdown",
              "fieldName": "hideComparator",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "hide-clear",
              "description": "hide the clear",
              "fieldName": "hideClear",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "condensed",
              "fieldName": "condensed",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "furo-data-filter-checkbox",
          "declaration": {
            "name": "FuroDataFilterCheckbox",
            "module": "src/furo-data-filter-checkbox.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/furo-data-filter-date.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`furo-data-filter-date`\nDate element bindable with type filter.Condition\n\n```\n<date-filter\n hide-clear\n condensed\n Æ’-bind-filter-condition=\"--filteDO(*.due_date)\"\n></date-filter>\n```",
          "name": "FuroDataFilterDate",
          "members": [
            {
              "kind": "method",
              "name": "_FBPReady",
              "description": "flow is ready lifecycle method",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "method",
              "name": "bindFilterCondition",
              "parameters": [
                {
                  "name": "fc"
                }
              ],
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "comparators",
              "privacy": "public",
              "description": "Semicolon separated list of acceptable comparators.\n\nlike: gt, lt",
              "attribute": "comparators",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "defaultComparator",
              "privacy": "public",
              "description": "set this to init with this comparator or set the comparator to this value on clear",
              "attribute": "default-comparator",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "privacy": "public",
              "description": "The label for the input",
              "attribute": "label",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "hideComparator",
              "privacy": "public",
              "description": "hide the comparator dropdown",
              "attribute": "hide-comparator",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "hideClear",
              "privacy": "public",
              "description": "hide the clear",
              "attribute": "hide-clear",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "condensed",
              "privacy": "public",
              "attribute": "condensed",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseFilter",
            "module": "/src/basefilter.js"
          },
          "summary": "date filter",
          "tagName": "furo-data-filter-date",
          "customElement": true,
          "attributes": [
            {
              "name": "comparators",
              "description": "Semicolon separated list of acceptable comparators.\n\nlike: gt, lt",
              "fieldName": "comparators",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "default-comparator",
              "description": "set this to init with this comparator or set the comparator to this value on clear",
              "fieldName": "defaultComparator",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "label",
              "description": "The label for the input",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "hide-comparator",
              "description": "hide the comparator dropdown",
              "fieldName": "hideComparator",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "hide-clear",
              "description": "hide the clear",
              "fieldName": "hideClear",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "condensed",
              "fieldName": "condensed",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "furo-data-filter-date",
          "declaration": {
            "name": "FuroDataFilterDate",
            "module": "src/furo-data-filter-date.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/furo-data-filter-slot.js",
      "declarations": [
        {
          "kind": "class",
          "description": "INITIAL VERSION\n\n`furo-data-filter-slot`\n Throw in any component to use it as a filter\n\n The component must emit a **value-changed** event with the value you want to have in the condition\n\n The component can emit a **clear** event to clear the filter\n\n The values of the component are not updated from this component. You have to do an additional binding by yourself if needed.\n Do not forget that the condition value always comes as a string, when binding to your component.",
          "name": "FuroDataFilterSlot",
          "slots": [
            {
              "type": {
                "text": "HTMLElement"
              },
              "description": "default slot to add a filter component (must emit a **value-changed** event).",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "_FBPReady",
              "description": "flow is ready lifecycle method",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "method",
              "name": "bindFilterCondition",
              "parameters": [
                {
                  "name": "fc"
                }
              ],
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "comparators",
              "privacy": "public",
              "description": "Semicolon separated list of acceptable comparators.\n\nlike: gt, lt",
              "attribute": "comparators",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "defaultComparator",
              "privacy": "public",
              "description": "set this to init with this comparator or set the comparator to this value on clear",
              "attribute": "default-comparator",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "privacy": "public",
              "description": "The label for the input",
              "attribute": "label",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "hideComparator",
              "privacy": "public",
              "description": "hide the comparator dropdown",
              "attribute": "hide-comparator",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "hideClear",
              "privacy": "public",
              "description": "hide the clear",
              "attribute": "hide-clear",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "condensed",
              "privacy": "public",
              "attribute": "condensed",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseFilter",
            "module": "/src/basefilter.js"
          },
          "summary": "slot for filters",
          "tagName": "furo-data-filter-slot",
          "customElement": true,
          "attributes": [
            {
              "name": "comparators",
              "description": "Semicolon separated list of acceptable comparators.\n\nlike: gt, lt",
              "fieldName": "comparators",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "default-comparator",
              "description": "set this to init with this comparator or set the comparator to this value on clear",
              "fieldName": "defaultComparator",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "label",
              "description": "The label for the input",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "hide-comparator",
              "description": "hide the comparator dropdown",
              "fieldName": "hideComparator",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "hide-clear",
              "description": "hide the clear",
              "fieldName": "hideClear",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "condensed",
              "fieldName": "condensed",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "furo-data-filter-slot",
          "declaration": {
            "name": "FuroDataFilterSlot",
            "module": "src/furo-data-filter-slot.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/furo-data-filter-text.js",
      "declarations": [
        {
          "kind": "class",
          "description": "INITIAL VERSION\n`furo-data-filter-text`\nText element bindable with type filter.Condition",
          "name": "FuroDataFilterText",
          "members": [
            {
              "kind": "method",
              "name": "_FBPReady",
              "description": "flow is ready lifecycle method",
              "privacy": "private",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "method",
              "name": "bindFilterCondition",
              "parameters": [
                {
                  "name": "fc"
                }
              ],
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "comparators",
              "privacy": "public",
              "description": "Semicolon separated list of acceptable comparators.\n\nlike: gt, lt",
              "attribute": "comparators",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "defaultComparator",
              "privacy": "public",
              "description": "set this to init with this comparator or set the comparator to this value on clear",
              "attribute": "default-comparator",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "label",
              "privacy": "public",
              "description": "The label for the input",
              "attribute": "label",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "hideComparator",
              "privacy": "public",
              "description": "hide the comparator dropdown",
              "attribute": "hide-comparator",
              "reflects": true,
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "hideClear",
              "privacy": "public",
              "description": "hide the clear",
              "attribute": "hide-clear",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "kind": "field",
              "name": "condensed",
              "privacy": "public",
              "attribute": "condensed",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            }
          ],
          "superclass": {
            "name": "BaseFilter",
            "module": "/src/basefilter.js"
          },
          "summary": "text filter",
          "tagName": "furo-data-filter-text",
          "customElement": true,
          "attributes": [
            {
              "name": "comparators",
              "description": "Semicolon separated list of acceptable comparators.\n\nlike: gt, lt",
              "fieldName": "comparators",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "default-comparator",
              "description": "set this to init with this comparator or set the comparator to this value on clear",
              "fieldName": "defaultComparator",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "label",
              "description": "The label for the input",
              "fieldName": "label",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "hide-comparator",
              "description": "hide the comparator dropdown",
              "fieldName": "hideComparator",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "hide-clear",
              "description": "hide the clear",
              "fieldName": "hideClear",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            },
            {
              "name": "condensed",
              "fieldName": "condensed",
              "inheritedFrom": {
                "name": "BaseFilter",
                "module": "src/basefilter.js"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "furo-data-filter-text",
          "declaration": {
            "name": "FuroDataFilterText",
            "module": "src/furo-data-filter-text.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/furo-data-hide-content.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`furo-data-hide-content` hides content in dependency to a boolean field value.\n\nIt is also possible to call the `hide()` and `show()` methods to show and hide the content and update the value.\n\n\n```\n<furo-data-hide-content Æ’-bind-data=\"--bind(*.bool)\" Æ’-hide=\"--hideClicked\" Æ’-show=\"--showClicked\">\n <div>some content</div>\n</furo-collapsible-box>\n```",
          "name": "FuroDataHideContent",
          "slots": [
            {
              "type": {
                "text": "HTMLElement [0..n]"
              },
              "description": "default slot to add content.",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "bindData",
              "parameters": [
                {
                  "name": "fieldNode",
                  "description": "a Field object",
                  "type": {
                    "text": "Object|FieldNode"
                  }
                }
              ],
              "description": "Bind a entity field to the date-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`"
            },
            {
              "kind": "method",
              "name": "_checkInversedState",
              "parameters": [
                {
                  "name": "bool"
                }
              ]
            },
            {
              "kind": "method",
              "name": "hide",
              "description": "hides the content"
            },
            {
              "kind": "method",
              "name": "show",
              "description": "shows the content"
            },
            {
              "kind": "method",
              "name": "toggle",
              "description": "Toggle the current visibility state."
            },
            {
              "kind": "field",
              "name": "hidden",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "method",
              "name": "_notify",
              "parameters": [
                {
                  "name": "eventname"
                }
              ]
            },
            {
              "kind": "field",
              "name": "_hidden",
              "privacy": "private",
              "description": "Internal variable to update the attribute, which triggers the css",
              "attribute": "hidden",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "hideOnFalse",
              "privacy": "public",
              "description": "Hide element on false instead of true",
              "attribute": "hide-on-false"
            }
          ],
          "events": [
            {
              "type": {
                "text": "{Boolean} current visibility state"
              },
              "description": " Fired when the visibility changed",
              "name": "value-changed"
            },
            {
              "type": {
                "text": "void"
              },
              "description": " Fired when the content gets hided",
              "name": "hided"
            },
            {
              "type": {
                "text": "void"
              },
              "description": " Fired when the content gets visible",
              "name": "showed"
            }
          ],
          "attributes": [
            {
              "name": "hidden",
              "description": "Internal variable to update the attribute, which triggers the css",
              "fieldName": "_hidden"
            },
            {
              "name": "hide-on-false",
              "description": "Hide element on false instead of true",
              "fieldName": "hideOnFalse"
            }
          ],
          "mixins": [
            {
              "name": "FBP",
              "package": "@furo/fbp"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "hide content",
          "tagName": "furo-data-hide-content",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "furo-data-hide-content",
          "declaration": {
            "name": "FuroDataHideContent",
            "module": "src/furo-data-hide-content.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/furo-data-menu-action-filter.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`furo-data-menu-action-filter`\ntodo Describe your element",
          "name": "FuroDataMenuActionFilter",
          "members": [
            {
              "kind": "method",
              "name": "_FBPReady",
              "description": "flow is ready lifecycle method",
              "privacy": "private"
            }
          ],
          "mixins": [
            {
              "name": "FBP",
              "package": "@furo/fbp"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "todo shortdescription",
          "tagName": "furo-data-menu-action-filter",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "furo-data-menu-action-filter",
          "declaration": {
            "name": "FuroDataMenuActionFilter",
            "module": "src/furo-data-menu-action-filter.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/furo-data-table-toggle.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`furo-data-table-toggle`\nToggle with HTML entity",
          "name": "FuroDataTableToggle",
          "cssProperties": [
            {
              "type": {
                "text": "8px"
              },
              "description": "left spacing of the toggle sign",
              "name": "--spacing-xxs",
              "default": "8px"
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "_FBPReady",
              "description": "flow is ready lifecycle method",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "setField",
              "parameters": [
                {
                  "name": "name"
                }
              ],
              "description": "Sets an identity"
            },
            {
              "kind": "method",
              "name": "toggle"
            },
            {
              "kind": "field",
              "name": "on",
              "type": {
                "text": "boolean"
              },
              "default": "true"
            },
            {
              "kind": "field",
              "name": "field",
              "type": {
                "text": "string"
              },
              "default": "''",
              "privacy": "public",
              "attribute": "field",
              "reflects": true
            }
          ],
          "events": [
            {
              "name": "ascending",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired on state toggle, Payload: identity"
            },
            {
              "name": "descending",
              "type": {
                "text": "CustomEvent"
              },
              "description": "Fired on state toggle, Payload: identity"
            }
          ],
          "attributes": [
            {
              "name": "field",
              "fieldName": "field"
            }
          ],
          "mixins": [
            {
              "name": "FBP",
              "package": "@furo/fbp"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "helper for furo-data-table",
          "tagName": "furo-data-table-toggle",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "furo-data-table-toggle",
          "declaration": {
            "name": "FuroDataTableToggle",
            "module": "src/furo-data-table-toggle.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/furo-data-table.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`furo-data-table`\nRead only data table based on the response type from the rest api spec.",
          "name": "FuroDataTable",
          "cssProperties": [
            {
              "type": {
                "text": "white"
              },
              "description": "Background color of the header row",
              "name": "--furo-data-table-header-background",
              "default": "--surface"
            },
            {
              "type": {
                "text": "black"
              },
              "description": "Color of the header row",
              "name": "--furo-data-table-header-on-background",
              "default": "--on-surface"
            },
            {
              "type": {
                "text": "white"
              },
              "description": "Background color of the element",
              "name": "--furo-data-table-background",
              "default": "--surface"
            },
            {
              "type": {
                "text": "black"
              },
              "description": "Color of the element",
              "name": "--furo-data-table-on-background",
              "default": "--on-surface"
            },
            {
              "type": {
                "text": "rgba(0, 0, 0, .12)"
              },
              "description": "Color of separator lines Tags: data-ui",
              "name": "--data-table-separator",
              "default": "--separator"
            }
          ],
          "slots": [
            {
              "type": {
                "text": "HTMLElement [0..n]"
              },
              "description": "default slot to add elements to the footer (e.g. pagination component)",
              "name": ""
            }
          ],
          "members": [
            {
              "kind": "method",
              "name": "_FBPReady",
              "description": "flow is ready lifecycle method",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "type",
              "type": {
                "text": "string"
              },
              "default": "''",
              "privacy": "public",
              "description": "Typedefinition of row items\nREST SPEC Type\nSupported __ui flags: \"flags\": [\"align-right\"] e.g. for numeric values\ne.g. task.Task.[type]",
              "attribute": "type"
            },
            {
              "kind": "method",
              "name": "_checkType",
              "parameters": [
                {
                  "name": "type"
                }
              ],
              "description": "SPEC Type checker\nBuilds the column Array for the inner template",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_init",
              "parameters": [
                {
                  "name": "fields"
                }
              ],
              "description": "Prepare columns form attribute fields",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_applySortableFields",
              "parameters": [
                {
                  "name": "fields"
                }
              ],
              "description": "parses the attribute sortable-fields\nand creates an internal array of sortable fields",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_internalAddColumn",
              "parameters": [
                {
                  "name": "c"
                }
              ],
              "description": "Internal addColumn"
            },
            {
              "kind": "method",
              "name": "bindData",
              "parameters": [
                {
                  "name": "collectionNode",
                  "type": {
                    "text": "CollectionNode"
                  }
                }
              ],
              "description": "Binds data-object to data-table"
            },
            {
              "kind": "method",
              "name": "triggerNavigation",
              "parameters": [
                {
                  "name": "key"
                }
              ],
              "description": "Integration of furo-navigation-pad keys"
            },
            {
              "kind": "method",
              "name": "focus",
              "description": "Triggers wire name --focus for internal use"
            },
            {
              "kind": "method",
              "name": "first",
              "description": "Focuses the first table row element"
            },
            {
              "kind": "method",
              "name": "select",
              "description": "Focuses the first table row element"
            },
            {
              "kind": "method",
              "name": "last",
              "description": "Focuses the last table row element"
            },
            {
              "kind": "method",
              "name": "prev",
              "description": "Focuses previous table row element"
            },
            {
              "kind": "method",
              "name": "next",
              "description": "Focuses next table row element"
            },
            {
              "kind": "method",
              "name": "_selectRow",
              "parameters": [
                {
                  "name": "e"
                }
              ],
              "description": "Handles table row select",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_focusRowByIndex",
              "parameters": [
                {
                  "name": "idx"
                }
              ],
              "description": "Comfort function to focus a specific table row\nby index",
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "_specs"
            },
            {
              "kind": "field",
              "name": "fields",
              "type": {
                "text": "string"
              },
              "default": "''",
              "privacy": "public",
              "description": "list of fields which columns should be displayed\ncomma separated field list",
              "attribute": "fields",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "sortableFields",
              "type": {
                "text": "string"
              },
              "default": "''",
              "privacy": "public",
              "description": "list of sortable fields\ncomma separated field list",
              "attribute": "sortable-fields",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "cols",
              "type": {
                "text": "Array"
              },
              "description": "Column meta information\nused to render all the column stuff",
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_selectedIndex",
              "type": {
                "text": "number"
              },
              "default": "-1"
            },
            {
              "kind": "field",
              "name": "hideHeader",
              "type": {
                "text": "boolean"
              },
              "default": "false"
            },
            {
              "kind": "field",
              "name": "_checkedRows",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_collection",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "_fieldQueue",
              "type": {
                "text": "array"
              },
              "default": "[]"
            },
            {
              "kind": "field",
              "name": "singleSelection",
              "privacy": "public",
              "description": "if True the single row selection mode is activated\nNo bulk action or checkboxes are available",
              "attribute": "single-selection"
            },
            {
              "kind": "field",
              "name": "hideHead",
              "privacy": "public",
              "description": "if True the header row is unvisible",
              "attribute": "hide-head"
            }
          ],
          "events": [
            {
              "name": "data-loaded",
              "type": {
                "text": "this"
              },
              "description": " Fired when inject data has successfully finished."
            },
            {
              "name": "tablerow-selected",
              "type": {
                "text": "Entity"
              },
              "description": " Fired when a table row has been selected."
            },
            {
              "type": {
                "text": "string"
              },
              "description": " Fired when spec could not be loaded. The string contains the failing spec name.",
              "name": "spec-error"
            },
            {
              "type": {
                "text": "Array of raw Entities"
              },
              "description": " Fired when a row is checked or unchecked",
              "name": "checkstate-changed"
            }
          ],
          "attributes": [
            {
              "name": "type",
              "description": "Typedefinition of row items\nREST SPEC Type\nSupported __ui flags: \"flags\": [\"align-right\"] e.g. for numeric values\ne.g. task.Task.[type]",
              "fieldName": "type"
            },
            {
              "name": "fields",
              "description": "list of fields which columns should be displayed\ncomma separated field list",
              "fieldName": "fields"
            },
            {
              "name": "sortable-fields",
              "description": "list of sortable fields\ncomma separated field list",
              "fieldName": "sortableFields"
            },
            {
              "name": "single-selection",
              "description": "if True the single row selection mode is activated\nNo bulk action or checkboxes are available",
              "fieldName": "singleSelection"
            },
            {
              "name": "hide-head",
              "description": "if True the header row is unvisible",
              "fieldName": "hideHead"
            }
          ],
          "mixins": [
            {
              "name": "FBP",
              "package": "@furo/fbp"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "type based data table",
          "tagName": "furo-data-table",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "furo-data-table",
          "declaration": {
            "name": "FuroDataTable",
            "module": "src/furo-data-table.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/furo-type-renderer.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`furo-type-renderer`\nThe furo-type-renderer is used to display type specific data. It uses **display** as default context and will warn you\non the console if the requested `context-[type-name]` does not exist or was not imported.\n\nThere is a standard set of display components @furo/ui5/src/standard-type-renderers for rendering the individual types.\n\nThe standard ui5 set can be integrated with the import\n- import '@furo/ui5/src/standard-type-renderers/display-registry.js'.\n\nThe standard material set can be integrated with the import\n- import '@furo/data-ui/src/standard-type-renderers/display-registry.js'.\n\nIf you want to implement an individual display of a type, you need your own `context-[type-name]` component and import it.\n\nfor repeated fields you should write your own context-[type-name]-repeated component and import it.\nIf no context-[type-name]-repeated exists, the renderer will use the display-[type] component as fallback and\ndisplay it repeatedly, this is ok for a lot of cases.\n\n## Naming convention\n\n```\ndisplay-google-type-timeofday\n------- ---------------------\n   |             |\ncontext      type-name\n\n# examples:\ncell-string\ncelledit-string\ndisplay-string\nyourcontext-string\n\nThe method to evaluate the renderer is built as following:\n\ncontext-[(package.type).replaceAll('.', '-').toLocaleLowerCase()]\n```\n\n\n\n## Basic Usage\n```\n  <furo-type-renderer Æ’-bind-data=\"--dao(*.data.fieldname)\"></furo-type-renderer>\n```\n\n## Writing your own renderer\nThe only API you need to implement in your component is the `bindData()` method.\nYou just have to follow the naming convention for your renderer.",
          "name": "FuroTypeRenderer",
          "members": [
            {
              "kind": "method",
              "name": "bindData",
              "parameters": [
                {
                  "name": "fieldNode"
                }
              ],
              "description": "Evaluates the component name\nSpecial treatment for google.protobuf.Any"
            },
            {
              "kind": "method",
              "name": "_createDisplay",
              "description": "Creates the component for single fields",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_createRepeatedDisplay",
              "description": "Creates the component for repeated fields\nComponent naming: [package-type]-repeated\n\nFallback: if no -repeated component is available, a flow-repeat is used...",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_addElement",
              "parameters": [
                {
                  "name": "el"
                }
              ],
              "description": "Attribute handling\nAdding to DOM",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_warning"
            },
            {
              "kind": "field",
              "name": "tpl",
              "default": "html``"
            },
            {
              "kind": "field",
              "name": "context",
              "type": {
                "text": "string"
              },
              "default": "'display'",
              "privacy": "public",
              "description": "Set the context if you need another then display.\nPrebuilt context renderers exist for display, cell, celledit.",
              "attribute": "context"
            },
            {
              "kind": "field",
              "name": "valueState",
              "privacy": "public",
              "description": "Value State",
              "attribute": "value-state",
              "reflects": true
            },
            {
              "kind": "field",
              "name": "disabled",
              "privacy": "public",
              "description": "A Boolean attribute which, if present, means this field is displayed in disabled state.",
              "attribute": "disabled"
            }
          ],
          "attributes": [
            {
              "name": "value-state",
              "description": "Value State",
              "fieldName": "valueState"
            },
            {
              "name": "disabled",
              "description": "A Boolean attribute which, if present, means this field is displayed in disabled state.",
              "fieldName": "disabled"
            },
            {
              "name": "context",
              "description": "Set the context if you need another then display.\nPrebuilt context renderers exist for display, cell, celledit.",
              "fieldName": "context"
            }
          ],
          "mixins": [
            {
              "name": "FBP",
              "package": "@furo/fbp/src/fbp.js"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "type rendering",
          "tagName": "furo-type-renderer",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "furo-type-renderer",
          "declaration": {
            "name": "FuroTypeRenderer",
            "module": "src/furo-type-renderer.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/furo-data-context-menu-item.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`furo-data-context-menu-item` is a helper component for `furo-data-context-menu`.\n\nUse [`furo-data-context-menu`](?t=FuroDataContextMenu) to show a context menu.",
          "name": "FuroDataContextMenuItem",
          "members": [
            {
              "kind": "method",
              "name": "_FBPReady",
              "description": "flow is ready lifecycle method",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "bindData",
              "parameters": [
                {
                  "name": "menuNode"
                }
              ]
            },
            {
              "kind": "method",
              "name": "_openSub",
              "parameters": [
                {
                  "name": "byKeyboard",
                  "description": "Boolean"
                }
              ],
              "description": "send event to open the submenu",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_closeSub",
              "description": "The submenu item was set from the _openSub() event response",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "_selectItem",
              "description": "Select the item, furo-data-context-menu callback will be called",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "select",
              "parameters": [
                {
                  "name": "key"
                }
              ],
              "description": "selects the item if it does not have child elements"
            },
            {
              "kind": "method",
              "name": "_mouseSelect",
              "description": "Open the item if it have children",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "index",
              "parameters": [
                {
                  "name": "i"
                }
              ],
              "description": "store the index for mouseover focus"
            },
            {
              "kind": "method",
              "name": "setFocused",
              "description": "mark item as focused"
            },
            {
              "kind": "method",
              "name": "unsetFocused",
              "description": "mark item as unfocused"
            },
            {
              "kind": "field",
              "name": "focused",
              "privacy": "public",
              "description": "focused state",
              "attribute": "focused",
              "reflects": true
            }
          ],
          "events": [
            {
              "type": {
                "text": "index"
              },
              "description": " Fired when hovered with mouse",
              "name": "mousefocus"
            },
            {
              "type": {
                "text": "menu: this.menuitem, initiator: this"
              },
              "description": " Fired when submenu should be opened",
              "name": "opensub-requested"
            },
            {
              "type": {
                "text": "item"
              },
              "description": " Fired when item was selected",
              "name": "item-selected"
            }
          ],
          "attributes": [
            {
              "name": "focused",
              "description": "focused state",
              "fieldName": "focused"
            }
          ],
          "mixins": [
            {
              "name": "FBP",
              "package": "@furo/fbp"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "helper",
          "tagName": "furo-data-context-menu-item",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FuroDataContextMenuItem",
          "declaration": {
            "name": "FuroDataContextMenuItem",
            "module": "src/lib/furo-data-context-menu-item.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "furo-data-context-menu-item",
          "declaration": {
            "name": "FuroDataContextMenuItem",
            "module": "src/lib/furo-data-context-menu-item.js"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "src/lib/furo-data-context-submenu.js",
      "declarations": [
        {
          "kind": "class",
          "description": "`furo-data-context-submenu` is a helper component for `furo-data-context-menu`.\n\nUse [`furo-data-context-menu`](?t=FuroDataContextMenu) to show a context menu.",
          "name": "FuroDataContextSubmenu",
          "members": [
            {
              "kind": "method",
              "name": "_FBPReady",
              "description": "flow is ready lifecycle method",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "init",
              "parameters": [
                {
                  "name": "e"
                },
                {
                  "name": "display"
                },
                {
                  "name": "byKeyboard"
                }
              ]
            },
            {
              "kind": "method",
              "name": "hideMenu"
            },
            {
              "kind": "method",
              "name": "triggerNavigation",
              "parameters": [
                {
                  "name": "key"
                }
              ],
              "description": "Interface for the furo navigation pad"
            },
            {
              "kind": "field",
              "name": "borderDistance",
              "type": {
                "text": "number"
              },
              "default": "48"
            },
            {
              "kind": "field",
              "name": "depth",
              "privacy": "public",
              "description": "Depth of the submenu",
              "attribute": "depth"
            }
          ],
          "attributes": [
            {
              "name": "depth",
              "description": "Depth of the submenu",
              "fieldName": "depth"
            }
          ],
          "mixins": [
            {
              "name": "FBP",
              "package": "@furo/fbp"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "summary": "helper",
          "tagName": "furo-data-context-submenu",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FuroDataContextSubmenu",
          "declaration": {
            "name": "FuroDataContextSubmenu",
            "module": "src/lib/furo-data-context-submenu.js"
          }
        },
        {
          "kind": "custom-element-definition",
          "name": "furo-data-context-submenu",
          "declaration": {
            "name": "FuroDataContextSubmenu",
            "module": "src/lib/furo-data-context-submenu.js"
          }
        }
      ]
    }
  ]
}
