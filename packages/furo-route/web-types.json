{
  "$schema": "https://raw.githubusercontent.com/JetBrains/web-types/master/schema/web-types.json",
  "name": "@furo/route",
  "version": "3.1.0",
  "description-markup": "markdown",
  "default-icon": "icon.svg",
  "contributions": {
    "html": {
      "elements": [
        {
          "name": "furo-pages",
          "description": "Simple content switcher\n---\n\n\n### **Methods:**\n - **activatePage(pageName: _string_)** - Activate a page by name\n- **injectLocation(location: _LocationObject_): _boolean_** - Inject the location Object from furo-location. The page which is defined in location.pathSegments[0] will get activated.\n\nTo meke \"sub\" pages do not forget to enable the `url-space-regex` property on the *furo-location* component which feeds this component.\n\nIf the page/view does not exist, and you have a page \"404\" defined, the 404 will be shown\n\nIf the page/view does not exist AND 404 does not exist, the default page gets activated.\n- **isWebComponent(localName: _string_): _boolean_** - Checks if a node is a web component.\n\n### **Slots:**\n - **default** - default slot to add pages.",
          "doc-url": "",
          "attributes": [
            {
              "name": "default",
              "description": "Set the default page to show.",
              "value": {
                "type": "string",
                "default": "'default'"
              },
              "priority": "high"
            },
            {
              "name": "flex",
              "description": "Enables the flex mode when used in a flex parent like vertical-flex.",
              "value": {
                "type": "boolean"
              },
              "priority": "high"
            },
            {
              "name": "attribute-name-for-select-state",
              "value": {
                "type": "string",
                "default": "'selected'"
              },
              "priority": "high"
            },
            {
              "name": "page",
              "description": "For simple pages like tabs, set the page by string",
              "value": {
                "type": "string"
              },
              "priority": "high"
            },
            {
              "name": "mode",
              "description": "The `default` mode (recommended) removes your node from the render tree and is the fastest mode. It uses more memory than the `destructive` mode.\n\nThe state of the disabled element is kept, form fields which are filled, are the same as before you left the page.\n\n---\n\nThe `destructive` mode removes and destroys the element which is deactivated from the dom\nand will insert it back to the dom when they are activated (insertAdjacentHTML).\n\nThe insertAdjacentHTML() method does not reparse the element it is being used on,\nand thus it does not corrupt the existing elements inside that element.\nThis avoids the extra step of serialization, making it much faster than direct innerHTML manipulation.\n\nThis `destructive` mode is uses less memory, but **looses the state** of the disabled element and is a little bit slower.\n\nUse this if you know what you are doing, because the connectedCallback and disconnectedCallback of every item in your page is also called and everything is built up freshly.",
              "value": {
                "type": "\"default\" | \"destructive\"",
                "default": "'default'"
              },
              "priority": "high"
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "default slot to add pages."
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "urlSpaceRegex",
                "type": "string"
              },
              {
                "name": "page",
                "description": "For simple pages like tabs, set the page by string",
                "type": "string"
              },
              {
                "name": "mode",
                "description": "The `default` mode (recommended) removes your node from the render tree and is the fastest mode. It uses more memory than the `destructive` mode.\n\nThe state of the disabled element is kept, form fields which are filled, are the same as before you left the page.\n\n---\n\nThe `destructive` mode removes and destroys the element which is deactivated from the dom\nand will insert it back to the dom when they are activated (insertAdjacentHTML).\n\nThe insertAdjacentHTML() method does not reparse the element it is being used on,\nand thus it does not corrupt the existing elements inside that element.\nThis avoids the extra step of serialization, making it much faster than direct innerHTML manipulation.\n\nThis `destructive` mode is uses less memory, but **looses the state** of the disabled element and is a little bit slower.\n\nUse this if you know what you are doing, because the connectedCallback and disconnectedCallback of every item in your page is also called and everything is built up freshly.",
                "type": "\"default\" | \"destructive\""
              }
            ],
            "events": [],
            "methods": [
              {
                "name": "inject-location",
                "description": "Inject the location Object from furo-location. The page which is defined in location.pathSegments[0] will get activated.\n\nTo meke \"sub\" pages do not forget to enable the `url-space-regex` property on the *furo-location* component which feeds this component.\n\nIf the page/view does not exist, and you have a page \"404\" defined, the 404 will be shown\n\nIf the page/view does not exist AND 404 does not exist, the default page gets activated.",
                "value": {
                  "type": "string",
                  "required": true
                }
              }
            ]
          }
        }
      ]
    },
    "css": {
      "properties": [],
      "pseudo-elements": []
    }
  }
}
