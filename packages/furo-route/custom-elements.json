{
  "schemaVersion": "1.0.0",
  "readme": "",
  "modules": [
    {
      "kind": "javascript-module",
      "path": "dist/FuroAppFlowRouter.js",
      "declarations": [
        {
          "kind": "class",
          "description": "The job of the FuroAppFlowRouter is to update the url and manage the history state of the browser.\nEvery \"view\" of the app is always derived from the `Location` (URL), this ensures a proper deep link handling.",
          "name": "FuroAppFlowRouter",
          "members": [
            {
              "kind": "field",
              "name": "openBlankPage",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "urlSpaceRegex",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "configObject",
              "type": {
                "text": "Map<string, Route>"
              },
              "privacy": "private",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "clickHandler",
              "type": {
                "text": "(e: MouseEvent) => void"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "trigger",
              "parameters": [
                {
                  "name": "flowEvent",
                  "type": {
                    "text": "FlowEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "back",
              "description": "trigger a history back"
            },
            {
              "kind": "method",
              "name": "forward",
              "description": "trigger a history forward"
            },
            {
              "kind": "method",
              "name": "_findAtagInPath",
              "privacy": "private",
              "return": {
                "type": {
                  "text": "boolean|*"
                }
              },
              "parameters": [
                {
                  "name": "path",
                  "type": {
                    "text": "EventTarget[]"
                  }
                }
              ],
              "description": "look for A tags in a path array from click events"
            },
            {
              "kind": "field",
              "default": "this"
            }
          ]
        },
        {
          "kind": "class",
          "description": "",
          "name": "FuroAppFlow",
          "members": [
            {
              "kind": "method",
              "name": "emit",
              "static": true,
              "parameters": [
                {
                  "name": "eventName",
                  "type": {
                    "text": "string"
                  }
                },
                {
                  "name": "queryParams",
                  "optional": true,
                  "type": {
                    "text": "QueryParams"
                  }
                }
              ]
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FuroAppFlow",
          "declaration": {
            "name": "FuroAppFlow",
            "module": "src/FuroAppFlowRouter.ts"
          }
        },
        {
          "kind": "js",
          "name": "FuroAppFlowRouter",
          "declaration": {
            "name": "FuroAppFlowRouter",
            "module": "src/FuroAppFlowRouter.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/FuroLocation.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FuroLocation",
          "members": [
            {
              "kind": "field",
              "name": "urlSpaceRegex",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "urlSpaceRegex",
              "description": "A regexp pattern that defines the set of URLs that should be considered part\nof this web app.\n\nClicking on a link that matches this pattern won't result in a full page\nnavigation, but will instead just update the URL state in place.\n\nThis regexp is given everything after the origin in an absolute\nURL. So to match just URLs that start with /app/ do:\n    url-space-regex=\"^/app/\"\n\nIf you plan to work in subdirectories, you may set **url-space-regex=\"^${window.APP_ROOT}/additional/path\"**.\nKeep in mind to put an \"url-space-regex\" on every furo-location. Otherwise, you can not switch between apps in different\nfolders using a link."
            },
            {
              "kind": "field",
              "name": "__eventListener",
              "type": {
                "text": "Map<string, EventStore[]>"
              },
              "privacy": "private",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "location",
              "type": {
                "text": "LocationObject"
              },
              "privacy": "private",
              "default": "{ host: window.location.host, query: {}, hash: {}, path: '/detail', pathSegments: [], hashString: '', queryString: '', }"
            },
            {
              "kind": "field",
              "name": "locationChangeNotifier",
              "type": {
                "text": "() => void"
              },
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "EventType"
                  }
                },
                {
                  "name": "handler",
                  "type": {
                    "text": "CustomEventListener"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "description": "Add a handler to a node"
            },
            {
              "kind": "method",
              "name": "dispatchEvent",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "connect",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "disconnect"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FuroLocation",
          "declaration": {
            "name": "FuroLocation",
            "module": "src/FuroLocation.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/FuroLocationUpdater.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FuroLocationUpdater",
          "members": [
            {
              "kind": "method",
              "name": "updateQueryParams",
              "static": true,
              "parameters": [
                {
                  "name": "queryParams",
                  "type": {
                    "text": "QueryParams"
                  }
                },
                {
                  "name": "queryParamsToRemove",
                  "default": "''",
                  "type": {
                    "text": "string"
                  },
                  "description": "Comma separated list of qp keys to clear/remove from the address"
                }
              ],
              "description": "Set query params by giving an object with key-value pairs.\n\nKeep in mind, that this values goes to the url, so setting objects as values is not a good idea"
            },
            {
              "kind": "method",
              "name": "updateHashParams",
              "static": true,
              "parameters": [
                {
                  "name": "hashParams",
                  "type": {
                    "text": "HashParams"
                  }
                },
                {
                  "name": "hashParamsToRemove",
                  "default": "''",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Set hash values by giving an object with key-value pairs.\n\nKeep in mind, that this values goes to the url, so setting objects as values is not a good idea"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FuroLocationUpdater",
          "declaration": {
            "name": "FuroLocationUpdater",
            "module": "src/FuroLocationUpdater.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/FuroNavigationLock.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FuroNavigationLock",
          "members": [
            {
              "kind": "field",
              "name": "message",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "'You have unsaved changes, proceed anyway?'"
            },
            {
              "kind": "field",
              "name": "_locked",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "method",
              "name": "lock",
              "description": "Blocks furo-location-updater and furo-app-flow-router from navigating away."
            },
            {
              "kind": "method",
              "name": "unlock",
              "description": "Removes the lock."
            },
            {
              "kind": "method",
              "name": "_lockHandler",
              "privacy": "private",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent<{ cancel: boolean }>"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_unloadHandler",
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "BeforeUnloadEvent"
                  }
                }
              ],
              "privacy": "private"
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FuroNavigationLock",
          "declaration": {
            "name": "FuroNavigationLock",
            "module": "src/FuroNavigationLock.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/FuroPages.js",
      "declarations": [
        {
          "kind": "class",
          "description": "\nUse `furo-pages` to build tabs, views, subviews,...\n\n\n## preconditions\nThe components used in a furo-page must implement a **aria-hidden** attribute css to set itself to display none.\n\n```css\n:host([aria-hidden]){\n   display:none\n }\n```\n\n## usage\n\n```html\n\n<furo-pages fn-inject-location=\"--locationChanged\" default=\"home\">\n   <page-home id=\"home\"></page-home>\n   <other-page id=\"more\"></other-page>\n   <view-404 id=\"404\"></view-404>\n</furo-pages>\n\n<furo-location at-location-changed=\"--locationChanged\"></furo-location>\n```\n*If the url is `/` or `/home`, page-home is displayed.*\n*If the url is `/more`,  other-page is displayed.*\n*If the url does not match any of the names and a 404 is available, the 404 is displayed.*\n\n## Lifecycle\nIf the inserted page implements the `FuroPage` interface, the following lifecycle method of your page are called:\n\n### `pageActivated(location: LocationObject): void;`\nTriggered when the page is initialized, or you moved from another page to this page\n\n### `pageDeactivated(newLocation: LocationObject): void;`\nTriggered when you go to a different page.\n\n### `pageUpdated(location: LocationObject): void;`\nTriggered when something in the URL of the current page changes, query, hash or subpages path.\n\n### `pageQueryChanged?(location: LocationObject): void;`\nTriggered when query params changed.\n\n### `pageHashChanged?(location: LocationObject): void;`\nTriggered when hash params change\n\nfuro-pages provides auto wires, which are automatically triggered in the child elements if\nthey support FBP. Each wire will forward a `locationObject`\n\n-  `|--pageActivated` : Is triggered when the element is activated.\n-  `|--pageDeActivated` : Is triggered when another page is activated. Empty wire.\n-  `|--pageQueryChanged` : Is triggered when the page query changes.\n-  `|--pageHashChanged` : Is triggered when the page hash changes.\n-  `|--pageUpdated` : Is triggered when something in the URL of the current page changes.\n-  `|--pageReActivated` : Same as pageUpdated, for backward compatibility.",
          "name": "FuroPages",
          "slots": [
            {
              "type": {
                "text": "HTMLElement [0..n]"
              },
              "description": "default slot to add pages.",
              "name": "default"
            }
          ],
          "members": [
            {
              "kind": "field",
              "name": "defaultPageName",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "'default'",
              "attribute": "default"
            },
            {
              "kind": "field",
              "name": "_attrForSelected",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "'selected'",
              "attribute": "attribute-name-for-select-state"
            },
            {
              "kind": "field",
              "name": "_lastQP",
              "type": {
                "text": "Map<string, string>"
              },
              "privacy": "private",
              "default": "new Map<string, string>()"
            },
            {
              "kind": "field",
              "name": "_lastHash",
              "type": {
                "text": "Map<string, string>"
              },
              "privacy": "private",
              "default": "new Map<string, string>()"
            },
            {
              "kind": "field",
              "name": "_lastPageName",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "urlSpaceRegex",
              "type": {
                "text": "string"
              },
              "privacy": "public",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "_lastPage",
              "type": {
                "text": "FBPElement | null"
              },
              "privacy": "private",
              "default": "null"
            },
            {
              "kind": "field",
              "name": "_page",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "_init",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "true"
            },
            {
              "kind": "field",
              "name": "_pageRef",
              "type": {
                "text": "Record<string, string>"
              },
              "privacy": "private",
              "default": "{}"
            },
            {
              "kind": "field",
              "name": "page",
              "description": "For simple pages like tabs, set the page by string",
              "parameters": [
                {
                  "name": "p"
                }
              ],
              "type": {
                "text": "string"
              },
              "attribute": "page"
            },
            {
              "kind": "field",
              "name": "mode",
              "type": {
                "text": "\"default\" | \"destructive\""
              },
              "default": "'default'",
              "description": "The `default` mode (recommended) removes your node from the render tree and is the fastest mode. It uses more memory than the `destructive` mode.\n\nThe state of the disabled element is kept, form fields which are filled, are the same as before you left the page.\n\n---\n\nThe `destructive` mode removes and destroys the element which is deactivated from the dom\nand will insert it back to the dom when they are activated (insertAdjacentHTML).\n\nThe insertAdjacentHTML() method does not reparse the element it is being used on,\nand thus it does not corrupt the existing elements inside that element.\nThis avoids the extra step of serialization, making it much faster than direct innerHTML manipulation.\n\nThis `destructive` mode is uses less memory, but **looses the state** of the disabled element and is a little bit slower.\n\nUse this if you know what you are doing, because the connectedCallback and disconnectedCallback of every item in your page is also called and everything is built up freshly.",
              "privacy": "public",
              "attribute": "mode"
            },
            {
              "kind": "method",
              "name": "activatePage",
              "parameters": [
                {
                  "name": "pageName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Activate a page by name"
            },
            {
              "kind": "method",
              "name": "injectLocation",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "location",
                  "type": {
                    "text": "LocationObject"
                  }
                }
              ],
              "description": "Inject the location Object from furo-location. The page which is defined in location.pathSegments[0] will get activated.\n\nTo meke \"sub\" pages do not forget to enable the `url-space-regex` property on the *furo-location* component which feeds this component.\n\nIf the page/view does not exist, and you have a page \"404\" defined, the 404 will be shown\n\nIf the page/view does not exist AND 404 does not exist, the default page gets activated.",
              "privacy": "public"
            },
            {
              "kind": "method",
              "name": "_notifyPageHashChanges",
              "privacy": "private",
              "parameters": [
                {
                  "name": "location",
                  "type": {
                    "text": "LocationObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_notifyPageQueryParamChanges",
              "privacy": "private",
              "parameters": [
                {
                  "name": "location",
                  "type": {
                    "text": "LocationObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_notifyPageUpdated",
              "privacy": "private",
              "parameters": [
                {
                  "name": "location",
                  "type": {
                    "text": "LocationObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "_notifyPageActivated",
              "privacy": "private",
              "parameters": [
                {
                  "name": "location",
                  "type": {
                    "text": "LocationObject"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "isWebComponent",
              "return": {
                "type": {
                  "text": "boolean"
                }
              },
              "parameters": [
                {
                  "name": "localName",
                  "type": {
                    "text": "string"
                  }
                }
              ],
              "description": "Checks if a node is a web component."
            }
          ],
          "attributes": [
            {
              "type": {
                "text": "string"
              },
              "description": "Set the default page to show.",
              "name": "default",
              "default": "'default'",
              "fieldName": "defaultPageName"
            },
            {
              "type": {
                "text": "boolean"
              },
              "description": "Enables the flex mode when used in a flex parent like vertical-flex.",
              "name": "flex"
            },
            {
              "name": "attribute-name-for-select-state",
              "type": {
                "text": "string"
              },
              "default": "'selected'",
              "fieldName": "_attrForSelected"
            },
            {
              "name": "page",
              "description": "For simple pages like tabs, set the page by string",
              "parameters": [
                {
                  "name": "p"
                }
              ],
              "type": {
                "text": "string"
              },
              "fieldName": "page"
            },
            {
              "name": "mode",
              "type": {
                "text": "\"default\" | \"destructive\""
              },
              "default": "'default'",
              "description": "The `default` mode (recommended) removes your node from the render tree and is the fastest mode. It uses more memory than the `destructive` mode.\n\nThe state of the disabled element is kept, form fields which are filled, are the same as before you left the page.\n\n---\n\nThe `destructive` mode removes and destroys the element which is deactivated from the dom\nand will insert it back to the dom when they are activated (insertAdjacentHTML).\n\nThe insertAdjacentHTML() method does not reparse the element it is being used on,\nand thus it does not corrupt the existing elements inside that element.\nThis avoids the extra step of serialization, making it much faster than direct innerHTML manipulation.\n\nThis `destructive` mode is uses less memory, but **looses the state** of the disabled element and is a little bit slower.\n\nUse this if you know what you are doing, because the connectedCallback and disconnectedCallback of every item in your page is also called and everything is built up freshly.",
              "fieldName": "mode"
            }
          ],
          "superclass": {
            "name": "LitElement",
            "package": "lit"
          },
          "tagName": "furo-pages",
          "summary": "Simple content switcher",
          "customElement": true
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FuroPages",
          "declaration": {
            "name": "FuroPages",
            "module": "src/FuroPages.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/FuroWaypoint.js",
      "declarations": [
        {
          "kind": "class",
          "description": "",
          "name": "FuroWaypoint",
          "members": [
            {
              "kind": "field",
              "name": "_prefix",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "_documentTitle",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "documentTitle"
            },
            {
              "kind": "field",
              "name": "_suffix",
              "type": {
                "text": "string"
              },
              "privacy": "private",
              "default": "''"
            },
            {
              "kind": "field",
              "name": "_inPreStage",
              "type": {
                "text": "boolean"
              },
              "privacy": "private",
              "default": "false"
            },
            {
              "kind": "field",
              "name": "__eventListener",
              "type": {
                "text": "Map<string, any[]>"
              },
              "privacy": "private",
              "default": "new Map()"
            },
            {
              "kind": "field",
              "name": "_stateData",
              "type": {
                "text": "unknown"
              },
              "privacy": "private"
            },
            {
              "kind": "field",
              "name": "stateData"
            },
            {
              "kind": "field",
              "name": "prefix",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "documentTitle",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "field",
              "name": "suffix",
              "type": {
                "text": "string"
              }
            },
            {
              "kind": "method",
              "name": "setWaypoint"
            },
            {
              "kind": "method",
              "name": "activate",
              "description": "Set the document title with the currentPage prefix title suffix. Without setting a waypoint."
            },
            {
              "kind": "method",
              "name": "_setDocumentTitle",
              "description": "Renders the title and set it as document title",
              "privacy": "private"
            },
            {
              "kind": "method",
              "name": "addEventListener",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "type",
                  "type": {
                    "text": "EventType"
                  }
                },
                {
                  "name": "handler",
                  "type": {
                    "text": "CustomEventListener"
                  }
                },
                {
                  "name": "options",
                  "optional": true,
                  "type": {
                    "text": "boolean | AddEventListenerOptions"
                  }
                }
              ],
              "description": "Add a handler to a node"
            },
            {
              "kind": "method",
              "name": "dispatchEvent",
              "privacy": "public",
              "return": {
                "type": {
                  "text": "void"
                }
              },
              "parameters": [
                {
                  "name": "event",
                  "type": {
                    "text": "CustomEvent"
                  }
                }
              ]
            },
            {
              "kind": "method",
              "name": "deepDive",
              "static": true
            }
          ],
          "events": [
            {
              "name": "waypoint-pushed",
              "type": {
                "text": "CustomEvent"
              }
            },
            {
              "name": "waypoint-canceled",
              "type": {
                "text": "CustomEvent"
              }
            }
          ]
        }
      ],
      "exports": [
        {
          "kind": "js",
          "name": "FuroWaypoint",
          "declaration": {
            "name": "FuroWaypoint",
            "module": "src/FuroWaypoint.ts"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/furo-pages.js",
      "declarations": [],
      "exports": [
        {
          "kind": "custom-element-definition",
          "name": "furo-pages",
          "declaration": {
            "name": "FuroPages",
            "module": "/src/FuroPages"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/index.js",
      "declarations": [],
      "exports": [
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./FuroAppFlowRouter"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./FuroLocation"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./FuroLocationUpdater"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./FuroNavigationLock"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./FuroPages"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./FuroWaypoint"
          }
        },
        {
          "kind": "js",
          "name": "*",
          "declaration": {
            "name": "*",
            "package": "./types"
          }
        }
      ]
    },
    {
      "kind": "javascript-module",
      "path": "dist/types.js",
      "declarations": [],
      "exports": []
    }
  ]
}
