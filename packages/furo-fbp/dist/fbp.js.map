{"version":3,"file":"fbp.js","sourceRoot":"./src/","sources":["fbp.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA+CG;AAEH,OAAO,EAAE,cAAc,EAAE,MAAM,qBAAqB,CAAC;AAErD,MAAM,CAAC,MAAM,GAAG,GAAG,UAAU,CAAC,EAAE;AAC9B;;GAEG;AACH,KAAM,SAAQ,UAAU;IACtB;QACE,KAAK,EAAE,CAAC;QACR;;;;WAIG;QACH,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;QAC7B;;;;WAIG;QACH,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB;;;;WAIG;QACH,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;IACxB,CAAC;IAED;;;OAGG;IACH,YAAY;QACV,6BAA6B;QAC7B,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC;YACxB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YACjC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC;QAED,KAAK,CAAC,YAAY,EAAE,CAAC;IACvB,CAAC;IAED;;;;;OAKG;IACH,eAAe,CAAC,IAAI,EAAE,UAAU;QAC9B,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC;YACrB;;;eAGG;YACH,cAAc,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;gBAChD,sBAAsB;gBAEtB,IACE,UAAU,CAAC,OAAO;oBAClB,UAAU,CAAC,IAAI,KAAK,IAAI;oBACxB,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,EACpD,CAAC;oBACD,IAAI,IAAI,CAAC,SAAS,KAAK,SAAS,EAAE,CAAC;wBACjC,IAAI,CAAC,SAAS,GAAG,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;oBACnD,CAAC;oBAED,IAAI,IAAI,CAAC,SAAS,KAAK,UAAU,CAAC,IAAI,EAAE,CAAC;wBACvC,wCAAwC;wBACxC,QAAQ,UAAU,CAAC,IAAI,EAAE,CAAC;4BACxB,KAAK,YAAY;gCACf,+DAA+D;gCAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;gCAC3C,iDAAiD;gCACjD,IAAI,CAAC;gCACL,iDAAiD;gCACjD,UAAU,CAAC;gCACX,+DAA+D;gCAC/D,MAAM,OAAO,GAAG,cAAc,CAAC,gBAAgB,CAC7C,UAAU,CAAC,IAAI,CAChB,CAAC;gCACF,+DAA+D;gCAC/D,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;gCAExC,uCAAuC;gCACvC,QAAQ,CAAC;gCACT,MAAM;4BACR,KAAK,aAAa;gCAChB,4DAA4D;gCAC5D,MAAM,CAAC,GAAG,IAAI,QAAQ,CACpB,MAAM,EACN,WAAW,UAAU,CAAC,SAAS,GAAG,CACnC,CAAC;gCACF,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,EAAE,UAAU,CAAC,EAAE,CAAC;oCAC7B,+DAA+D;oCAC/D,MAAM,EAAE,SAAS,EAAE,GAAG,UAAU,CAAC;oCACjC,yEAAyE;oCACzE,MAAM,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;oCAC3C,qFAAqF;oCACrF,IAAI,CAAC;oCACL,qFAAqF;oCACrF,UAAU,CAAC;oCACX,oDAAoD;oCACpD,MAAM,OAAO,GAAG,cAAc,CAAC,gBAAgB,CAC7C,UAAU,CAAC,IAAI,CAChB,CAAC;oCACF,oDAAoD;oCACpD,MAAM,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;oCAExC,uCAAuC;oCACvC,QAAQ,CAAC;gCACX,CAAC;gCAED,MAAM;4BACR,KAAK,OAAO;gCACV,gDAAgD;gCAChD,MAAM,EAAE,GAAG,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;gCAC7C,gDAAgD;gCAChD,IAAI,KAAK,GAAG,IAAI,CAAC;gCACjB,IAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;oCAChC,IAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;wCAC9B,KAAK,GAAG,IAAI,CAAC,CAAC,SAAS;oCACzB,CAAC;yCAAM,CAAC;wCACN,KAAK,GAAG,KAAK,CAAC,CAAC,SAAS;oCAC1B,CAAC;gCACH,CAAC;gCAED,IAAI,KAAK,EAAE,CAAC;oCACV,sCAAsC;oCACtC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE,CAAC,CAAC;oCAEpD,sCAAsC;oCACtC,OAAO,CAAC,GAAG,CACT,cAAc,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CACjD,CAAC;oCACF,sCAAsC;oCACtC,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;oCACjC,sCAAsC;oCACtC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;oCACvC,sCAAsC;oCACtC,OAAO,CAAC,QAAQ,EAAE,CAAC;oCAEnB,sCAAsC;oCACtC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;oCAC/B,sCAAsC;oCACtC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;oCACxB,sCAAsC;oCACtC,OAAO,CAAC,QAAQ,EAAE,CAAC;oCAEnB,sCAAsC;oCACtC,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;oCACrC,sCAAsC;oCACtC,OAAO,CAAC,GAAG,CAAC,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC;oCAC/B,sCAAsC;oCACtC,OAAO,CAAC,QAAQ,EAAE,CAAC;oCACnB,sCAAsC;oCACtC,OAAO,CAAC,QAAQ,EAAE,CAAC;gCACrB,CAAC;gCACD,MAAM;wBACV,CAAC;oBACH,CAAC;gBACH,CAAC;YACH,CAAC,CAAC,CAAC;YAEH,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC5B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAE;oBACzC,kBAAkB;oBAClB,IAAI,OAAO,QAAQ,KAAK,UAAU,EAAE,CAAC;wBACnC,QAAQ,CAAC,UAAU,CAAC,CAAC;oBACvB,CAAC;yBAAM,IACL,OAAO,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,UAAU,EACvD,CAAC;wBACD,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;oBACnC,CAAC;yBAAM,IAAI,QAAQ,CAAC,QAAQ,EAAE,CAAC;wBAC7B,IAAI,IAAI,GAAG,UAAU,CAAC;wBACtB,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;4BAClB,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;wBAClD,CAAC;wBACD,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,QAAQ,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;oBAC3D,CAAC;yBAAM,IAAI,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;wBACpD,sHAAsH;wBACtH,cAAc;6BACX,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC;6BACvC,IAAI,CAAC,GAAG,EAAE;4BACT,IAAI,OAAO,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,UAAU,EAAE,CAAC;gCAC5D,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;4BACnC,CAAC;iCAAM,CAAC;gCACN,sCAAsC;gCACtC,OAAO,CAAC,IAAI,CACV,GAAG,QAAQ,CAAC,MAAM,uBAAuB,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,EACpE,QAAQ,CAAC,OAAO,CACjB,CAAC;4BACJ,CAAC;wBACH,CAAC,CAAC,CAAC;oBACP,CAAC;yBAAM,CAAC;wBACN,sCAAsC;wBACtC,OAAO,CAAC,IAAI,CACV,GAAG,QAAQ,CAAC,MAAM,uBAAuB,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,EACpE,QAAQ,CAAC,OAAO,CACjB,CAAC;oBACJ,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC;aAAM,CAAC;YACN,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;QAC1C,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,UAAU,EAAE,QAAQ;QACxB,IAAI,QAAQ,CAAC;QACb,iBAAiB;QACjB,IACE,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC;YACzB,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,MAAM,GAAG,CAAC,EAC5C,CAAC;YACD,yCAAyC;YACzC,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,CAChD,QAAQ,CAAC,OAAO,EAChB,UAAU,CACX,CAAC;QACJ,CAAC;aAAM,CAAC;YACN,IAAI,IAAI,GAAG,UAAU,CAAC;YACtB,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAClB,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC;YAClD,CAAC;YACD,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC;QACrD,CAAC;QAED,0BAA0B;QAC1B,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,SAAS,QAAQ,CAAC,QAAQ,EAAE,EAAE;YACpD,QAAQ,EAAE,KAAK;YACf,OAAO,EAAE,KAAK;SACf,CAAC,CAAC;QACH,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC;QACxB,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAEtC,wBAAwB;QACxB,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,KAAK,QAAQ,CAAC,QAAQ,EAAE,EAAE;YACtD,QAAQ,EAAE,KAAK;YACf,OAAO,EAAE,KAAK;SACf,CAAC,CAAC;QACH,WAAW,CAAC,MAAM,GAAG,QAAQ,CAAC;QAC9B,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IAC9C,CAAC;IAED;;;;;;;OAOG;IACH,eAAe,CAAC,IAAI,EAAE,EAAE,EAAE,MAAM;QAC9B,6CAA6C;QAC7C,MAAM,GAAG,MAAM,IAAI,KAAK,CAAC;QACzB,IAAI,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC;YAC5B,IAAI,MAAM,EAAE,CAAC;gBACX,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;gBACpC,OAAO,CAAC,CAAC;YACX,CAAC;YACD,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC3C,OAAO,CAAC,GAAG,CAAC,CAAC;QACf,CAAC;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC/B,OAAO,CAAC,CAAC;IACX,CAAC;IAED;;;;;;OAMG;IACH,cAAc;QACZ,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,6DAA6D;QAC7D,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,YAAY,EAAE,CAAC;YACrC,IAAI,CAAC,eAAe,CAClB,IAAI,EACJ,CAAC,CAAC,EAAE;gBACF,MAAM,EAAE,GAAG,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;gBAC7C,IAAI,KAAK,GAAG,IAAI,CAAC;gBACjB,IAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;oBAChC,IAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;wBAC9B,KAAK,GAAG,IAAI,CAAC,CAAC,SAAS;oBACzB,CAAC;yBAAM,CAAC;wBACN,KAAK,GAAG,KAAK,CAAC,CAAC,SAAS;oBAC1B,CAAC;gBACH,CAAC;gBAED,IAAI,KAAK,EAAE,CAAC;oBACV,sCAAsC;oBACtC,OAAO,CAAC,cAAc,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE,CAAC,CAAC;oBACjE,sCAAsC;oBACtC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAE/C,sCAAsC;oBACtC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;oBAC/B,sCAAsC;oBACtC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACf,sCAAsC;oBACtC,OAAO,CAAC,QAAQ,EAAE,CAAC;oBAEnB,sCAAsC;oBACtC,OAAO,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC;oBAC1C,sCAAsC;oBACtC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;oBACvC,sCAAsC;oBACtC,OAAO,CAAC,QAAQ,EAAE,CAAC;oBAEnB,sCAAsC;oBACtC,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;oBACrC,sCAAsC;oBACtC,OAAO,CAAC,GAAG,CAAC,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC;oBAC/B,sCAAsC;oBACtC,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACnB,sCAAsC;oBACtC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBACrB,CAAC;YACH,CAAC,EACD,IAAI,CACL,CAAC;QACJ,CAAC;IACH,CAAC;IAED;;;;;;;OAOG;IACH,SAAS,CAAC,IAAI,EAAE,YAAY;QAC1B,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,eAAe,CAClB,IAAI,EACJ,CAAC,CAAC,EAAE;YACF,IAAI,YAAY,EAAE,CAAC;gBACjB,uCAAuC;gBACvC,QAAQ,CAAC;YACX,CAAC;iBAAM,CAAC;gBACN,MAAM,EAAE,GAAG,SAAS,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;gBAC7C,IAAI,KAAK,GAAG,IAAI,CAAC;gBACjB,IAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC;oBAChC,IAAI,EAAE,CAAC,OAAO,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;wBAC9B,KAAK,GAAG,IAAI,CAAC,CAAC,SAAS;oBACzB,CAAC;yBAAM,CAAC;wBACN,KAAK,GAAG,KAAK,CAAC,CAAC,SAAS;oBAC1B,CAAC;gBACH,CAAC;gBAED,IAAI,KAAK,EAAE,CAAC;oBACV,sCAAsC;oBACtC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC,QAAQ,KAAK,IAAI,EAAE,CAAC,CAAC;oBACpD,sCAAsC;oBACtC,OAAO,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC;oBACjC,sCAAsC;oBACtC,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC;oBACvC,sCAAsC;oBACtC,OAAO,CAAC,QAAQ,EAAE,CAAC;oBAEnB,sCAAsC;oBACtC,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;oBAC/B,sCAAsC;oBACtC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;oBACf,sCAAsC;oBACtC,OAAO,CAAC,QAAQ,EAAE,CAAC;oBAEnB,sCAAsC;oBACtC,OAAO,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;oBACrC,sCAAsC;oBACtC,OAAO,CAAC,GAAG,CAAC,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC,CAAC;oBAC/B,sCAAsC;oBACtC,OAAO,CAAC,QAAQ,EAAE,CAAC;oBACnB,sCAAsC;oBACtC,OAAO,CAAC,QAAQ,EAAE,CAAC;gBACrB,CAAC;YACH,CAAC;QACH,CAAC,EACD,IAAI,CACL,CAAC;IACJ,CAAC;IAED;;;;;OAKG;IACH,kDAAkD;IAClD,aAAa,CAAC,GAAG;QACf,OAAO,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;IAC3D,CAAC;IAED;;;;OAIG;IACH,UAAU,CAAC,GAAG;QACZ,MAAM,IAAI,GAAG,IAAI,CAAC;QAClB,MAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC;QACrC,0CAA0C;QAC1C,MAAM,EAAE,GAAG,GAAG,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;QACrC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,GAAG,CAAC,CAAC;QAExB,sCAAsC;QACtC,MAAM,iBAAiB,GAAG,UAAU,OAAO,EAAE,CAAC,EAAE,IAAI;YAClD,mBAAmB;YACnB,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACjD,MAAM,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;gBACvC,4BAA4B;gBAC5B,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC;oBACjC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;gBACnC,CAAC;gBACD,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC;oBAC/B,OAAO;oBACP,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;oBAChC,QAAQ,EAAE,IAAI;oBACd,IAAI,EAAE,CAAC,CAAC,IAAI;iBACb,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QACF,sCAAsC;QACtC,MAAM,uBAAuB,GAAG,UAAU,OAAO,EAAE,CAAC,EAAE,QAAQ;YAC5D,uBAAuB;YACvB,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACjD,MAAM,CAAC,GAAG,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC;gBACvC,4BAA4B;gBAC5B,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,EAAE,CAAC;oBACjC,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,GAAG,EAAE,CAAC;gBACnC,CAAC;gBACD,UAAU,CAAC,CAAC,CAAC,aAAa,CAAC,CAAC,IAAI,CAAC;oBAC/B,OAAO;oBACP,QAAQ,EAAE,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;oBACtC,IAAI,EAAE,CAAC,CAAC,IAAI;iBACb,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAEF,sCAAsC;QACtC,MAAM,kBAAkB,GAAG,UAAU,KAAK;YACxC,IAAI,IAAI,CAAC;YAET,MAAM,WAAW,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC;YAEjC,IAAI,IAAI,GAAG,MAAM,CAAC;YAClB,IAAI,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;gBACjC,IAAI,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,EAAE,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;gBACxD,IAAI,GAAG,UAAU,CAAC;YACpB,CAAC;iBAAM,IAAI,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;gBACxC,IAAI,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,GAAG,YAAY,CAAC;YACtB,CAAC;iBAAM,IAAI,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;gBACvC,IAAI,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;gBAChC,IAAI,GAAG,MAAM,CAAC;gBACd,IAAI,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;oBACjC,IAAI,GAAG,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAChC,IAAI,GAAG,YAAY,CAAC;gBACtB,CAAC;YACH,CAAC;iBAAM,IAAI,WAAW,KAAK,OAAO,EAAE,CAAC;gBACnC,IAAI,GAAG,MAAM,CAAC;gBACd,IAAI,GAAG,MAAM,CAAC;YAChB,CAAC;iBAAM,IAAI,WAAW,KAAK,iBAAiB,EAAE,CAAC;gBAC7C,IAAI,GAAG,gBAAgB,CAAC;gBACxB,IAAI,GAAG,gBAAgB,CAAC;YAC1B,CAAC;iBAAM,CAAC;gBACN,IAAI,GAAG,WAAW,CAAC;gBACnB,IAAI,GAAG,MAAM,CAAC;YAChB,CAAC;YACD,OAAO,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QACxB,CAAC,CAAC;QAEF,uCAAuC;QACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;YAC5B,MAAM,OAAO,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YAEtB,qBAAqB;YACrB,IAAI,OAAO,CAAC,OAAO,KAAK,UAAU,EAAE,CAAC;gBACnC,uCAAuC;gBACvC,SAAS;YACX,CAAC;YAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;gBACtD,yBAAyB;gBACzB,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;oBACjD,MAAM,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBACrD,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;oBAC/C,uCAAuC;oBACvC,SAAS;gBACX,CAAC;gBAED,uBAAuB;gBACvB,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;oBACjD,MAAM,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC1D,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBAC3C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBAChC,MAAM,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;wBACxC,gDAAgD;wBAChD,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;oBAC5D,CAAC,CAAC,CAAC;oBACH,uCAAuC;oBACvC,SAAS;gBACX,CAAC;gBACD,wCAAwC;gBACxC,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,EAAE,CAAC;oBAClD,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBACzD,uBAAuB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;oBACzD,uCAAuC;oBACvC,SAAS;gBACX,CAAC;gBAED,iCAAiC;gBACjC,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,CAAC;oBACjD,MAAM,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBACzD,uBAAuB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;oBACzD,uCAAuC;oBACvC,SAAS;gBACX,CAAC;gBAED,yBAAyB;gBACzB,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;oBAChD,MAAM,IAAI,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBACrD,iBAAiB,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;oBAC/C,uCAAuC;oBACvC,SAAS;gBACX,CAAC;gBAED,uBAAuB;gBACvB,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC;oBAChD,MAAM,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;oBAC1D,MAAM,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBAC3C,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;wBAChC,MAAM,KAAK,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC;wBACxC,gDAAgD;wBAChD,aAAa,CAAC,SAAS,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;oBAC5D,CAAC,CAAC,CAAC;oBACH,uCAAuC;oBACvC,SAAS;gBACX,CAAC;YACH,CAAC;QACH,CAAC;QAED;;;;;;WAMG;QACH,SAAS,aAAa,CAAC,SAAS,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO;YACnD,0BAA0B;YAC1B,6CAA6C;YAC7C,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;YAEhD,MAAM,OAAO,GAAG;gBACd,uCAAuC;gBACvC,IAAI,CAAC,CAAC;oBACJ,CAAC,CAAC,eAAe,EAAE,CAAC;gBACtB,CAAC;gBACD,cAAc,CAAC,CAAC;oBACd,CAAC,CAAC,cAAc,EAAE,CAAC;gBACrB,CAAC;gBAED,IAAI,CAAC,CAAC;oBACJ;;;;uBAIG;oBAEH,IAAI,aAAa,GAAG,IAAI,CAAC;oBACzB,IAAI,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC;oBAC1B,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBACvC,oCAAoC;wBACpC,0DAA0D;wBAE1D,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;4BAC7B,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gCAC1B,iBAAiB;gCACjB,UAAU,GAAG,CAAC,CAAC;4BACjB,CAAC;iCAAM,CAAC;gCACN,0CAA0C;gCAC1C,UAAU,GAAG,IAAI,CAAC,QAAQ,CACxB,CAAC,EACD,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CACvC,CAAC;4BACJ,CAAC;wBACH,CAAC;6BAAM,CAAC;4BACN,qBAAqB;4BACrB,UAAU,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBAC7C,CAAC;wBACD,gDAAgD;wBAChD,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC3B,CAAC;oBAED,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,UAAU,CAAC,CAAC;gBAClD,CAAC;gBAED,IAAI,CAAC,CAAC;oBACJ,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBACvC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBACtB,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC1B,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE;4BACtC,QAAQ,EAAE,KAAK;4BACf,OAAO,EAAE,IAAI;yBACd,CAAC,CAAC;wBACH,+BAA+B;wBAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;4BACzB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gCACtB,iBAAiB;gCACjB,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;4BACzB,CAAC;iCAAM,CAAC;gCACN,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC3D,CAAC;wBACH,CAAC;6BAAM,CAAC;4BACN,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;wBACjD,CAAC;wBACD,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;oBAC7C,CAAC;yBAAM,CAAC;wBACN,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE;4BAClC,QAAQ,EAAE,KAAK;4BACf,OAAO,EAAE,IAAI;yBACd,CAAC,CAAC;wBACH,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;wBAC9B,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;oBAC7C,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,CAAC;oBACV,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBACvC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBACtB,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC1B,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE;4BACtC,QAAQ,EAAE,KAAK;4BACf,OAAO,EAAE,IAAI;yBACd,CAAC,CAAC;wBACH,+BAA+B;wBAC/B,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;4BACzB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gCACtB,iBAAiB;gCACjB,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;4BACzB,CAAC;iCAAM,CAAC;gCACN,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC3D,CAAC;wBACH,CAAC;6BAAM,CAAC;4BACN,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;wBACjD,CAAC;wBACD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;oBAClC,CAAC;yBAAM,CAAC;wBACN,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE;4BAClC,QAAQ,EAAE,KAAK;4BACf,OAAO,EAAE,IAAI;yBACd,CAAC,CAAC;wBACH,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;wBAC9B,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;oBAClC,CAAC;gBACH,CAAC;gBAED,UAAU,CAAC,CAAC;oBACV,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;wBACvC,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBACtB,MAAM,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;wBAC1B,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,QAAQ,EAAE;4BACtC,QAAQ,EAAE,IAAI;4BACd,OAAO,EAAE,IAAI;yBACd,CAAC,CAAC;wBACH,+BAA+B;wBAE/B,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE,CAAC;4BACzB,IAAI,IAAI,CAAC,MAAM,KAAK,CAAC,EAAE,CAAC;gCACtB,iBAAiB;gCACjB,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC;4BACzB,CAAC;iCAAM,CAAC;gCACN,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;4BAC3D,CAAC;wBACH,CAAC;6BAAM,CAAC;4BACN,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;wBACjD,CAAC;wBACD,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;oBAC7C,CAAC;yBAAM,CAAC;wBACN,MAAM,WAAW,GAAG,IAAI,KAAK,CAAC,IAAI,EAAE;4BAClC,QAAQ,EAAE,IAAI;4BACd,OAAO,EAAE,IAAI;yBACd,CAAC,CAAC;wBACH,WAAW,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;wBAC9B,CAAC,CAAC,aAAa,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;oBAC7C,CAAC;gBACH,CAAC;gBACD,QAAQ,CAAC,CAAC;oBACR,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;oBAEpC,kCAAkC;gBACpC,CAAC;aACF,CAAC;YAEF,OAAO,CAAC,gBAAgB,CAAC,SAAS,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;YACnD,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC;gBAC3B,OAAO;gBACP,KAAK,EAAE,SAAS;gBAChB,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC;aACvB,CAAC,CAAC;QACL,CAAC;QAED,+BAA+B;QAC/B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC;YACtB,IAAI,CAAC,SAAS,EAAE,CAAC;YAEjB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;YAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;gBACxC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;gBACnC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACjC,CAAC;QACH,CAAC;IACH,CAAC;IAED;;;;;OAKG;IACH,SAAS;QACP,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;QACxB,IAAI,CAAC,eAAe,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;IAC5C,CAAC;IAED;;;;;OAKG;IACH,gBAAgB,CAAC,IAAI,EAAE,UAAU;QAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC;IACpD,CAAC;IAED;;;;;OAKG;IACH,kDAAkD;IAClD,oBAAoB,CAAC,CAAC;QACpB,4DAA4D;QAE5D,6CAA6C;QAC7C,MAAM,KAAK,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC,KAAK,CAAC,4BAA4B,CAAC,CAAC;QAC3D,MAAM,aAAa,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAC/B,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;QAEtB,OAAO,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC;IACjC,CAAC;IAED;;;;;;;;OAQG;IACH,QAAQ,CAAC,IAAI,EAAE,IAAI;QACjB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAChC,+CAA+C;QAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;YACzC,IAAI,CAAC,IAAI,EAAE,CAAC;gBACV,OAAO,KAAK,CAAC;YACf,CAAC;YACD,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC;QAED,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;;;;;OASG;IACH,QAAQ,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK;QACxB,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAChC,MAAM,IAAI,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;QACrC,kCAAkC;QAClC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YACrB,+CAA+C;YAC/C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;gBAC7C,MAAM,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACtB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;gBAClB,IAAI,CAAC,IAAI,EAAE,CAAC;oBACV,OAAO,KAAK,CAAC;gBACf,CAAC;YACH,CAAC;YACD,qCAAqC;YACrC,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACrB,CAAC;aAAM,CAAC;YACN,sBAAsB;YACtB,IAAI,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;QACrB,CAAC;QACD,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED;;;;;;;;;;;;;;;OAeG;IACH,kDAAkD;IAClD,MAAM,CAAC,IAAI;QACT,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;CACF,CAAC","sourcesContent":["/**\n * furo-fbp base class\n *\n * [read the guide](https://fbp.furo.pro/)\n *\n *\n * ### **_FBPTriggerWire**\n * <small>**_FBPTriggerWire**(*wire* `` *detailData* `` ) ⟹ `void`</small>\n *\n * Triggers a wire\n *\n * - <small>wire (String) Name of the wire like --buttonClicked</small>\n * - <small>detailData (*) data to pass</small>\n *\n *\n * ### **_FBPAddWireHook**\n * <small>**_FBPAddWireHook**(*wire* `` *cb* `` *before* `` ) ⟹ `number`</small>\n *\n *\n *\n * - <small>wire (String) Name of the wire</small>\n * - <small>cb (function) Callback function cb(detailData)</small>\n * - <small>before (Boolean) append before the components are triggered, default is false</small>\n *\n *\n * ### **_FBPTraceWires**\n * <small>**_FBPTraceWires**() ⟹ `void`</small>\n *\n * Log all triggered wires for this component. This function may help you at debugging.\n * Select your element in the dev console and call `$0._FBPTraceWires()`\n *\n *\n *\n * ### **_FBPDebug**\n * <small>**_FBPDebug**(*wire* `` *openDebugger* `` ) ⟹ `void`</small>\n *\n * Get information for the triggered wire. This function may help you at debugging.\n * Select your element in the dev console and call `$0._FBPDebug('--dataReceived')`\n *\n * - <small>wire </small>\n * - <small>openDebugger opens the debugger console, so you can inspect your component.</small>\n *\n *\n *\n * @summary Please read the guide for a better understanding\n * @polymer\n * @mixinFunction FBP\n */\n\nimport { FbpBreakpoints } from './FbpBreakpoints.js';\n\nexport const FBP = superClass =>\n  /**\n   * @polymerMixinClass\n   */\n  class extends superClass {\n    constructor() {\n      super();\n      /**\n       * used to store the listeners\n       * @type {*[]}\n       * @private\n       */\n      this.__FBPEventlistener = [];\n      /**\n       *\n       * @type {{}}\n       * @private\n       */\n      this.__wirebundle = {};\n      /**\n       *\n       * @type {*[]}\n       * @private\n       */\n      this.__wireQueue = [];\n    }\n\n    /**\n     * Auto append fbp for lit elements\n     * @private\n     */\n    firstUpdated() {\n      // ensure to append only once\n      if (!this.__fbpAppended) {\n        this._appendFBP(this.shadowRoot);\n        this.__fbpAppended = true;\n      }\n\n      super.firstUpdated();\n    }\n\n    /**\n     * Triggers a wire\n     * @param wire (String) Name of the wire like --buttonClicked\n     * @param detailData (*) data to pass\n     * @private\n     */\n    _FBPTriggerWire(wire, detailData) {\n      if (this.__fbp_ready) {\n        /**\n         * Check breakpoints, this slows down every wire (if you have set breakpoints).\n         * While debuging, this is absolute OK.\n         */\n        FbpBreakpoints.Breakpoints().forEach(breakpoint => {\n          // start with cheapest\n\n          if (\n            breakpoint.enabled &&\n            breakpoint.wire === wire &&\n            breakpoint.path.endsWith(this.tagName.toLowerCase())\n          ) {\n            if (this.__domPath === undefined) {\n              this.__domPath = FbpBreakpoints.getDomPath(this);\n            }\n\n            if (this.__domPath === breakpoint.path) {\n              // eslint-disable-next-line default-case\n              switch (breakpoint.kind) {\n                case 'BREAKPOINT':\n                  // eslint-disable-next-line no-unused-vars,no-case-declarations\n                  const tagName = this.tagName.toLowerCase();\n                  // eslint-disable-next-line no-unused-expressions\n                  wire;\n                  // eslint-disable-next-line no-unused-expressions\n                  detailData;\n                  // eslint-disable-next-line no-case-declarations,no-unused-vars\n                  const domnode = FbpBreakpoints.GetElementByPath(\n                    breakpoint.path\n                  );\n                  // eslint-disable-next-line no-case-declarations,no-unused-vars\n                  const targets = this.__wirebundle[wire];\n\n                  // eslint-disable-next-line no-debugger\n                  debugger;\n                  break;\n                case 'CONDITIONAL':\n                  // eslint-disable-next-line no-case-declarations,no-new-func\n                  const c = new Function(\n                    'data',\n                    `return (${breakpoint.condition})`\n                  );\n                  if (c.call(this, detailData)) {\n                    // eslint-disable-next-line no-case-declarations,no-unused-vars\n                    const { condition } = breakpoint;\n                    // eslint-disable-next-line no-case-declarations,no-unused-vars,no-shadow\n                    const tagName = this.tagName.toLowerCase();\n                    // eslint-disable-next-line no-case-declarations,no-unused-vars,no-unused-expressions\n                    wire;\n                    // eslint-disable-next-line no-case-declarations,no-unused-vars,no-unused-expressions\n                    detailData;\n                    // eslint-disable-next-line no-unused-vars,no-shadow\n                    const domnode = FbpBreakpoints.GetElementByPath(\n                      breakpoint.path\n                    );\n                    // eslint-disable-next-line no-unused-vars,no-shadow\n                    const targets = this.__wirebundle[wire];\n\n                    // eslint-disable-next-line no-debugger\n                    debugger;\n                  }\n\n                  break;\n                case 'TRACE':\n                  // eslint-disable-next-line no-case-declarations\n                  const ua = navigator.userAgent.toLowerCase();\n                  // eslint-disable-next-line no-case-declarations\n                  let agent = true;\n                  if (ua.indexOf('safari') !== -1) {\n                    if (ua.indexOf('chrome') > -1) {\n                      agent = true; // Chrome\n                    } else {\n                      agent = false; // Safari\n                    }\n                  }\n\n                  if (agent) {\n                    // eslint-disable-next-line no-console\n                    console.group('Trace', `${this.nodeName}: ${wire}`);\n\n                    // eslint-disable-next-line no-console\n                    console.log(\n                      FbpBreakpoints.GetElementByPath(breakpoint.path)\n                    );\n                    // eslint-disable-next-line no-console\n                    console.group('Target Elements');\n                    // eslint-disable-next-line no-console\n                    console.table(this.__wirebundle[wire]);\n                    // eslint-disable-next-line no-console\n                    console.groupEnd();\n\n                    // eslint-disable-next-line no-console\n                    console.groupCollapsed('Data');\n                    // eslint-disable-next-line no-console\n                    console.log(detailData);\n                    // eslint-disable-next-line no-console\n                    console.groupEnd();\n\n                    // eslint-disable-next-line no-console\n                    console.groupCollapsed('Call Stack');\n                    // eslint-disable-next-line no-console\n                    console.log(new Error().stack);\n                    // eslint-disable-next-line no-console\n                    console.groupEnd();\n                    // eslint-disable-next-line no-console\n                    console.groupEnd();\n                  }\n                  break;\n              }\n            }\n          }\n        });\n\n        if (this.__wirebundle[wire]) {\n          this.__wirebundle[wire].forEach(receiver => {\n            // check for hooks\n            if (typeof receiver === 'function') {\n              receiver(detailData);\n            } else if (\n              typeof receiver.element[receiver.method] === 'function'\n            ) {\n              this._call(detailData, receiver);\n            } else if (receiver.property) {\n              let data = detailData;\n              if (receiver.path) {\n                data = this._pathGet(detailData, receiver.path);\n              }\n              this._pathSet(receiver.element, receiver.property, data);\n            } else if (receiver.element.localName.includes('-')) {\n              // retry call with whenDefined because sometimes the components are just not defined at the time ƒ-method is triggered\n              customElements\n                .whenDefined(receiver.element.localName)\n                .then(() => {\n                  if (typeof receiver.element[receiver.method] === 'function') {\n                    this._call(detailData, receiver);\n                  } else {\n                    // eslint-disable-next-line no-console\n                    console.warn(\n                      `${receiver.method} is not a method of ${receiver.element.nodeName}`,\n                      receiver.element\n                    );\n                  }\n                });\n            } else {\n              // eslint-disable-next-line no-console\n              console.warn(\n                `${receiver.method} is not a method of ${receiver.element.nodeName}`,\n                receiver.element\n              );\n            }\n          });\n        }\n      } else {\n        this.__enqueueTrigger(wire, detailData);\n      }\n    }\n\n    /**\n     *\n     * @param detailData\n     * @param receiver\n     * @private\n     */\n    _call(detailData, receiver) {\n      let response;\n      // array spreaden\n      if (\n        Array.isArray(detailData) &&\n        receiver.element[receiver.method].length > 1\n      ) {\n        // eslint-disable-next-line prefer-spread\n        response = receiver.element[receiver.method].apply(\n          receiver.element,\n          detailData\n        );\n      } else {\n        let data = detailData;\n        if (receiver.path) {\n          data = this._pathGet(detailData, receiver.path);\n        }\n        response = receiver.element[receiver.method](data);\n      }\n\n      // fnret-function auslösen\n      const fnret = new Event(`fnret-${receiver.attrName}`, {\n        composed: false,\n        bubbles: false,\n      });\n      fnret.detail = response;\n      receiver.element.dispatchEvent(fnret);\n\n      // @-ƒ-function auslösen\n      const customEvent = new Event(`ƒ-${receiver.attrName}`, {\n        composed: false,\n        bubbles: false,\n      });\n      customEvent.detail = response;\n      receiver.element.dispatchEvent(customEvent);\n    }\n\n    /**\n     *\n     * @param wire (String) Name of the wire\n     * @param cb (function) Callback function cb(detailData)\n     * @param [before] (Boolean) append before the components are triggered, default is false\n     * @returns {number} Index of hook\n     * @private\n     */\n    _FBPAddWireHook(wire, cb, before) {\n      // eslint-disable-next-line no-param-reassign\n      before = before || false;\n      if (this.__wirebundle[wire]) {\n        if (before) {\n          this.__wirebundle[wire].unshift(cb);\n          return 0;\n        }\n        const l = this.__wirebundle[wire].push(cb);\n        return l - 1;\n      }\n      this.__wirebundle[wire] = [cb];\n      return 1;\n    }\n\n    /**\n     * Log all triggered wires for this component. This function may help you at debugging.\n     * Select your element in the dev console and call `$0._FBPTraceWires()`\n     *\n     *\n     * @private\n     */\n    _FBPTraceWires() {\n      const self = this;\n      // eslint-disable-next-line guard-for-in,no-restricted-syntax\n      for (const wire in this.__wirebundle) {\n        this._FBPAddWireHook(\n          wire,\n          e => {\n            const ua = navigator.userAgent.toLowerCase();\n            let agent = true;\n            if (ua.indexOf('safari') !== -1) {\n              if (ua.indexOf('chrome') > -1) {\n                agent = true; // Chrome\n              } else {\n                agent = false; // Safari\n              }\n            }\n\n            if (agent) {\n              // eslint-disable-next-line no-console\n              console.groupCollapsed('Trace for', `${this.nodeName}: ${wire}`);\n              // eslint-disable-next-line no-console\n              console.table([{ host: self, wire, data: e }]);\n\n              // eslint-disable-next-line no-console\n              console.groupCollapsed('Data');\n              // eslint-disable-next-line no-console\n              console.log(e);\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n\n              // eslint-disable-next-line no-console\n              console.groupCollapsed('Target Elements');\n              // eslint-disable-next-line no-console\n              console.table(self.__wirebundle[wire]);\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n\n              // eslint-disable-next-line no-console\n              console.groupCollapsed('Call Stack');\n              // eslint-disable-next-line no-console\n              console.log(new Error().stack);\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n            }\n          },\n          true\n        );\n      }\n    }\n\n    /**\n     * Get information for the triggered wire. This function may help you at debugging.\n     * Select your element in the dev console and call `$0._FBPDebug('--dataReceived')`\n     *\n     * @param wire\n     * @param openDebugger opens the debugger console, so you can inspect your component.\n     * @private\n     */\n    _FBPDebug(wire, openDebugger) {\n      const self = this;\n      this._FBPAddWireHook(\n        wire,\n        e => {\n          if (openDebugger) {\n            // eslint-disable-next-line no-debugger\n            debugger;\n          } else {\n            const ua = navigator.userAgent.toLowerCase();\n            let agent = true;\n            if (ua.indexOf('safari') !== -1) {\n              if (ua.indexOf('chrome') > -1) {\n                agent = true; // Chrome\n              } else {\n                agent = false; // Safari\n              }\n            }\n\n            if (agent) {\n              // eslint-disable-next-line no-console\n              console.group('Debug', `${this.nodeName}: ${wire}`);\n              // eslint-disable-next-line no-console\n              console.group('Target Elements');\n              // eslint-disable-next-line no-console\n              console.table(self.__wirebundle[wire]);\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n\n              // eslint-disable-next-line no-console\n              console.groupCollapsed('Data');\n              // eslint-disable-next-line no-console\n              console.log(e);\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n\n              // eslint-disable-next-line no-console\n              console.groupCollapsed('Call Stack');\n              // eslint-disable-next-line no-console\n              console.log(new Error().stack);\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n            }\n          }\n        },\n        true\n      );\n    }\n\n    /**\n     *\n     * @param str\n     * @return {*}\n     * @private\n     */\n    // eslint-disable-next-line class-methods-use-this\n    __toCamelCase(str) {\n      return str.replace(/-([a-z])/g, g => g[1].toUpperCase());\n    }\n\n    /**\n     * parses the dom for flowbased programming tags\n     * @param dom dom node\n     * @private\n     */\n    _appendFBP(dom) {\n      const self = this;\n      const wirebundle = this.__wirebundle;\n      // get all elements which live in the host\n      const nl = dom.querySelectorAll('*');\n      const l = nl.length - 1;\n\n      // eslint-disable-next-line func-names\n      const _collectReceivers = function (element, i, attr) {\n        // collect receiver\n        element.attributes[i].value.split(',').forEach(w => {\n          const r = this.__resolveWireAndPath(w);\n          // create empty if not exist\n          if (!wirebundle[r.receivingWire]) {\n            wirebundle[r.receivingWire] = [];\n          }\n          wirebundle[r.receivingWire].push({\n            element,\n            method: this.__toCamelCase(attr),\n            attrName: attr,\n            path: r.path,\n          });\n        });\n      };\n      // eslint-disable-next-line func-names\n      const _collectPropertySetters = function (element, i, property) {\n        // split multiple wires\n        element.attributes[i].value.split(',').forEach(w => {\n          const r = this.__resolveWireAndPath(w);\n          // create empty if not exist\n          if (!wirebundle[r.receivingWire]) {\n            wirebundle[r.receivingWire] = [];\n          }\n          wirebundle[r.receivingWire].push({\n            element,\n            property: this.__toCamelCase(property),\n            path: r.path,\n          });\n        });\n      };\n\n      // eslint-disable-next-line func-names\n      const _extractEventWires = function (fwire) {\n        let wire;\n\n        const trimmedWire = fwire.trim();\n\n        let type = 'call';\n        if (trimmedWire.startsWith('((')) {\n          wire = trimmedWire.substring(2, trimmedWire.length - 2);\n          type = 'setValue';\n        } else if (trimmedWire.startsWith('-^')) {\n          wire = trimmedWire.substring(2);\n          type = 'fireOnHost';\n        } else if (trimmedWire.startsWith('^')) {\n          wire = trimmedWire.substring(1);\n          type = 'fire';\n          if (trimmedWire.startsWith('^^')) {\n            wire = trimmedWire.substring(2);\n            type = 'fireBubble';\n          }\n        } else if (trimmedWire === ':STOP') {\n          type = 'stop';\n          wire = 'stop';\n        } else if (trimmedWire === ':PREVENTDEFAULT') {\n          type = 'preventdefault';\n          wire = 'preventdefault';\n        } else {\n          wire = trimmedWire;\n          type = 'call';\n        }\n        return { type, wire };\n      };\n\n      // eslint-disable-next-line no-plusplus\n      for (let x = l; x >= 0; --x) {\n        const element = nl[x];\n\n        // skip template tags\n        if (element.tagName === 'TEMPLATE') {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        for (let i = 0; i < element.attributes.length; i += 1) {\n          // collect receiving tags\n          if (element.attributes[i].name.startsWith('fn-')) {\n            const attr = element.attributes[i].name.substring(3);\n            _collectReceivers.call(this, element, i, attr);\n            // eslint-disable-next-line no-continue\n            continue;\n          }\n\n          // collect sending tags\n          if (element.attributes[i].name.startsWith('at-')) {\n            const eventname = element.attributes[i].name.substring(3);\n            const fwires = element.attributes[i].value;\n            fwires.split(',').forEach(fwire => {\n              const __ret = _extractEventWires(fwire);\n              // eslint-disable-next-line no-use-before-define\n              registerEvent(eventname, __ret.type, __ret.wire, element);\n            });\n            // eslint-disable-next-line no-continue\n            continue;\n          }\n          // collect data property setter receiver\n          if (element.attributes[i].name.startsWith('set-')) {\n            const property = element.attributes[i].name.substring(4);\n            _collectPropertySetters.call(this, element, i, property);\n            // eslint-disable-next-line no-continue\n            continue;\n          }\n\n          // collect data property receiver\n          if (element.attributes[i].name.startsWith('ƒ-.')) {\n            const property = element.attributes[i].name.substring(3);\n            _collectPropertySetters.call(this, element, i, property);\n            // eslint-disable-next-line no-continue\n            continue;\n          }\n\n          // collect receiving tags\n          if (element.attributes[i].name.startsWith('ƒ-')) {\n            const attr = element.attributes[i].name.substring(2);\n            _collectReceivers.call(this, element, i, attr);\n            // eslint-disable-next-line no-continue\n            continue;\n          }\n\n          // collect sending tags\n          if (element.attributes[i].name.startsWith('@-')) {\n            const eventname = element.attributes[i].name.substring(2);\n            const fwires = element.attributes[i].value;\n            fwires.split(',').forEach(fwire => {\n              const __ret = _extractEventWires(fwire);\n              // eslint-disable-next-line no-use-before-define\n              registerEvent(eventname, __ret.type, __ret.wire, element);\n            });\n            // eslint-disable-next-line no-continue\n            continue;\n          }\n        }\n      }\n\n      /**\n       * register event on current element\n       * @param eventname\n       * @param type\n       * @param wire\n       * @private\n       */\n      function registerEvent(eventname, type, wire, element) {\n        // find properties in wire\n        // eslint-disable-next-line no-useless-escape\n        const match = wire.match(/([a-z0-9\\-_*\\.]+)/gi);\n\n        const handler = {\n          // prevent default and stop propagation\n          stop(e) {\n            e.stopPropagation();\n          },\n          preventdefault(e) {\n            e.preventDefault();\n          },\n\n          call(e) {\n            /**\n             * Prüfe ob die Funktion mit einem Wert aus dem Host oder mit den Details des Events ausgeführt werden soll.\n             * --wire(hostName) ==> wirft this.hostName in die Funktion sonst wird e.detail verwendet\n             *\n             */\n\n            let effectiveWire = wire;\n            let detailData = e.detail;\n            if (match !== null && match.length > 1) {\n              // --wireName(*) sends the raw event\n              // --wireName(*.mouseX) sends property mouseX of the event\n\n              if (match[1].startsWith('*')) {\n                if (match[1].length === 1) {\n                  // send raw event\n                  detailData = e;\n                } else {\n                  // send event subprop with *.notDetail.xxx\n                  detailData = self._pathGet(\n                    e,\n                    match[1].substring(2, match[1].length)\n                  );\n                }\n              } else {\n                // send host property\n                detailData = self._pathGet(self, match[1]);\n              }\n              // eslint-disable-next-line prefer-destructuring\n              effectiveWire = match[0];\n            }\n\n            self._FBPTriggerWire(effectiveWire, detailData);\n          },\n\n          fire(e) {\n            if (match !== null && match.length > 1) {\n              const prop = match[1];\n              const theEvent = match[0];\n              const customEvent = new Event(theEvent, {\n                composed: false,\n                bubbles: true,\n              });\n              // send details with *.sub or *\n              if (prop.startsWith('*')) {\n                if (prop.length === 1) {\n                  // send raw event\n                  customEvent.detail = e;\n                } else {\n                  customEvent.detail = self._pathGet(e, prop.substring(2));\n                }\n              } else {\n                customEvent.detail = self._pathGet(self, prop);\n              }\n              e.currentTarget.dispatchEvent(customEvent);\n            } else {\n              const customEvent = new Event(wire, {\n                composed: false,\n                bubbles: true,\n              });\n              customEvent.detail = e.detail;\n              e.currentTarget.dispatchEvent(customEvent);\n            }\n          },\n\n          fireOnHost(e) {\n            if (match !== null && match.length > 1) {\n              const prop = match[1];\n              const theEvent = match[0];\n              const customEvent = new Event(theEvent, {\n                composed: false,\n                bubbles: true,\n              });\n              // send details with *.sub or *\n              if (prop.startsWith('*')) {\n                if (prop.length === 1) {\n                  // send raw event\n                  customEvent.detail = e;\n                } else {\n                  customEvent.detail = self._pathGet(e, prop.substring(2));\n                }\n              } else {\n                customEvent.detail = self._pathGet(self, prop);\n              }\n              self.dispatchEvent(customEvent);\n            } else {\n              const customEvent = new Event(wire, {\n                composed: false,\n                bubbles: true,\n              });\n              customEvent.detail = e.detail;\n              self.dispatchEvent(customEvent);\n            }\n          },\n\n          fireBubble(e) {\n            if (match !== null && match.length > 1) {\n              const prop = match[1];\n              const theEvent = match[0];\n              const customEvent = new Event(theEvent, {\n                composed: true,\n                bubbles: true,\n              });\n              // send details with *.sub or *\n\n              if (prop.startsWith('*')) {\n                if (prop.length === 1) {\n                  // send raw event\n                  customEvent.detail = e;\n                } else {\n                  customEvent.detail = self._pathGet(e, prop.substring(2));\n                }\n              } else {\n                customEvent.detail = self._pathGet(self, prop);\n              }\n              e.currentTarget.dispatchEvent(customEvent);\n            } else {\n              const customEvent = new Event(wire, {\n                composed: true,\n                bubbles: true,\n              });\n              customEvent.detail = e.detail;\n              e.currentTarget.dispatchEvent(customEvent);\n            }\n          },\n          setValue(e) {\n            self._pathSet(self, wire, e.detail);\n\n            // self.set(wire, e.detail, self);\n          },\n        };\n\n        element.addEventListener(eventname, handler[type]);\n        self.__FBPEventlistener.push({\n          element,\n          event: eventname,\n          handler: handler[type],\n        });\n      }\n\n      // queueing for _FBPTriggerWire\n      if (!this.__fbp_ready) {\n        this._FBPReady();\n\n        const queuelength = this.__wireQueue.length;\n        for (let i = 0; i < queuelength; i += 1) {\n          const t = this.__wireQueue.shift();\n          this._FBPTriggerWire(t.w, t.d);\n        }\n      }\n    }\n\n    /**\n     * Livecycle method\n     * This method is called, when the wires are ready.\n     * And triggers the `|--FBPready` wire. This does *not* respect a lit updateComplete\n     * @private\n     */\n    _FBPReady() {\n      this.__fbp_ready = true;\n      this._FBPTriggerWire('|--FBPready', this);\n    }\n\n    /**\n     *\n     * @param wire\n     * @param detailData\n     * @private\n     */\n    __enqueueTrigger(wire, detailData) {\n      this.__wireQueue.push({ w: wire, d: detailData });\n    }\n\n    /**\n     *\n     * @param w\n     * @return {{path, receivingWire}}\n     * @private\n     */\n    // eslint-disable-next-line class-methods-use-this\n    __resolveWireAndPath(w) {\n      // finde --wire(*.xx.yy)  => group1 = --wire  group2 = xx.yy\n\n      // eslint-disable-next-line no-useless-escape\n      const match = w.trim().match(/(^[^\\(]*)\\(?\\*?\\.?([^\\)]*)/);\n      const receivingWire = match[1];\n      const path = match[2];\n\n      return { receivingWire, path };\n    }\n\n    /**\n     * Reads a value from a path.  If any sub-property in the path is `undefined`,\n     * this method returns `undefined` (will never throw.\n     *\n     * @param {Object} root Object from which to dereference path from\n     * @param {string | !Array<string|number>} path Path to read\n     * @return {*} Value at path, or `undefined` if the path could not be fully dereferenced.\n     * @private\n     */\n    _pathGet(root, path) {\n      let prop = root;\n      const parts = this._split(path);\n      // Loop over path parts[0..n-1] and dereference\n      for (let i = 0; i < parts.length; i += 1) {\n        if (!prop) {\n          return false;\n        }\n        const part = parts[i];\n        prop = prop[part];\n      }\n\n      return prop;\n    }\n\n    /**\n     * Sets a value to a path.  If any sub-property in the path is `undefined`,\n     * this method will no-op.\n     *\n     * @param {Object} root Object from which to dereference path from\n     * @param {string | !Array<string|number>} path Path to set\n     * @param {*} value Value to set to path\n     * @return {string | boolean} The normalized version of the input path, return false if no prop\n     * @private\n     */\n    _pathSet(root, path, value) {\n      let prop = root;\n      const parts = this._split(path);\n      const last = parts[parts.length - 1];\n      // used for @-event=\"((prop.sub))\"\n      if (parts.length > 1) {\n        // Loop over path parts[0..n-2] and dereference\n        for (let i = 0; i < parts.length - 1; i += 1) {\n          const part = parts[i];\n          prop = prop[part];\n          if (!prop) {\n            return false;\n          }\n        }\n        // Set value to object at end of path\n        prop[last] = value;\n      } else {\n        // Simple property set\n        prop[path] = value;\n      }\n      return parts.join('.');\n    }\n\n    /**\n     * Splits a path into an array of property names. Accepts either arrays\n     * of path parts or strings.\n     *\n     * Example:\n     *\n     * ```\n     * split(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\n     * split('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n     * ```\n     *\n     * @param {string | !Array<string|number>} path Input path\n     * @return {!Array<string>} Array of path parts\n     * @suppress {checkTypes}\n     * @private\n     */\n    // eslint-disable-next-line class-methods-use-this\n    _split(path) {\n      return path.toString().split('.');\n    }\n  };\n"]}