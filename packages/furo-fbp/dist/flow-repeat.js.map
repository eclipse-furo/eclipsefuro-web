{"version":3,"file":"flow-repeat.js","sourceRoot":"./src/","sources":["flow-repeat.js"],"names":[],"mappings":"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","sourcesContent":["import { FBP } from './fbp.js';\nimport './empty-fbp-node.js';\n\n/**\n * `flow-repeat`\n *\n * Custom element to repeat Arrays. The repeated items are injected *before* the `flow-repeat` element. If you need the repeated items inside of an other dom node, use [`setInsertRef`](./flow-repeat/#setinsertref)\n *\n *\n * ```html\n * <flow-repeat ƒ-inject-items=\"--dataArray\">\n *   <template>\n *     <repeated-item index=\"${this.index}\" ƒ-inject=\"--init\">\n *   </template>\n * </flow-repeat>\n * ```\n * > **Note**: if you want to bind a repeater node, use `furo-data-flow-repeat`.\n *\n *\n *  ## Available wires in the template:\n *\n *  > **Note**: Each repeated item has its own closed scope. You can not use the wires outside of the `template`.\n *  > Use events to interact with components outside of the template.\n *\n * -  `--init` : contains the repeated item, fired only once on creation of the repeated node\n * -  `--item` : contains the repeated item, fired on every inject\n * -  `--firstItem` : contains the repeated item, fired on the first element.\n * -  `--lastItem` : contains the repeated item, fired on the last element.\n * -  `--index` : contains a number with the index of the element.\n * -  `--host` : contains a reference to the host component.\n * -  `--trigger` : contains what was passed in to the triggering method.\n * -  `--triggerFirst` : contains what was passed in to the triggering method.\n * -  `--triggerLast` : contains what was passed in to the triggering method.\n * -  `--itemSelected` : contains `true`, is triggered with select(index).\n * -  `--itemDeSelected` : contains `false`, is triggered when another item is selected with select(index).\n *\n * ## Available attributes\n * **index** contains the current index of the item. Use this to fire a event with an index like `@-click=\"^^item-clicked(index)\"`\n * **item** contains the current index of the item. Use this to fire a event with the repeated item like `@-click=\"^^item-selected(item)\"`\n *\n *\n * @summary Custom element to allow using FBPs template features in repeated template\n *\n * @fires {index of the element} last-element-selected -  Fired when the last element is selected. Use this to trigger a load next.\n * @fires {Number} items-in-dom -  Fired when items are attached to the dom, with Number of items.\n *\n * @customElement\n * @mixes FBP\n */\nexport class FlowRepeat extends FBP(HTMLElement) {\n  constructor() {\n    super();\n    /**\n     * @private\n     */\n    this.template = undefined;\n    /**\n     * @private\n     */\n    this._insertedItems = [];\n  }\n\n  /**\n   * Clear the list\n   */\n  clear() {\n    this.injectItems([]);\n  }\n\n  /**\n   * Triggers the wire `--itemSelected` on selected item and `--itemDeSelected` on last selected Item.\n   *\n   * @param index {int} - Index of item to select\n   */\n  select(index) {\n    if (this._insertedItems[index]) {\n      // deselect the last selected\n      if (this.selectedIndex !== undefined) {\n        this.deselect(this.selectedIndex);\n      }\n\n      this._insertedItems[index].virtualElement._FBPTriggerWire(\n        '--itemSelected',\n        true\n      );\n      this.selectedIndex = index;\n    }\n  }\n\n  /**\n   * Select item by its identity.\n   *\n   * Using this method only works when you have set the `identity-path`.\n   *\n   * @param identifier {*} Identity from `identity-path`\n   */\n  selectIdentity(identifier) {\n    if (this._insertedItems.length === 0) {\n      this._selIdentityQueue = identifier;\n    } else {\n      this._selIdentityQueue = undefined;\n\n      // eslint-disable-next-line no-restricted-syntax\n      const arrayLength = this._insertedItems.length;\n      let i = 0;\n      do {\n        if (this._insertedItems[i].identity === identifier) {\n          this.select(i);\n          break;\n        }\n        i += 1;\n      } while (i < arrayLength);\n    }\n  }\n\n  /**\n   * Selects next index.  If none was selected, the first index will be selected.\n   *\n   * If you reached the last index, the first index will be selected.\n   *\n   * If you reach the last element, `last-element-selected` will fire.\n   *\n   * Triggers the wire `--itemSelected` on selected item and `--itemDeSelected` on last selected Item\n   */\n  selectNextIndex() {\n    let i = this.selectedIndex + 1;\n    // loop around\n    if (!this._insertedItems[i]) {\n      i = 0;\n    }\n    this.select(i);\n\n    if (this._insertedItems.length - 1 === this.selectedIndex) {\n      const customEvent = new Event('last-element-selected', {\n        composed: true,\n        bubbles: true,\n      });\n      customEvent.detail = i;\n      this.dispatchEvent(customEvent);\n    }\n  }\n\n  /**\n   * Selects the previous index.\n   *\n   * If you are on the first item, the last will be selected.\n   *\n   * Triggers the wire `--itemSelected` on selected item and `--itemDeSelected` on last selected Item\n   */\n  selectPreviousIndex() {\n    let i = this.selectedIndex - 1;\n    // loop around\n    if (i < 0) {\n      i = this._insertedItems.length - 1;\n    }\n    this.select(i);\n  }\n\n  /**\n   * Triggers the currently selected item.\n   *\n   * Triggers the wire `--trigger` on the every item.\n   *\n   * Triggers the wire `--triggerIndex` on the every item.\n   *\n   * @param data {*} - Data to forward.\n   */\n  triggerSelected(data) {\n    this.triggerIndex(this.selectedIndex, data);\n  }\n\n  /**\n   * Triggers all nodes.\n   *\n   * Triggers the wire `--trigger` on the every item.\n   *\n   * Triggers the wire `--triggerIndex` on the every item.\n   *\n   * @param data {*} - data to forward\n   */\n  triggerAll(data) {\n    for (let i = 0; i < this._insertedItems.length; i += 1) {\n      this.triggerIndex(i, data);\n    }\n  }\n\n  /**\n   * Triggers the wire `--itemDeSelected` on the last selected item\n   */\n  deselect() {\n    if (\n      this.selectedIndex !== undefined &&\n      this._insertedItems[this.selectedIndex]\n    ) {\n      this._insertedItems[this.selectedIndex].virtualElement._FBPTriggerWire(\n        '--itemDeSelected',\n        false\n      );\n      this.selectedIndex = undefined;\n    }\n  }\n\n  /**\n   * Set a reference to append the repeated elements in to the ref instead of appending them before the repeater itself.\n   *\n   * @param ref {DomNode} - Node to append the repeated items.\n   */\n  setInsertRef(ref) {\n    this._insertMode = 'appendchild';\n    this._insertTarget = ref;\n  }\n\n  /**\n   *\n   * @param attachedElem\n   * @param reference\n   * @private\n   */\n  _insertToDom(attachedElem, reference) {\n    if (this._insertMode === 'appendchild') {\n      this._insertTarget.appendChild(attachedElem);\n    } else {\n      this.parentNode.insertBefore(attachedElem, reference);\n    }\n  }\n\n  /**\n   * Triggers the wire `--itemDeSelected` on all items\n   */\n  deselectAll() {\n    this._insertedItems.forEach(item => {\n      item.virtualElement._FBPTriggerWire('--itemDeSelected', false);\n      this.selectedIndex = undefined;\n    });\n  }\n\n  /**\n   *\n   * @param parent\n   * @return {null|*}\n   * @private\n   */\n  _findFirstHost(parent) {\n    if (parent && parent.host) {\n      return parent.host;\n    }\n    if (parent === null) {\n      return null;\n    }\n    return this._findFirstHost(parent.parentNode);\n  }\n\n  /**\n   * Inject items to repeat.\n   *\n   * @param items {Array} - Items to repeat\n   */\n  injectItems(items) {\n    if (!Array.isArray(items)) {\n      // eslint-disable-next-line no-console\n      console.info('Items is not an array ', items, this);\n      // make the list empty\n      // eslint-disable-next-line no-param-reassign\n      items = [];\n    }\n\n    this._firstHost = this._findFirstHost(this.parentNode);\n    items.forEach((e, i, a) => {\n      let identity = false;\n      if (this.identityPath) {\n        identity = this.identityPath\n          .split('.')\n          .reduce((acc, part) => acc && acc[part], e);\n      }\n\n      let elem;\n      // wenn das element noch nicht existiert\n      if (!this._insertedItems[i]) {\n        elem = this._buildDomNode(identity, i);\n        elem._FBPTriggerWire('--init', e);\n      } else if (\n        this._insertedItems[i].identity === false ||\n        this._insertedItems[i].identity !== identity\n      ) {\n        elem = this._buildDomNode(identity, i);\n        // Schiebe alle elemente des Knotens vor das erste kind des nächsten möglichen knoten\n        let reference = this;\n        if (\n          this._insertedItems[i + 1] &&\n          this._insertedItems[i + 1].children[0]\n        ) {\n          [reference] = this._insertedItems[i + 1].children;\n        }\n\n        // move the nodes\n        this._insertedItems[i].children.forEach(attachedElem => {\n          this._insertToDom(attachedElem, reference);\n        });\n        elem._FBPTriggerWire('--init', e);\n      } else {\n        elem = this._insertedItems[i].virtualElement;\n      }\n\n      // set item and index value on created element\n      elem.item = e;\n      elem.index = i;\n\n      // trigger wires\n      elem._FBPTriggerWire(this._internalWire, { item: e, index: i });\n      if (i === 0) {\n        elem._FBPTriggerWire('--firstItem', e);\n      }\n\n      if (i === a.length - 1) {\n        elem._FBPTriggerWire('--lastItem', e);\n      }\n\n      elem._FBPTriggerWire('--item', e);\n\n      elem._FBPTriggerWire('--host', this._firstHost);\n      elem._FBPTriggerWire('--index', i);\n    });\n\n    // überzählige elemente aus dem dom entfernen\n    this._insertedItems\n      .slice(items.length, this._insertedItems.length)\n      .forEach(handle => {\n        handle.children.forEach(attachedElem => {\n          attachedElem.remove();\n        });\n      });\n    // überzählige elemente aus dem array entfernen\n    this._insertedItems.splice(items.length);\n\n    if (items.length > 0) {\n      setTimeout(() => {\n        const customEvent = new Event('items-in-dom', {\n          composed: true,\n          bubbles: false,\n        });\n        customEvent.detail = items.length;\n        this.dispatchEvent(customEvent);\n      }, 0);\n    }\n\n    // selectByIdentity queue\n    if (this._selIdentityQueue) {\n      this.selectIdentity(this._selIdentityQueue);\n    }\n  }\n\n  /**\n   *\n   * @param identity\n   * @param i\n   * @return {HTMLElement}\n   * @private\n   */\n  _buildDomNode(identity, i) {\n    // build hidden elem\n\n    const elem = document.createElement('empty-fbp-node');\n    elem.attachShadow({ mode: 'open' });\n\n    // this is sometimes needed when template is=\"flow-repeat\" is used.\n    if (this.template === undefined) {\n      const t = this.querySelector('template');\n      if (t && t.content) {\n        this.template = t.content;\n      }\n    }\n\n    elem.shadowRoot.appendChild(this.template.cloneNode(true));\n    elem._appendFBP(elem.shadowRoot);\n\n    const handle = {\n      virtualElement: elem,\n      children: [].slice.call(elem.shadowRoot.children),\n      identity,\n    };\n\n    // remove old entries\n    if (this._insertedItems[i]) {\n      this._insertedItems[i].children.forEach(attachedElem => {\n        attachedElem.remove();\n      });\n    }\n\n    this._insertedItems[i] = handle;\n\n    this._insertToDom(elem.shadowRoot.firstElementChild, this);\n    return elem;\n  }\n\n  /**\n   * @private\n   */\n  connectedCallback() {\n    this.style.display = 'none';\n    // Create a shadow root to the element.\n\n    const t = this.querySelector('template');\n    if (t && t.content) {\n      this.template = t.content;\n    }\n\n    /**\n     * Identity path of a single item.\n     * Use this if you have a field which identifies the item.\n     * @type {*string}\n     */\n    this.identityPath = this.getAttribute('identity-path') || false;\n\n    this._internalWire = this.getAttribute('internal-wire') || '--itemInjected';\n  }\n\n  /**\n   * Triggers the wire `--trigger` on the first item.\n   *\n   * Triggers the wire --triggerFirst on the first item.\n   *\n   * @param data {*} - data to forward to the item.\n   */\n  triggerFirst(data) {\n    if (this._insertedItems[0]) {\n      this._insertedItems[0].virtualElement._FBPTriggerWire('--trigger', data);\n      this._insertedItems[0].virtualElement._FBPTriggerWire(\n        '--triggerFirst',\n        data\n      );\n    }\n  }\n\n  /**\n   * Triggers the wire `--trigger` on the last item.\n   *\n   * Triggers the wire --triggerLast on the last item.\n   *\n   * @param data {*} - data to forward to the item.\n   */\n  triggerLast(data) {\n    if (this._insertedItems[this._insertedItems.length - 1]) {\n      this._insertedItems[\n        this._insertedItems.length - 1\n      ].virtualElement._FBPTriggerWire('--trigger', data);\n      this._insertedItems[\n        this._insertedItems.length - 1\n      ].virtualElement._FBPTriggerWire('--triggerLast', data);\n    }\n  }\n\n  /**\n   * Triggers the wire `--trigger` on the  item.\n   *\n   * Triggers the wire `--triggerIndex` on the  item.\n   *\n   *\n   * @param i {int} - index of item that you want to trigger.\n   * @param data {*} - data to forward to the item.\n   */\n  triggerIndex(i, data) {\n    if (this._insertedItems[i]) {\n      this._insertedItems[i].virtualElement._FBPTriggerWire('--trigger', data);\n      this._insertedItems[i].virtualElement._FBPTriggerWire(\n        '--triggerIndex',\n        data\n      );\n    } else {\n      // eslint-disable-next-line no-console\n      console.warn('Out of index', this);\n    }\n  }\n}\n\nwindow.customElements.define('flow-repeat', FlowRepeat);\n"]}