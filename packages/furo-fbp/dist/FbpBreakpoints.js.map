{"version":3,"file":"FbpBreakpoints.js","sourceRoot":"./src/","sources":["FbpBreakpoints.js"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA4BG;AACH,IAAI,WAAW,GAAG,EAAE,CAAC;AAErB,MAAM,OAAO,cAAc;IACzB,MAAM,CAAC,cAAc,CAAC,WAAW;QAC/B,WAAW,GAAG,WAAW,CAAC;IAC5B,CAAC;IAED,MAAM,CAAC,WAAW;QAChB,OAAO,WAAW,CAAC;IACrB,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,gBAAgB,CAAC,IAAI;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAEhC,IAAI,IAAI,GAAG,QAAQ,CAAC,CAAC,oBAAoB;QAEzC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;YAChB,MAAM,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YACxB,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,QAAQ,IAAI,IAAI,CAAC,UAAU,EAAE,CAAC;gBACzC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;YACzB,CAAC;QACH,CAAC,CAAC,CAAC;QACH,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;;;;;;;;;;OAWG;IACH,MAAM,CAAC,UAAU,CAAC,EAAE;QAClB,MAAM,KAAK,GAAG,EAAE,CAAC;QACjB,IAAI,QAAQ,GAAG,KAAK,CAAC;QACrB,OAAO,EAAE,CAAC,UAAU,IAAI,IAAI,EAAE,CAAC;YAC7B,4BAA4B;YAC5B,IAAI,QAAQ,GAAG,CAAC,CAAC;YACjB,IAAI,QAAQ,GAAG,CAAC,CAAC;YACjB,sBAAsB;YACtB,uCAAuC;YACvC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBACzD,MAAM,GAAG,GAAG,EAAE,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACxC,IAAI,GAAG,CAAC,QAAQ,KAAK,EAAE,CAAC,QAAQ,EAAE,CAAC;oBACjC,IAAI,GAAG,KAAK,EAAE,EAAE,CAAC;wBACf,QAAQ,GAAG,QAAQ,CAAC;oBACtB,CAAC;oBACD,uCAAuC;oBACvC,QAAQ,EAAE,CAAC;gBACb,CAAC;YACH,CAAC;YAED,IAAI,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC;YAEzC,IAAI,QAAQ,EAAE,CAAC;gBACb,QAAQ,IAAI,UAAU,CAAC;gBACvB,QAAQ,GAAG,KAAK,CAAC;YACnB,CAAC;YACD,IAAI,QAAQ,GAAG,CAAC,EAAE,CAAC;gBACjB,KAAK,CAAC,OAAO,CAAC,GAAG,QAAQ,gBAAgB,QAAQ,GAAG,CAAC,GAAG,CAAC,CAAC;YAC5D,CAAC;iBAAM,CAAC;gBACN,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAC1B,CAAC;YACD,6CAA6C;YAC7C,EAAE,GAAG,EAAE,CAAC,UAAU,CAAC;YACnB,IAAI,EAAE,CAAC,QAAQ,KAAK,EAAE,EAAE,CAAC;gBACvB,iEAAiE;gBACjE,QAAQ,GAAG,IAAI,CAAC;gBAChB,6CAA6C;gBAC7C,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC;YACf,CAAC;QACH,CAAC;QACD,KAAK,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,2BAA2B;QAC/C,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IAC3B,CAAC;CACF","sourcesContent":["/**\n *\n * ```json\n * {\n *   path: \"app-shell::shadow > main-stage::shadow > furo-pages > view-echo\",\n *   wire: \"--responseEcho\",\n *   kind: \"CONDITIONAL\",\n *   condition:\"data.data.message==='Ping Pong'\",\n *   enabled : true\n * },{\n *   path: \"app-shell::shadow > main-stage::shadow > furo-pages > view-echo\",\n *   wire: \"--responseEcho\",\n *   kind: \"CONDITIONAL\",\n *   condition:\"this.getAttribute('name')==='echo-service'\",_getDomPath\n *   enabled : true\n * }, {\n *   path: \"app-shell::shadow > main-stage::shadow > furo-pages > view-echo\",\n *   wire: \"|--FBPready\",\n *   kind: \"TRACE\",\n *   enabled : true\n * },{\n *   path: \"app-shell::shadow > main-stage::shadow > furo-pages > view-echo\",\n *   wire: \"|--FBPready\",\n *   kind: \"BREAKPOINT\",\n *   enabled : false\n * }\n * ```\n * @type {*[]}\n */\nlet Breakpoints = [];\n\nexport class FbpBreakpoints {\n  static SetBreakpoints(breakpoints) {\n    Breakpoints = breakpoints;\n  }\n\n  static Breakpoints() {\n    return Breakpoints;\n  }\n\n  /**\n   * This will get the DOM Node for a path produced by FBP._getDomPath\n   * @param path\n   * @return {*}\n   * @constructor\n   */\n  static GetElementByPath(path) {\n    const stack = path.split(' > ');\n\n    let node = document; // start on document\n\n    stack.forEach(n => {\n      const t = n.split('::');\n      node = node.querySelector(t[0]);\n      if (t[1] === 'shadow' && node.shadowRoot) {\n        node = node.shadowRoot;\n      }\n    });\n    return node;\n  }\n\n  /**\n   * returns the querySelectorable path of the component.\n   *\n   * Note: html and body are not included.\n   *\n   * source inspired from https://stackoverflow.com/a/31281201/2946421\n   *\n   * Even there is no ::shadow selector in  DOM v1, this works fine for us\n   *\n   * @return {string}\n   * @private\n   */\n  static getDomPath(el) {\n    const stack = [];\n    let isShadow = false;\n    while (el.parentNode != null) {\n      // console.log(el.nodeName);\n      let sibCount = 0;\n      let sibIndex = 0;\n      // get sibling indexes\n      // eslint-disable-next-line no-plusplus\n      for (let i = 0; i < el.parentNode.childNodes.length; i++) {\n        const sib = el.parentNode.childNodes[i];\n        if (sib.nodeName === el.nodeName) {\n          if (sib === el) {\n            sibIndex = sibCount;\n          }\n          // eslint-disable-next-line no-plusplus\n          sibCount++;\n        }\n      }\n\n      let nodeName = el.nodeName.toLowerCase();\n\n      if (isShadow) {\n        nodeName += '::shadow';\n        isShadow = false;\n      }\n      if (sibCount > 1) {\n        stack.unshift(`${nodeName}:nth-of-type(${sibIndex + 1})`);\n      } else {\n        stack.unshift(nodeName);\n      }\n      // eslint-disable-next-line no-param-reassign\n      el = el.parentNode;\n      if (el.nodeType === 11) {\n        // https://developer.mozilla.org/en-US/docs/Web/API/Node/nodeType\n        isShadow = true;\n        // eslint-disable-next-line no-param-reassign\n        el = el.host;\n      }\n    }\n    stack.splice(0, 1); // remove the html  element\n    return stack.join(' > ');\n  }\n}\n"]}