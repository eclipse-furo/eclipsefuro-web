{"version":3,"file":"LitFBP.js","sourceRoot":"./src/","sources":["LitFBP.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Use this to enable FBP to your lit element written in typescript.\n */\n\nimport { LitElement, PropertyValues } from \"lit\";\n// eslint-disable-next-line import/extensions\nimport {LitFBPAC} from \"./LitFBPAC\"\n\ntype Constructor<T = {}> = new (...args: any[]) => T;\n\nexport const LitFBP = <T extends Constructor<LitElement>>(superClass: T) => {\n  class MixinClass extends superClass {\n    private __FBPEventlistener: any[] = [];\n\n    private __wirebundle: { [key: string]: [any] } = {};\n\n    private __wireQueue: any[] = [];\n\n    private __fbpAppended: Boolean = false;\n\n    private __fbp_ready: Boolean = false;\n\n    constructor(...arg: any[]) {\n      super(arg[0]);\n    }\n\n    /**\n     * Auto append fbp for lit elements\n     * @private\n     */\n    protected override firstUpdated(_changedProperties: PropertyValues): void {\n      // ensure to append only once\n      if (!this.__fbpAppended && this.shadowRoot !== null) {\n        this._appendFBP(this.shadowRoot);\n        this.__fbpAppended = true;\n      }\n\n      super.firstUpdated(_changedProperties);\n    }\n\n    /**\n     * Triggers a wire\n     * @param wire (String) Name of the wire like --buttonClicked\n     * @param detailData (*) data to pass\n     * @private\n     */\n    protected _FBPTriggerWire(wire: string, detailData: any) {\n      if (this.__fbp_ready) {\n        if (this.__wirebundle[wire]) {\n          this.__wirebundle[wire].forEach(receiver => {\n            // check for hooks\n            if (typeof receiver === \"function\") {\n              receiver(detailData);\n            } else if (\n              typeof receiver.element[receiver.method] === \"function\"\n            ) {\n              this._call(detailData, receiver);\n            } else if (receiver.property) {\n              let data = detailData;\n              if (receiver.path) {\n                data = this._pathGet(detailData, receiver.path);\n              }\n              this._pathSet(receiver.element, receiver.property, data);\n            } else if (receiver.element.localName.includes(\"-\")) {\n              // retry call with whenDefined because sometimes the components are just not defined at the time ƒ-method is triggered\n              customElements\n                .whenDefined(receiver.element.localName)\n                .then(() => {\n                  if (typeof receiver.element[receiver.method] === \"function\") {\n                    this._call(detailData, receiver);\n                  } else {\n                    // eslint-disable-next-line no-console\n                    console.warn(\n                      `${receiver.method} is not a method of ${receiver.element.nodeName}`,\n                      receiver.element\n                    );\n                  }\n                });\n            } else {\n              // eslint-disable-next-line no-console\n              console.warn(\n                `${receiver.method} is not a method of ${receiver.element.nodeName}`,\n                receiver.element\n              );\n            }\n          });\n        }\n      } else {\n        this.__enqueueTrigger(wire, detailData);\n      }\n    }\n\n    /**\n     *\n     * @param detailData\n     * @param receiver\n     * @private\n     */\n    private _call(detailData: any, receiver: any) {\n      let response;\n      // array spreaden\n      if (\n        Array.isArray(detailData) &&\n        receiver.element[receiver.method].length > 1\n      ) {\n        // eslint-disable-next-line prefer-spread\n        response = receiver.element[receiver.method].apply(\n          receiver.element,\n          detailData\n        );\n      } else {\n        let data = detailData;\n        if (receiver.path) {\n          data = this._pathGet(detailData, receiver.path);\n        }\n        response = receiver.element[receiver.method](data);\n      }\n\n      // fnret-function auslösen\n      receiver.element.dispatchEvent(\n        new CustomEvent(`fnret-${receiver.attrName}`, {\n          composed: false,\n          bubbles: false,\n          detail: response,\n        })\n      );\n    }\n\n    /**\n     *\n     * @param wire (String) Name of the wire\n     * @param cb (function) Callback function cb(detailData)\n     * @param [before] (Boolean) append before the components are triggered, default is false\n     * @returns {number} Index of hook\n     * @private\n     */\n    protected _FBPAddWireHook(wire: string, cb: Function, before: boolean) {\n      // eslint-disable-next-line no-param-reassign\n      before = before || false;\n      if (this.__wirebundle[wire]) {\n        if (before) {\n          this.__wirebundle[wire].unshift(cb);\n          return 0;\n        }\n        const l = this.__wirebundle[wire].push(cb);\n        return l - 1;\n      }\n      this.__wirebundle[wire] = [cb];\n      return 1;\n    }\n\n    /**\n     * Log all triggered wires for this component. This function may help you at debugging.\n     * Select your element in the dev console and call `$0._FBPTraceWires()`\n     *\n     *\n     * @private\n     */\n    protected _FBPTraceWires() {\n      const self = this;\n      // eslint-disable-next-line guard-for-in,no-restricted-syntax\n      for (const wire in this.__wirebundle) {\n        this._FBPAddWireHook(\n          wire,\n          (e: any) => {\n            const ua = navigator.userAgent.toLowerCase();\n            let agent = true;\n            if (ua.indexOf(\"safari\") !== -1) {\n              if (ua.indexOf(\"chrome\") > -1) {\n                agent = true; // Chrome\n              } else {\n                agent = false; // Safari\n              }\n            }\n\n            if (agent) {\n              // eslint-disable-next-line no-console\n              console.groupCollapsed(\"Trace for\", `${this.nodeName}: ${wire}`);\n              // eslint-disable-next-line no-console\n              console.table([{ host: self, wire, data: e }]);\n\n              // eslint-disable-next-line no-console\n              console.groupCollapsed(\"Data\");\n              // eslint-disable-next-line no-console\n              console.log(e);\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n\n              // eslint-disable-next-line no-console\n              console.groupCollapsed(\"Target Elements\");\n              // eslint-disable-next-line no-console\n              console.table(self.__wirebundle[wire]);\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n\n              // eslint-disable-next-line no-console\n              console.groupCollapsed(\"Call Stack\");\n              // eslint-disable-next-line no-console\n              console.log(new Error().stack);\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n            }\n          },\n          true\n        );\n      }\n    }\n\n    /**\n     * Get information for the triggered wire. This function may help you at debugging.\n     * Select your element in the dev console and call `$0._FBPDebug('--dataReceived')`\n     *\n     * @param wire\n     * @param openDebugger opens the debugger console, so you can inspect your component.\n     * @private\n     */\n    protected _FBPDebug(wire: string, openDebugger: boolean) {\n      const self = this;\n      this._FBPAddWireHook(\n        wire,\n        (e: any) => {\n          if (openDebugger) {\n            // eslint-disable-next-line no-debugger\n            debugger;\n          } else {\n            const ua = navigator.userAgent.toLowerCase();\n            let agent = true;\n            if (ua.indexOf(\"safari\") !== -1) {\n              if (ua.indexOf(\"chrome\") > -1) {\n                agent = true; // Chrome\n              } else {\n                agent = false; // Safari\n              }\n            }\n\n            if (agent) {\n              // eslint-disable-next-line no-console\n              console.group(\"Debug\", `${this.nodeName}: ${wire}`);\n              // eslint-disable-next-line no-console\n              console.group(\"Target Elements\");\n              // eslint-disable-next-line no-console\n              console.table(self.__wirebundle[wire]);\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n\n              // eslint-disable-next-line no-console\n              console.groupCollapsed(\"Data\");\n              // eslint-disable-next-line no-console\n              console.log(e);\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n\n              // eslint-disable-next-line no-console\n              console.groupCollapsed(\"Call Stack\");\n              // eslint-disable-next-line no-console\n              console.log(new Error().stack);\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n              // eslint-disable-next-line no-console\n              console.groupEnd();\n            }\n          }\n        },\n        true\n      );\n    }\n\n    /**\n     *\n     * @param str\n     * @return {*}\n     * @private\n     */\n    // eslint-disable-next-line class-methods-use-this\n    private __toCamelCase(str: string) {\n      return str.replace(/-([a-z])/g, g => g[1].toUpperCase());\n    }\n\n    /**\n     * parses the dom for flowbased programming tags\n     * @param dom dom node\n     * @private\n     */\n    private _appendFBP(dom: ShadowRoot) {\n      const self = this;\n      const wirebundle = this.__wirebundle;\n      // get all elements which live in the host\n      const nl = dom.querySelectorAll(\"*\");\n      const l = nl.length - 1;\n\n      // eslint-disable-next-line func-names\n      const _collectReceivers = (element: Element, i: number, attr: string) => {\n        // collect receiver\n        element.attributes[i].value.split(\",\").forEach(w => {\n          const r = this.__resolveWireAndPath(w);\n          // create empty if not exist\n          if (!wirebundle[r.receivingWire]) {\n            // @ts-ignore\n            wirebundle[r.receivingWire] = [];\n          }\n          wirebundle[r.receivingWire].push({\n            element,\n            method: this.__toCamelCase(attr),\n            attrName: attr,\n            path: r.path,\n          });\n        });\n      };\n      // eslint-disable-next-line func-names\n      const _collectPropertySetters = (\n        element: Element,\n        i: number,\n        property: string\n      ) => {\n        // split multiple wires\n        element.attributes[i].value.split(\",\").forEach((w: string) => {\n          const r = this.__resolveWireAndPath(w);\n          // create empty if not exist\n          if (!wirebundle[r.receivingWire]) {\n            // @ts-ignore\n            wirebundle[r.receivingWire] = [];\n          }\n          wirebundle[r.receivingWire].push({\n            element,\n            property: this.__toCamelCase(property),\n            path: r.path,\n          });\n        });\n      };\n\n      // eslint-disable-next-line func-names\n      const _extractEventWires = (fwire: string) => {\n        let wire;\n\n        const trimmedWire = fwire.trim();\n\n        let type = \"call\";\n        if (trimmedWire.startsWith(\"((\")) {\n          wire = trimmedWire.substring(2, trimmedWire.length - 2);\n          type = \"setValue\";\n        } else if (trimmedWire.startsWith(\"-^\")) {\n          wire = trimmedWire.substring(2);\n          type = \"fireOnHost\";\n        } else if (trimmedWire.startsWith(\"^\")) {\n          wire = trimmedWire.substring(1);\n          type = \"fire\";\n          if (trimmedWire.startsWith(\"^^\")) {\n            wire = trimmedWire.substring(2);\n            type = \"fireBubble\";\n          }\n        } else if (trimmedWire === \":STOP\") {\n          type = \"stop\";\n          wire = \"stop\";\n        } else if (trimmedWire === \":PREVENTDEFAULT\") {\n          type = \"preventdefault\";\n          wire = \"preventdefault\";\n        } else {\n          wire = trimmedWire;\n          type = \"call\";\n        }\n        return { type, wire };\n      };\n\n      // eslint-disable-next-line no-plusplus\n      for (let x = l; x >= 0; --x) {\n        const element = nl[x];\n\n        // skip template tags\n        if (element.tagName === \"TEMPLATE\") {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        for (let i = 0; i < element.attributes.length; i += 1) {\n          // collect receiving tags\n          if (element.attributes[i].name.startsWith(\"fn-\")) {\n            const attr = element.attributes[i].name.substring(3);\n            _collectReceivers.call(this, element, i, attr);\n            // eslint-disable-next-line no-continue\n            continue;\n          }\n\n          // collect sending tags\n          if (element.attributes[i].name.startsWith(\"at-\")) {\n            const eventname = element.attributes[i].name.substring(3);\n            const fwires = element.attributes[i].value;\n            fwires.split(\",\").forEach(fwire => {\n              const __ret = _extractEventWires(fwire);\n              // eslint-disable-next-line no-use-before-define\n              registerEvent(eventname, __ret.type, __ret.wire, element);\n            });\n            // eslint-disable-next-line no-continue\n            continue;\n          }\n          // collect data property setter receiver\n          if (element.attributes[i].name.startsWith(\"set-\")) {\n            const property = element.attributes[i].name.substring(4);\n            _collectPropertySetters.call(this, element, i, property);\n            // eslint-disable-next-line no-continue\n            continue;\n          }\n\n        }\n      }\n\n      /**\n       * register event on current element\n       * @param eventname\n       * @param type\n       * @param wire\n       * @private\n       */\n      function registerEvent(\n        eventname: string,\n        type: string,\n        wire: string,\n        element: Element\n      ) {\n        // find properties in wire\n        // eslint-disable-next-line no-useless-escape\n        const match = wire.match(/([a-z0-9\\-_*\\.]+)/gi);\n\n        const handler: Record<string, any> = {\n          // prevent default and stop propagation\n          stop(e: Event) {\n            e.stopPropagation();\n          },\n          preventdefault(e: Event) {\n            e.preventDefault();\n          },\n          // todo veith nachschauen ob |Event\n          call(e: CustomEvent<any>) {\n            /**\n             * Prüfe ob die Funktion mit einem Wert aus dem Host oder mit den Details des Events ausgeführt werden soll.\n             * --wire(hostName) ==> wirft this.hostName in die Funktion sonst wird e.detail verwendet\n             *\n             */\n\n            let effectiveWire = wire;\n            let detailData = e.detail;\n            if (match !== null && match.length > 1) {\n              // --wireName(*) sends the raw event\n              // --wireName(*.mouseX) sends property mouseX of the event\n\n              if (match[1].startsWith(\"*\")) {\n                if (match[1].length === 1) {\n                  // send raw event\n                  detailData = e;\n                } else {\n                  // send event subprop with *.notDetail.xxx\n                  detailData = self._pathGet(\n                    e,\n                    match[1].substring(2, match[1].length)\n                  );\n                }\n              } else {\n                // send host property\n                detailData = self._pathGet(self, match[1]);\n              }\n              // eslint-disable-next-line prefer-destructuring\n              effectiveWire = match[0];\n            }\n            self._FBPTriggerWire(effectiveWire, detailData);\n          },\n\n          fire(e: CustomEvent) {\n            if (match !== null && match.length > 1) {\n              const prop = match[1];\n              const theEvent = match[0];\n\n              let edetail: any;\n              // send details with *.sub or *\n              if (prop.startsWith(\"*\")) {\n                if (prop.length === 1) {\n                  // send raw event\n                  edetail = e;\n                } else {\n                  edetail = self._pathGet(e, prop.substring(2));\n                }\n              } else {\n                edetail = self._pathGet(self, prop);\n              }\n\n              const customEvent = new CustomEvent(theEvent, {\n                composed: false,\n                bubbles: true,\n                detail: edetail,\n              });\n\n              // @ts-ignore\n              e.currentTarget.dispatchEvent(customEvent);\n            } else {\n              const customEvent = new CustomEvent(wire, {\n                composed: false,\n                bubbles: true,\n                detail: e.detail,\n              });\n\n              // @ts-ignore\n              e.currentTarget.dispatchEvent(customEvent);\n            }\n          },\n\n          fireOnHost(e: CustomEvent) {\n            if (match !== null && match.length > 1) {\n              const prop = match[1];\n              const theEvent = match[0];\n              let edetail: any;\n\n              // send details with *.sub or *\n              if (prop.startsWith(\"*\")) {\n                if (prop.length === 1) {\n                  // send raw event\n                  edetail = e;\n                } else {\n                  edetail = self._pathGet(e, prop.substring(2));\n                }\n              } else {\n                edetail = self._pathGet(self, prop);\n              }\n\n              const customEvent = new CustomEvent(theEvent, {\n                composed: false,\n                bubbles: true,\n                detail: edetail,\n              });\n\n              self.dispatchEvent(customEvent);\n            } else {\n              const customEvent = new CustomEvent(wire, {\n                composed: false,\n                bubbles: true,\n                detail: e.detail,\n              });\n\n              self.dispatchEvent(customEvent);\n            }\n          },\n\n          fireBubble(e: CustomEvent) {\n            if (match !== null && match.length > 1) {\n              const prop = match[1];\n              const theEvent = match[0];\n              let edetail: any;\n\n              // send details with *.sub or *\n\n              if (prop.startsWith(\"*\")) {\n                if (prop.length === 1) {\n                  // send raw event\n                  edetail = e;\n                } else {\n                  edetail = self._pathGet(e, prop.substring(2));\n                }\n              } else {\n                edetail = self._pathGet(self, prop);\n              }\n\n              const customEvent = new CustomEvent(theEvent, {\n                composed: true,\n                bubbles: true,\n                detail: edetail,\n              });\n\n              // @ts-ignore\n              e.currentTarget.dispatchEvent(customEvent);\n            } else {\n              const customEvent = new CustomEvent(wire, {\n                composed: true,\n                bubbles: true,\n                detail: e.detail,\n              });\n\n              // @ts-ignore\n              e.currentTarget.dispatchEvent(customEvent);\n            }\n          },\n          setValue(e: any) {\n            self._pathSet(self, wire, e.detail);\n            // self.set(wire, e.detail, self);\n          },\n        };\n\n        element.addEventListener(eventname, handler[type]);\n        self.__FBPEventlistener.push({\n          element,\n          event: eventname,\n          handler: handler[type],\n        });\n      }\n\n      // queueing for _FBPTriggerWire\n      if (!this.__fbp_ready) {\n        this._FBPReady();\n\n        const queuelength = this.__wireQueue.length;\n        for (let i = 0; i < queuelength; i += 1) {\n          const t = this.__wireQueue.shift();\n          this._FBPTriggerWire(t.w, t.d);\n        }\n      }\n    }\n\n    /**\n     * Livecycle method\n     * This method is called, when the wires are ready.\n     * And triggers the `|--FBPready` wire. This does *not* respect a lit updateComplete\n     * @private\n     */\n    protected _FBPReady() {\n      this.__fbp_ready = true;\n      this._FBPTriggerWire(\"|--FBPready\", this);\n    }\n\n    /**\n     *\n     * @param wire\n     * @param detailData\n     * @private\n     */\n    private __enqueueTrigger(wire: string, detailData: any) {\n      this.__wireQueue.push({ w: wire, d: detailData });\n    }\n\n    /**\n     *\n     * @param w\n     * @return {{path, receivingWire}}\n     * @private\n     */\n    // eslint-disable-next-line class-methods-use-this\n    private __resolveWireAndPath(w: string) {\n      // finde --wire(*.xx.yy)  => group1 = --wire  group2 = xx.yy\n\n      // eslint-disable-next-line no-useless-escape\n      const match = w.trim().match(/(^[^\\(]*)\\(?\\*?\\.?([^\\)]*)/);\n\n      // @ts-ignore\n      const receivingWire = match[1];\n      // @ts-ignore\n      const path = match[2];\n\n      return { receivingWire, path };\n    }\n\n    /**\n     * Reads a value from a path.  If any sub-property in the path is `undefined`,\n     * this method returns `undefined` (will never throw.\n     *\n     * @param {Object} root Object from which to dereference path from\n     * @param {string | !Array<string|number>} path Path to read\n     * @return {*} Value at path, or `undefined` if the path could not be fully dereferenced.\n     * @protected\n     */\n    protected _pathGet(root: any, path: string) {\n      let prop = root;\n      const parts = this._split(path);\n      // Loop over path parts[0..n-1] and dereference\n      for (let i = 0; i < parts.length; i += 1) {\n        if (!prop) {\n          return false;\n        }\n        const part = parts[i];\n        prop = prop[part];\n      }\n\n      return prop;\n    }\n\n    /**\n     * Sets a value to a path.  If any sub-property in the path is `undefined`,\n     * this method will no-op.\n     *\n     * @param {Object} root Object from which to dereference path from\n     * @param {string | !Array<string|number>} path Path to set\n     * @param {*} value Value to set to path\n     * @private\n     */\n    protected _pathSet(root: any, path: string, value: any) {\n      let prop = root;\n      const parts = this._split(path);\n      const last = parts[parts.length - 1];\n      // used for @-event=\"((prop.sub))\"\n      if (parts.length > 1) {\n        // Loop over path parts[0..n-2] and dereference\n        for (let i = 0; i < parts.length - 1; i += 1) {\n          const part = parts[i];\n          prop = prop[part];\n          if (!prop) {\n            return false;\n          }\n        }\n        // Set value to object at end of path\n        prop[last] = value;\n      } else {\n        // Simple property set\n        prop[path] = value;\n      }\n      return parts.join(\".\");\n    }\n\n    /**\n     * Splits a path into an array of property names. Accepts either arrays\n     * of path parts or strings.\n     *\n     * Example:\n     *\n     * ```\n     * split(['foo.bar', 0, 'baz'])  // ['foo', 'bar', '0', 'baz']\n     * split('foo.bar.0.baz')        // ['foo', 'bar', '0', 'baz']\n     * ```\n     *\n     * @param {string | !Array<string|number>} path Input path\n     * @suppress {checkTypes}\n     * @private\n     */\n    // eslint-disable-next-line class-methods-use-this\n    protected _split(path: string) {\n      return path.toString().split(\".\");\n    }\n  }\n\n  // Cast return type to the superClass type passed in\n  return MixinClass as unknown as Constructor<LitFBPAC> & T;\n};\n"]}