{
  "schema_version": "1.0.0",
  "elements": [
    {
      "description": "`furo-ui5-busyindicator`\nThe furo-ui5-busyindicator signals that some operation is going on and that the user must wait. It does not block\nthe current UI screen so other operations could be triggered in parallel.\nUsage\nFor the furo-ui5-busyindicator you can define the size of the indicator, as well as whether it is shown or hidden.\nIn order to hide it, use the html attribute hidden or display: none;\n\nIn order to show busy state for an HTML element, simply nest the HTML element in a furo-ui5-busyindicator instance.\nNote: Since furo-ui5-busyindicator has display: inline-block; by default and no width of its own, whenever you need\nto wrap a block-level element, you should set display: block to the busy indicator as well.\n\nWhat is different from ui5-busyindicator?\nWith flow based programming it's usual to address functions. So we added two convenience functions for\n- activate => ƒ-activate\n- deactivate => ƒ-deactivate\n\nhttps://sap.github.io/ui5-webcomponents/playground/components/BusyIndicator/",
      "summary": "ui5 busy indicator",
      "path": "src/furo-ui5-busyindicator.js",
      "properties": [],
      "methods": [
        {
          "name": "activate",
          "description": "Sets the busy indicator state to active",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 29,
              "column": 2
            },
            "end": {
              "line": 31,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "deactivate",
          "description": "Sets the busy indicator state to inactive",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-busyindicator",
          "description": "Basic usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 25,
          "column": 7
        },
        "end": {
          "line": 39,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "Busy.default",
      "name": "FuroUiBusyindicator",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-busyindicator"
    },
    {
      "description": "`furo-ui5-button`\nThe furo-ui5-button component represents a simple push button. It enables users to trigger actions by clicking or\ntapping the furo-ui5-button, or by pressing certain keyboard keys, such as Enter.\nUsage\nFor the furo-ui5-button UI, you can define text, icon, or both. You can also specify whether the text or the icon is displayed first.\n\nYou can choose from a set of predefined types that offer different styling to correspond to the triggered action.\n\nYou can set the furo-ui5-button as enabled or disabled.\nAn enabled ui5-button can be pressed by clicking or tapping it.\nThe button changes its style to provide visual feedback to the user that it is pressed or hovered over with the mouse cursor.\nA disabled furo-ui5-button appears inactive and cannot be pressed.\n\nWhat is different from ui5-button?\nWith flow based programming it's usual to address functions. So we added two convenience functions for\n- disabling => ƒ-disable\n- enabling => ƒ-enable\n\nhttps://sap.github.io/ui5-webcomponents/playground/components/Button/",
      "summary": "ui5 button",
      "path": "src/furo-ui5-button.js",
      "properties": [],
      "methods": [
        {
          "name": "disable",
          "description": "Sets the button state to disabled",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "enable",
          "description": "Sets the button state to enabled",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-button",
          "description": "Basic usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 27,
          "column": 7
        },
        "end": {
          "line": 41,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "Button.default",
      "name": "FuroUi5Button",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-button"
    },
    {
      "description": "`furo-ui5-button-bar`\n is a wrapper for buttons which gives a nice border and paddings to a group of buttons.\n It uses the furo-button-bar which allows you to bind a data entity with HATEOAS information.",
      "summary": "",
      "path": "src/furo-ui5-button-bar.js",
      "properties": [],
      "methods": [],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-button-bar",
          "description": "Basic usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 24,
          "column": 7
        },
        "end": {
          "line": 59,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "FuroButtonBar",
      "name": "FuroUi5ButtonBar",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-button-bar"
    },
    {
      "description": "`furo-ui5-card`\nis a bindable card that represents information in the form of a tile with separate header and content areas.\n\n```html\n <furo-ui5-card\n   heading=\"Title\"\n   subheading=\"Secondary text\"\n   icon=\"card\"\n >\n     <div slot=\"action\"><furo-ui5-button>Action</furo-ui5-button></div>\n     <div slot=\"content\">content goes here</div>\n </furo-ui5-card>\n```\n## How To Use Semantic Colors\nYou can use semantic colors to visualize the status or state. Set the attribute design=\"\" with the following values:\n- Positive (--sapPositiveColor)\n- Negative (--sapNegativeColor)\n- Critical (--sapCriticalColor)\n- Neutral (--sapCriticalColor)\n\n* ```html\n <furo-ui5-card\n   design=\"Positive\"\n   icon=\"card\"\n >\n     <div slot=\"content\">content goes here</div>\n </furo-ui5-card>\n```",
      "summary": "",
      "path": "src/furo-ui5-card.js",
      "properties": [
        {
          "name": "heading",
          "type": "string | null | undefined",
          "description": "Defines the title displayed in the ui5-card header.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "subheading",
          "type": "string | null | undefined",
          "description": "Defines the subheading displayed in the ui5-card header.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 6
            },
            "end": {
              "line": 219,
              "column": 34
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Defines the visual representation in the header of the card. Supports images and icons.\nhttps://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 6
            },
            "end": {
              "line": 224,
              "column": 62
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "status",
          "type": "string | null | undefined",
          "description": "Defines the status text displayed in the card header (upper right).\n\nBy enabling the status, actions are not visible.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 6
            },
            "end": {
              "line": 230,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "headerInteractive",
          "type": "boolean | null | undefined",
          "description": "Defines if the ui5-card header would be interactive, e.g gets hover effect, gets focused and header-click event is fired, when it is pressed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 6
            },
            "end": {
              "line": 235,
              "column": 90
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noContentPadding",
          "type": "boolean | null | undefined",
          "description": "Shows the content slot area with no padding",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 89
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "bindHeading",
          "description": "Bind any **scalar** field to set the title of the panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 2
            },
            "end": {
              "line": 74,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindIcon",
          "description": "Bind any **scalar** field to set the title of the panel.\nDo not forget to import the icon you will use in your component.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindSubheading",
          "description": "Bind any **scalar** field to set the subtitle of the panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 2
            },
            "end": {
              "line": 107,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindNavNode",
          "description": "bind a field with the signature of furo.navigation.Navigationnode\n\nUsed fields are:\n- display_name\n- secondary_text\n- icon",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 2
            },
            "end": {
              "line": 132,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setNavNodeSignatureValues",
          "description": "update attributes according to the value of furo.navigation.Navigationnode signature",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 2
            },
            "end": {
              "line": 146,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 2
            },
            "end": {
              "line": 274,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-card",
          "description": "Basic Usage"
        },
        {
          "url": "demo-furo-ui5-card-binding",
          "description": "With data binding"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 49,
          "column": 7
        },
        "end": {
          "line": 275,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5Card",
      "attributes": [
        {
          "name": "heading",
          "description": "Defines the title displayed in the ui5-card header.",
          "sourceRange": {
            "start": {
              "line": 215,
              "column": 6
            },
            "end": {
              "line": 215,
              "column": 31
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "subheading",
          "description": "Defines the subheading displayed in the ui5-card header.",
          "sourceRange": {
            "start": {
              "line": 219,
              "column": 6
            },
            "end": {
              "line": 219,
              "column": 34
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon",
          "description": "Defines the visual representation in the header of the card. Supports images and icons.\nhttps://openui5.hana.ondemand.com/test-resources/sap/m/demokit/iconExplorer/webapp/index.html",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 6
            },
            "end": {
              "line": 224,
              "column": 62
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "status",
          "description": "Defines the status text displayed in the card header (upper right).\n\nBy enabling the status, actions are not visible.",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 6
            },
            "end": {
              "line": 230,
              "column": 30
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "header-interactive",
          "description": "Defines if the ui5-card header would be interactive, e.g gets hover effect, gets focused and header-click event is fired, when it is pressed.",
          "sourceRange": {
            "start": {
              "line": 235,
              "column": 6
            },
            "end": {
              "line": 235,
              "column": 90
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-content-padding",
          "description": "Shows the content slot area with no padding",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 6
            },
            "end": {
              "line": 239,
              "column": 89
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-card"
    },
    {
      "description": "The 'furo-ui5-data-checkbox-input' component allows the user to switch true and false for Bool with data binding.\n\nIt supports all features from the [SAP ui5 checkbox element](https://sap.github.io/ui5-webcomponents/playground/components/CheckBox/).\n\nYou can bind  `bool` type, `furo.fat.Bool` type or the `google.wrapper.BoolValue`  type.\n\n * ```html\n <furo-ui5-data-checkbox-input\n    ƒ-bind-data=\"--daoCountry(*.data.classified_as_risk_area)\"\n ></furo-ui5-data-checkbox-input>\n```\n\n### Specificity\n1. Attributes which are set in the html source will have the highest specificity and will never get overwritten by metas or fat.\n2. Attributes set in meta will have the lowest specificity and will be overwritten by attributes from fat.\n\n| meta \t| fat \t| html \t|\n|------\t|-----\t|------\t|\n| 1    \t| 10  \t| 100  \t|\n\n\n## supported FAT attributes\n - **\"readonly\":\"true\"** set the element to readonly\n - **\"disabled\":\"true\"** set the element to disabled\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n\nThe constraint **required** will mark the element as required\n\n```",
      "summary": "data checkbox input field",
      "path": "src/furo-ui5-data-checkbox-input.js",
      "properties": [
        {
          "name": "_previousValueState",
          "type": "string",
          "description": "used to restore the state after a invalidation -> validation change",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'None'"
        },
        {
          "name": "_attributesFromFNA",
          "type": "{readonly: undefined, disabled: undefined, label: undefined}",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 67,
              "column": 4
            },
            "end": {
              "line": 67,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "{\n  readonly: undefined,\n  disabled: undefined,\n  label: undefined\n}"
        },
        {
          "name": "_constraintsFromFNA",
          "type": "{}",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 4
            },
            "end": {
              "line": 78,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "_attributesFromFAT",
          "type": "{label: undefined}",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "{\n  label: undefined\n}"
        },
        {
          "name": "_labelsFromFAT",
          "type": "{readonly: undefined, disabled: undefined}",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "{\n  readonly: undefined,\n  disabled: undefined\n}"
        },
        {
          "name": "_privilegedAttributes",
          "type": "{readonly: null, disabled: null, text: null}",
          "description": "a list of privileged attributes. when those attributes are set in number-input components initially.\nthey can not be modified later via response or spec\nnull is used because getAttribute returns null or value",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 4
            },
            "end": {
              "line": 106,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "{\n  readonly: null,\n  disabled: null,\n  text: null\n}"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "connectedCallback() method is called when an element is added to the DOM.\nwebcomponent lifecycle event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 2
            },
            "end": {
              "line": 124,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 2
            },
            "end": {
              "line": 138,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateFNA",
          "description": "Handler function for the checkbox changes.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 145,
              "column": 2
            },
            "end": {
              "line": 162,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "((function (): void) | *)"
          }
        },
        {
          "name": "onFnaFieldValueChanged",
          "description": "overwrite onFnaFieldValueChanged",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 2
            },
            "end": {
              "line": 178,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateLabelsFromFat",
          "description": "labels are map <string,bool>, we handle every boolean attribute with the labels",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 2
            },
            "end": {
              "line": 210,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatLabels"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateAttributesFromFat",
          "description": "sync input attributes according to fat attributes",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 2
            },
            "end": {
              "line": 245,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatAttributes"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "overwrite onFnaFieldNodeBecameInvalid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 2
            },
            "end": {
              "line": 253,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "overwrite onFnaFieldNodeBecameValid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 2
            },
            "end": {
              "line": 261,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValueState",
          "description": "Updates the valueState\nui5 checkbox has only 3 states: Warning, Error, and None (default) https://sap.github.io/ui5-webcomponents/playground/components/CheckBox/",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 268,
              "column": 2
            },
            "end": {
              "line": 270,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueState"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetValueState",
          "description": "reset to previous value state",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 276,
              "column": 2
            },
            "end": {
              "line": 278,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaLabelChanged",
          "description": "overwrite onFnaLabelChanged function\nlabel is mapped to text",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 286,
              "column": 2
            },
            "end": {
              "line": 291,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 298,
              "column": 2
            },
            "end": {
              "line": 306,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly",
              "type": "Boolean"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-checkbox-input",
          "description": "Basic usage (scalar , fat, wrapper values)"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 52,
          "column": 7
        },
        "end": {
          "line": 320,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataCheckboxInput",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-checkbox-input"
    },
    {
      "description": "`furo-ui5-form-field-container`\nThe furo-ui5-form-field-container gives the user a layout to manage\ninput field and labels according to the design specification of SAP Fiori.",
      "summary": "form field container",
      "path": "src/furo-ui5-form-field-container.js",
      "properties": [],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 2
            },
            "end": {
              "line": 103,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_checkSize",
          "description": "Form breakpoints according to SAP Fiori Design System\nhttps://experience.sap.com/fiori-design-web/form/",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 111,
              "column": 2
            },
            "end": {
              "line": 123,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "size"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setSizeAttribute",
          "description": "Sets data-size attribute",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 2
            },
            "end": {
              "line": 135,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "attrValue"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 2
            },
            "end": {
              "line": 233,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-form-field-container",
          "description": "Sample"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 71,
          "column": 7
        },
        "end": {
          "line": 234,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5FormFieldContainer",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-form-field-container",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-ui5-data-checkbox-input-labeled`\n\nThe furo-ui5-data-checkbox-input-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled input field",
      "path": "src/furo-ui5-data-checkbox-input-labeled.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-checkbox-input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 6
            },
            "end": {
              "line": 41,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "placeholder",
          "type": "string | null | undefined",
          "description": "the placeholder is the additional information beside the label. it will be showed on the right side of the checkbox.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 34,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Orchestrates the data field connection to the inside",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 98,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 2
            },
            "end": {
              "line": 122,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-checkbox-input-labeled",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 21,
          "column": 7
        },
        "end": {
          "line": 123,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataCheckboxInputLabeled",
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-checkbox-input",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 6
            },
            "end": {
              "line": 41,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "placeholder",
          "description": "the placeholder is the additional information beside the label. it will be showed on the right side of the checkbox.",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 35
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-checkbox-input-labeled",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "# DEPRECATED switch to `furo-ui5-data-select`\n\nThe furo-ui5-data-collection-dropdown component represents a drop-down list. The items inside define the available\noptions by using the furo-ui5-data-collection-dropdown component.\n\nKeyboard Handling\nThe furo-ui5-data-collection-dropdown provides advanced keyboard handling. If the furo-ui5-data-collection-dropdown\nis focused, you can open or close the drop-down by pressing F4, ALT+UP or ALT+DOWN keys. Once the drop-down is\nopened, you can use the UP and DOWN arrow keys to navigate through the available options and select one\nby pressing the Space or Enter keys.\n\n### auto-select-first\nset this attribute to auto select the first item in the list, if no item is set in the bounded fieldNode.",
      "summary": "data collection dropdown",
      "path": "src/furo-ui5-data-collection-dropdown.js",
      "properties": [
        {
          "name": "subField",
          "type": "string",
          "description": "If you inject an array with complex objects, declare here the path where display_name and value_field are located.\n\nThis is only needed if display_name and value_field are not located in the root of the object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 4
            },
            "end": {
              "line": 44,
              "column": 17
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'data'"
        },
        {
          "name": "displayField",
          "type": "string",
          "description": "The name of the field from the injected collection that contains the label for the dropdown array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 4
            },
            "end": {
              "line": 49,
              "column": 21
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'display_name'"
        },
        {
          "name": "valueField",
          "type": "string",
          "description": "declare here the name of the field from the injected collection.  by selecting an item from dropdown the defined\nvalueSubField of bounded complex type or the value by scalar type will be updated according to the value of this field.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 4
            },
            "end": {
              "line": 55,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'id'"
        },
        {
          "name": "valueSubField",
          "type": "string",
          "description": "if you bind a complex type, you must declare here the field which gets updated of value by selecting an item. e.g. value-sub-field = \"id\"\n\nIf you bind a scalar, you dont need this attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 63,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "undefined"
        },
        {
          "name": "displaySubField",
          "type": "string",
          "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 4
            },
            "end": {
              "line": 71,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'display_name'"
        },
        {
          "name": "autoSelectFirst",
          "type": "boolean",
          "description": "set this attribute to autoSelectFirst the first item in the list, if no item is set in the bounded fieldNode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 77,
              "column": 4
            },
            "end": {
              "line": 77,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "_fieldNodeToUpdate",
          "type": "{}",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "_fieldDisplayNodeToUpdate",
          "type": "{}",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 4
            },
            "end": {
              "line": 90,
              "column": 34
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "{}"
        },
        {
          "name": "_dropdownList",
          "type": "Array.<*>",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 4
            },
            "end": {
              "line": 96,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "_pseudoDropdownList",
          "type": "Array.<*>",
          "description": "generated one element dropdown, which has only the data of the bounded DO",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 4
            },
            "end": {
              "line": 103,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "_injectedDropdownList",
          "type": "Array.<*>",
          "description": "injected dropdown elements which from a collection of response or in spec defined options",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 4
            },
            "end": {
              "line": 109,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "[]"
        },
        {
          "name": "_valueFoundInList",
          "type": "boolean",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 4
            },
            "end": {
              "line": 115,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "true"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "connectedCallback() method is called when an element is added to the DOM.\nwebcomponent lifecycle event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 170,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "attributeChangedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 2
            },
            "end": {
              "line": 220,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "name"
            },
            {
              "name": "oldVal"
            },
            {
              "name": "newVal"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_initBinder",
          "description": "inits the universalFieldNodeBinder.\nSet the mapped attributes and labels.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 227,
              "column": 2
            },
            "end": {
              "line": 275,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "addItems",
          "description": "Adds the option components to the default slot",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 2
            },
            "end": {
              "line": 296,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_requestUpdate",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 2
            },
            "end": {
              "line": 311,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Bind a entity field to the range-input. You can use the entity even when no data was received.\nWhen you use `@-object-ready` from a `furo-data-object` which emits a EntityNode, just bind the field with `--entity(*.fields.fieldname)`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 318,
              "column": 2
            },
            "end": {
              "line": 360,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "(Object | FieldNode)",
              "description": "a Field object"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setValue",
          "description": "Sets the value for the field. This will update the fieldNode.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 366,
              "column": 2
            },
            "end": {
              "line": 368,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_buildListWithMetaOptions",
          "description": "Build the dropdown list with given options from meta",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 375,
              "column": 2
            },
            "end": {
              "line": 380,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "injectEntities",
          "description": "Inject the array of a collection",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 386,
              "column": 2
            },
            "end": {
              "line": 388,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entities",
              "type": "FieldNode",
              "description": "of type *Entities"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-collection-dropdown",
          "description": "Basic Usage"
        },
        {
          "url": "demo-furo-ui5-data-collection-dropdown-auto",
          "description": "Autoselect first"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 28,
          "column": 7
        },
        "end": {
          "line": 389,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "Select.default",
      "name": "FuroUi5DataCollectionDropdown",
      "attributes": [
        {
          "name": "value-field",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 185,
              "column": 6
            },
            "end": {
              "line": 185,
              "column": 19
            }
          },
          "metadata": {}
        },
        {
          "name": "display-field",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 186,
              "column": 6
            },
            "end": {
              "line": 186,
              "column": 21
            }
          },
          "metadata": {}
        },
        {
          "name": "sub-field",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 6
            },
            "end": {
              "line": 187,
              "column": 17
            }
          },
          "metadata": {}
        },
        {
          "name": "value-sub-field",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 188,
              "column": 23
            }
          },
          "metadata": {}
        },
        {
          "name": "display-sub-field",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 189,
              "column": 6
            },
            "end": {
              "line": 189,
              "column": 25
            }
          },
          "metadata": {}
        },
        {
          "name": "auto-select-first",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 6
            },
            "end": {
              "line": 190,
              "column": 25
            }
          },
          "metadata": {}
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-collection-dropdown"
    },
    {
      "description": "`furo-ui5-data-collection-dropdown-labeled`\nThe furo-ui5-data-collection-dropdown-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled input field",
      "path": "src/furo-ui5-data-collection-dropdown-labeled.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-collection-dropdown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 55,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 61,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "subField",
          "type": "string | null | undefined",
          "description": "If you inject an array with complex objects, declare here the path where display_name and value_field are located.\n\nThis is only needed if display_name and value_field are not located in the root of the object.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 71
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "displayField",
          "type": "string | null | undefined",
          "description": "The name of the field from the injected collection that contains the label for the dropdown array.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 79
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valueField",
          "type": "string | null | undefined",
          "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\nIf you bind a scalar, you dont need this attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 79,
              "column": 75
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valueSubField",
          "type": "string | null | undefined",
          "description": "if you bind a complex type, declare here the field which gets updated of value by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 82
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "displaySubField",
          "type": "string | null | undefined",
          "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 86
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "autoSelectFirst",
          "type": "boolean",
          "description": "set this attribute to autoSelectFirst the first item in the list, if no item is set in the bounded fieldNode",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 87
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 2
            },
            "end": {
              "line": 42,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Orchestrates the data field connection to the inside",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 2
            },
            "end": {
              "line": 122,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "injectEntities",
          "description": "Inject the array of a collection",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 128,
              "column": 2
            },
            "end": {
              "line": 130,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entities"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 2
            },
            "end": {
              "line": 158,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-collection-dropdown-labeled",
          "description": "Simple use"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 7
        },
        "end": {
          "line": 159,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataCollectionDropdownLabeled",
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-collection-dropdown",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 55,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 61,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "sub-field",
          "description": "If you inject an array with complex objects, declare here the path where display_name and value_field are located.\n\nThis is only needed if display_name and value_field are not located in the root of the object.",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 71
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "display-field",
          "description": "The name of the field from the injected collection that contains the label for the dropdown array.",
          "sourceRange": {
            "start": {
              "line": 73,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 79
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value-field",
          "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\nIf you bind a scalar, you dont need this attribute.",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 79,
              "column": 75
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value-sub-field",
          "description": "if you bind a complex type, declare here the field which gets updated of value by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 82
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "display-sub-field",
          "description": "if you bind a complex type, declare here the field which gets updated of display_name by selecting an item.\n\nIf you bind a scalar, you dont need this attribute.",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 86
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "auto-select-first",
          "description": "set this attribute to autoSelectFirst the first item in the list, if no item is set in the bounded fieldNode",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 6
            },
            "end": {
              "line": 98,
              "column": 87
            }
          },
          "metadata": {},
          "type": "boolean"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-collection-dropdown-labeled",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "The furo-ui5-data-date-picker component allows the user to bind an date object like google.type.Date or a date string\nwith ISO 8061 format like \"2020-12-31\" to the ui5 datepicker and edit it.\n\nIt supports all features from the [SAP ui5 DatePicker element](https://sap.github.io/ui5-webcomponents/playground/components/DatePicker/).\n\n\nyou can define the formatPattern (e.g. 'dd.MM.yyyy' ) to show the date according to format pattern.\n\nYou can bind a `string`, `furo.type.Date` or `google.type.Date`.\n\n```html\n <furo-ui5-data-date-picker\n    ƒ-bind-data=\"--data(*.validity_to)\">\n </furo-ui5-data-date-picker>\n```\n\nThe text field can be editable or read-only (readonly property), and it can be enabled or disabled (enabled property).\nTo visualize semantic states, such as \"error\" or \"warning\", the valueState property is provided.\nWhen the user makes changes to the date, the change event is fired, which enables you to react on any date change.\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n- **placeholder:\"some string\"** set the placeholder for the element\n- **min:\"1999-12-31\"** set the minDate for the element (use iso date in the constraint)\n- **max:\"1999-12-31\"** set the maxDate for the element (use iso date in the constraint)\n- **pattern:\"1999-12-31\"** set the pattern for the element\n\nThe constraint **required** will mark the element as required\n\n## Methods\n**bind-data(fieldNode)**\nBind a entity field. You can use the entity even when no data was received.\n\nWhen you use @-object-ready from a furo-data-object which emits a EntityNode, just bind the field with --entity(*.fields.fieldname)",
      "summary": "furo data datepicker field",
      "path": "src/furo-ui5-data-date-picker.js",
      "properties": [
        {
          "name": "formatPattern",
          "type": "string",
          "description": "The format pattern for the date.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 4
            },
            "end": {
              "line": 56,
              "column": 22
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "''"
        },
        {
          "name": "_previousValueState",
          "type": "{state: string, message: string}",
          "description": "used to restore the state after a invalidation -> validation change",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 4
            },
            "end": {
              "line": 63,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "{\n  state: 'None',\n  message: ''\n}"
        },
        {
          "name": "_attributesFromFNA",
          "type": "{min: undefined, readonly: undefined, max: undefined, pattern: undefined, placeholder: undefined}",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 70,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "{\n  readonly: undefined,\n  placeholder: undefined,\n  min: undefined,\n  max: undefined,\n  pattern: undefined\n}"
        },
        {
          "name": "_constraintsFromFNA",
          "type": "{required: undefined}",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 4
            },
            "end": {
              "line": 83,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "{\n  required: undefined\n}"
        },
        {
          "name": "_privilegedAttributes",
          "type": "{minDate: null, readonly: null, formatPattern: null, disabled: null, maxDate: null, placeholder: null, required: null}",
          "description": "a list of privileged attributes. when those attributes are set in number-input components initially.\nthey can not be modified later via response or spec\nnull is used because getAttribute returns null or value",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 4
            },
            "end": {
              "line": 94,
              "column": 30
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "{\n  readonly: null,\n  placeholder: null,\n  required: null,\n  disabled: null,\n  maxDate: null,\n  minDate: null,\n  formatPattern: null\n}"
        },
        {
          "name": "valueStateMessage",
          "type": "?",
          "description": "Workaround for language request",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 2
            },
            "end": {
              "line": 152,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "onFnaFieldValueChanged",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 157,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 182,
              "column": 2
            },
            "end": {
              "line": 198,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.\nAttributes that can be se are  `value-state`,  `placeholder`, `required`,`readonly`,`disabled` `max-date`,  `min-date`,  `format-pattern`,\nUse this after manual or scripted update of the attributes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 2
            },
            "end": {
              "line": 214,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "overwrite onFnaFieldNodeBecameInvalid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 220,
              "column": 2
            },
            "end": {
              "line": 227,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "overwrite onFnaFieldNodeBecameValid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 233,
              "column": 2
            },
            "end": {
              "line": 235,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValueStateMessage",
          "description": "update the value state and the value state message on demand",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 244,
              "column": 2
            },
            "end": {
              "line": 248,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueState"
            },
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetValueStateMessage",
          "description": "reset to previous value state",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 2
            },
            "end": {
              "line": 256,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaPlaceholderChanged",
          "description": "overwrite onFnaPlaceholderChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 2
            },
            "end": {
              "line": 268,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "placeholder"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 2
            },
            "end": {
              "line": 280,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaConstraintsChanged",
          "description": "overwrite onFnaConstraintsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 2
            },
            "end": {
              "line": 319,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "constraints"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-date-picker",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 48,
          "column": 7
        },
        "end": {
          "line": 320,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataDatePicker",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-date-picker"
    },
    {
      "description": "`furo-ui5-data-date-picker-labeled`\nThe furo-ui5-data-date-picker-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled input field",
      "path": "src/furo-ui5-data-date-picker-labeled.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-date-picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 45,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 34,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Orchestrates the data field connection to the inside",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 2
            },
            "end": {
              "line": 88,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 2
            },
            "end": {
              "line": 112,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-date-picker-labeled",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 21,
          "column": 7
        },
        "end": {
          "line": 113,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataDatePickerLabeled",
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-date-picker",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 45,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 33
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-date-picker-labeled",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "The furo-ui5-data-date-time-picker component allows the user to bind a date string\nwith IOS 8061 standard in [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt) format likes \"2017-01-15T01:30:15.01Z\" to the ui5 date time picker and edit it.\n\nyou can define the formatPattern (e.g. 'dd.MM.yyyy hh:mm aa' ) to show the date according to format pattern. but the data in\nthe payload will still be in format [RFC 3339](https://www.ietf.org/rfc/rfc3339.txt)  (2017-01-15T01:30:15.01Z)\n\nThe text field can be editable or read-only (readonly property), and it can be enabled or disabled (enabled property).\nTo visualize semantic states, such as \"error\" or \"warning\", the valueState property is provided.\nWhen the user makes changes to the datetime, the change event is fired, which enables you to react on any date change.\n\nYou can bind a `string`, `google.protobuf.Timestamp`, `int32`, `int64`.\n\n`int32`, `int64` will be handled as unix timestamps (seconds since epoc) and can not be *empty*.\n\n```html\n <furo-ui5-data-date-time-picker\n    ƒ-bind-data=\"--data(*.validity_to)\">\n </furo-ui5-data-date-time-picker>\n```\n\nThe field can be editable or read-only (readonly property), and it can be enabled or disabled (enabled property).\nTo visualize semantic states, such as \"error\" or \"warning\", the valueState property is provided.\nWhen the user makes changes to the date, the change event is fired, which enables you to react on any date change.\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n- **placeholder:\"some string\"** set the placeholder for the element\n- **min:\"1999-12-31\"** set the minDate for the element (use iso date in the constraint)\n- **max:\"1999-12-31\"** set the maxDate for the element (use iso date in the constraint)\n- **pattern:\"1999-12-31\"** set the pattern for the element\n\nThe constraint **required** will mark the element as required\n\n## Methods\n**bind-data(fieldNode)**\nBind a entity field. You can use the entity even when no data was received.\n\nWhen you use @-object-ready from a furo-data-object which emits a EntityNode, just bind the field with --entity(*.fields.fieldname)",
      "summary": "furo data datetime picker field",
      "path": "src/furo-ui5-data-date-time-picker.js",
      "properties": [
        {
          "name": "valueStateMessage",
          "type": "?",
          "description": "Workaround for language request",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 135,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "onFnaFieldValueChanged",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 137,
              "column": 2
            },
            "end": {
              "line": 153,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 173,
              "column": 2
            },
            "end": {
              "line": 182,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "overwrite onFnaFieldNodeBecameInvalid function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 187,
              "column": 2
            },
            "end": {
              "line": 194,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "overwrite onFnaFieldNodeBecameValid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 2
            },
            "end": {
              "line": 202,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValueStateMessage",
          "description": "update the value state and the value state message on demand",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 211,
              "column": 2
            },
            "end": {
              "line": 215,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueState"
            },
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetValueStateMessage",
          "description": "reset to previous value state",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 2
            },
            "end": {
              "line": 223,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaPlaceholderChanged",
          "description": "overwrite onFnaPlaceholderChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 230,
              "column": 2
            },
            "end": {
              "line": 235,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "placeholder"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 2
            },
            "end": {
              "line": 247,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaConstraintsChanged",
          "description": "overwrite onFnaConstraintsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 2
            },
            "end": {
              "line": 286,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "constraints"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-date-time-picker",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 52,
          "column": 7
        },
        "end": {
          "line": 287,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataDateTimePicker",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-date-time-picker"
    },
    {
      "description": "`furo-ui5-data-date-time-picker-labeled`\nThe furo-ui5-data-date-time-picker-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled input field",
      "path": "src/furo-ui5-data-date-time-picker-labeled.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-date-picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 6
            },
            "end": {
              "line": 41,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 47,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 34,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Orchestrates the data field connection to the inside",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 2
            },
            "end": {
              "line": 84,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 108,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-date-time-picker-labeled",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 21,
          "column": 7
        },
        "end": {
          "line": 109,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataDateTimePickerLabeled",
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-date-picker",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 6
            },
            "end": {
              "line": 41,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 47,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 53,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-date-time-picker-labeled",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "The furo-ui5-data-time-picker component allows the user to bind a field of type google.type.TimeOfDay.\nRepresents a time of day. The date and time zone are either not significant\nor are specified elsewhere.\n\nhttps://sap.github.io/ui5-webcomponents/playground/components/TimePicker/\n\nSupported format options are pattern-based on Unicode LDML Date Format notation. For more information, see\nUTS #35: Unicode Locale Data Markup Language.\n\nFor example, if the format-pattern is \"hh:mm:ss\", a valid value string is \"11:42:35\" and the same is displayed in the input.\n\nThe text field can be editable or read-only (readonly property), and it can be enabled or disabled (enabled property).\nTo visualize semantic states, such as \"error\" or \"warning\", the valueState property is provided.\nWhen the user makes changes to the time, the change event is fired, which enables you to react on any time change.\n\nYou can bind a `string` or `google.type.TimeOfDay` (https://github.com/googleapis/googleapis/blob/master/google/type/timeofday.proto).\n\n```html\n <furo-ui5-data-time-picker\n    ƒ-bind-data=\"--data(*.start_time)\">\n </furo-ui5-data-time-picker>\n```\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n- **placeholder:\"some string\"** set the placeholder for the element\n- **min:\"11:42:35\"** set the minDate for the element (use iso date in the constraint)\n- **max:\"23:59:59\"** set the maxDate for the element (use iso date in the constraint)\n- **pattern:\"HH:mm:ss\"** set the pattern for the element\n\nThe constraint **required** will mark the element as required\n\n## Methods\n**bind-data(fieldNode)**\nBind a entity field. You can use the entity even when no data was received.\n\nWhen you use @-object-ready from a furo-data-object which emits a EntityNode, just bind the field with --entity(*.fields.fieldname)",
      "summary": "furo data time picker field",
      "path": "src/furo-ui5-data-time-picker.js",
      "properties": [
        {
          "name": "valueStateMessage",
          "type": "?",
          "description": "Workaround for language request",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 2
            },
            "end": {
              "line": 146,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_updateFNA",
          "description": "update of the bound FieldNode",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 2
            },
            "end": {
              "line": 138,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event",
              "description": "{Event}"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldValueChanged",
          "description": "FieldNodeAdapter callback function to\nhandle changes on the model.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 153,
              "column": 2
            },
            "end": {
              "line": 174,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 2
            },
            "end": {
              "line": 192,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 194,
              "column": 2
            },
            "end": {
              "line": 203,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "overwrite onFnaFieldNodeBecameInvalid function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 2
            },
            "end": {
              "line": 215,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "overwrite onFnaFieldNodeBecameValid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 2
            },
            "end": {
              "line": 223,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValueStateMessage",
          "description": "update the value state and the value state message on demand",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 2
            },
            "end": {
              "line": 236,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueState"
            },
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetValueStateMessage",
          "description": "reset to previous value state",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 2
            },
            "end": {
              "line": 244,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaPlaceholderChanged",
          "description": "overwrite onFnaPlaceholderChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 251,
              "column": 2
            },
            "end": {
              "line": 256,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "placeholder"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 2
            },
            "end": {
              "line": 268,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaConstraintsChanged",
          "description": "overwrite onFnaConstraintsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 2
            },
            "end": {
              "line": 305,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "constraints"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-time-picker",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 51,
          "column": 7
        },
        "end": {
          "line": 306,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataTimePicker",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-time-picker"
    },
    {
      "description": "`furo-ui5-data-time-picker-labeled`\nThe furo-ui5-data-time-picker-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled input field",
      "path": "src/furo-ui5-data-time-picker-labeled.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-date-picker",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 45,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 33
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 34,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Orchestrates the data field connection to the inside",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 2
            },
            "end": {
              "line": 88,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-time-picker-labeled",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 21,
          "column": 7
        },
        "end": {
          "line": 111,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataTimePickerLabeled",
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-date-picker",
          "sourceRange": {
            "start": {
              "line": 45,
              "column": 6
            },
            "end": {
              "line": 45,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 33
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 63,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-time-picker-labeled",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-ui5-data-display`\nThe furo-ui5-data-display is a composition to easily use a display field with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled input field",
      "path": "src/furo-ui5-data-display.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-text-input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valueState",
          "type": "string | null | undefined",
          "description": "Value State",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 55,
              "column": 75
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Disabled State",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 71
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "context",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 38,
              "column": 2
            },
            "end": {
              "line": 41,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Binds the fieldNode to the component\nbinding set can be customised here otherwise the standard bindData in the ui5-data-input will be used",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 2
            },
            "end": {
              "line": 114,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 2
            },
            "end": {
              "line": 133,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-display",
          "description": "Simple use"
        },
        {
          "url": "demo-furo-ui5-readonly-card",
          "description": "Card Sample"
        },
        {
          "url": "demo-furo-ui5-data-display-form",
          "description": "Read only Form"
        },
        {
          "url": "demo-furo-ui5-data-display-context",
          "description": "With context"
        },
        {
          "url": "demo-furo-ui5-form-field-container",
          "description": "Mixed Form"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 26,
          "column": 7
        },
        "end": {
          "line": 134,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataDisplay",
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-text-input",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value-state",
          "description": "Value State",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 6
            },
            "end": {
              "line": 55,
              "column": 75
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Disabled State",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 71
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "context",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 31
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-display",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "The 'furo-ui5-data-text-input' component allows the user to enter and edit texts with data binding.\n\nIt supports all features from the [SAP ui5 Input element](https://sap.github.io/ui5-webcomponents/playground/components/Input/).\n\nYou can bind any `string` type, like `furo.fat.String` type or the `google.protobuf.StringValue` type.\n\n```html\n <furo-ui5-data-text-input\n    ƒ-bind-data=\"--daoCountry(*.data.name)\"\n ></furo-ui5-data-text-input>\n```\n\n### Specificity\n1. Attributes which are set in the html source will have the highest specificity and will never get overwritten by metas or fat.\n2. Attributes set in meta will have the lowest specificity and will be overwritten by attributes from fat.\n\n** meta \t<  fat \t< html \t**\n\n## supported FAT attributes\n - **\"readonly\":\"true\"** set the element to readonly\n - **\"required\":\"true\"** set the element to required\n - **\"disabled\":\"true\"** set the element to disabled\n - **\"icon\":\"home\"** set the icon\n - **\"placeholder\":\"string\"** set the placeholder for the element\n - **\"max\":\"number\"** set the maximum number of characters available in the input field.\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n- **placeholder:\"some string\"** set the placeholder for the element\n- **max:\"number\"** set the maximum number of characters available in the input field.\n\nThe constraint **required** will mark the element as required\n\n## Methods\n**bind-data(fieldNode)**\nBind a entity field. You can use the entity even when no data was received.\n\nWhen you use @-object-ready from a furo-data-object which emits a EntityNode, just bind the field with --entity(*.fields.fieldname)",
      "summary": "data text input field",
      "path": "src/furo-ui5-data-text-input.js",
      "properties": [
        {
          "name": "nativeInputAttributes",
          "type": "?",
          "description": " eslint-disable-next-line class-methods-use-this",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 2
            },
            "end": {
              "line": 140,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "accInfo",
          "type": "*",
          "description": "rewrite get accInfo function\ninitiate _inputAccInfo in order to avoid error",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 320,
              "column": 2
            },
            "end": {
              "line": 325,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "valueStateMessage",
          "type": "(* | {})",
          "description": "overwrite to fix error",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 2
            },
            "end": {
              "line": 334,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "suggestionItems",
          "type": "(* | [])",
          "description": "overwrite to fix error",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 2
            },
            "end": {
              "line": 343,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "icon",
          "type": "(* | [])",
          "description": "overwrite to fix error",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 2
            },
            "end": {
              "line": 352,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "connectedCallback() method is called when an element is added to the DOM.\nwebcomponent lifecycle event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 2
            },
            "end": {
              "line": 131,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.\nthose attributes can be set. `value-state`, `value-state-message`,  `icon`, `placeholder`, `required`,`readonly`,`disabled`\nUse this after manual or scripted update of the attributes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateFNA",
          "description": "Handler function for the input value changes.\nThis is done to be able to remove the event-listeners as a protection for multiple calls",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "((function (): void) | *)"
          }
        },
        {
          "name": "_updateLabelsFromFat",
          "description": "labels are map <string,bool>, we handle every boolean attribute with the labels",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 2
            },
            "end": {
              "line": 246,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatLabels"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateAttributesFromFat",
          "description": "sync input attributes according to fat attributes",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 2
            },
            "end": {
              "line": 312,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatAttributes"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldValueChanged",
          "description": "overwrite onFnaFieldValueChanged",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 359,
              "column": 2
            },
            "end": {
              "line": 372,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaPlaceholderChanged",
          "description": "overwrite onFnaPlaceholderChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 2
            },
            "end": {
              "line": 387,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "placeholder"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 394,
              "column": 2
            },
            "end": {
              "line": 404,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaOptionsChanged",
          "description": "overwrite onFnaOptionsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 411,
              "column": 2
            },
            "end": {
              "line": 415,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaConstraintsChanged",
          "description": "overwrite onFnaConstraintsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 2
            },
            "end": {
              "line": 440,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "constraints"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "overwrite onFnaFieldNodeBecameInvalid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 447,
              "column": 2
            },
            "end": {
              "line": 452,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "overwrite onFnaFieldNodeBecameValid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 458,
              "column": 2
            },
            "end": {
              "line": 460,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setSuggestions",
          "description": "set suggestions as the ui5-suggestion-item element\nui5 suggestions sample data: [{\"text\":\"Spain\",\"icon\":\"world\",\"type\":\"Active\",\"infoState\":\"None\",\"group\":false,\"key\":0},.. ]\nfuro.Fieldoption as suggestions: [{\"id\": 1,\"display_name\":\"show 1\"}, ..]\nif the suggestion item has icon , the ui5 icons should be imported in your ui component",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 471,
              "column": 2
            },
            "end": {
              "line": 534,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "arr"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValueStateMessage",
          "description": "update the value state and the value state message on demand",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 543,
              "column": 2
            },
            "end": {
              "line": 547,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueState"
            },
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetValueStateMessage",
          "description": "reset to previous value state",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 553,
              "column": 2
            },
            "end": {
              "line": 555,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setIcon",
          "description": "set ui5 icon",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 562,
              "column": 2
            },
            "end": {
              "line": 575,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "icon"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-text-input",
          "description": "Basic usage (scalar , fat, wrapper values)"
        },
        {
          "url": "demo-furo-ui5-data-text-input-markup-overwrite",
          "description": "Use Markup Overwrites"
        },
        {
          "url": "demo-furo-ui5-data-text-input-together",
          "description": "playground"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 57,
          "column": 7
        },
        "end": {
          "line": 576,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataTextInput",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-text-input"
    },
    {
      "description": "`furo-data-money-input`\nBinds a entityObject field google.type.Money to a furo-number-input and currency dropdown fields\n <sample-furo-data-money-input></sample-furo-data-money-input>\n\n you can set currencies dropdown with options in meta or set options attribute as json in element or set currencies as string in element. the three\n ways have priority : currencies > options as attribute > options in meta. When no currencies is setted. Default currency will be `CHF`\n\n <furo-ui5-data-money-input autofocus ƒ-bind-data=\"--entity(*.furo_data_money_input)\" options='{\"list\": [ \"CHF\",\"EUR\",\"USD\" ]}'></furo-data-money-input>\n <furo-ui5-data-money-input autofocus ƒ-bind-data=\"--entity(*.furo_data_money_input)\" options='{\"list\": [ {\"id\":\"CHF\",\"label\":\"Schweiz\"},{\"id\":\"EUR\",\"label\":\"Europa\", \"selected\": true}'></furo-data-money-input>\n <furo-ui5-data-money-input autofocus ƒ-bind-data=\"--entity(*.furo_data_money_input)\" currencies=\"CHF,EUR,USD\"></furo-data-money-input>\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n- **required: true** , set the element to required\n\nTags: money input",
      "summary": "Binds a entityObject field google.type.Money to a number-input and currency dropdown fields",
      "path": "src/furo-ui5-data-money-input.js",
      "properties": [
        {
          "name": "options",
          "type": "Object | null | undefined",
          "description": "the option object defines the currencies dropdown\n'{\"list\": [ \"chf\",\"eur\",\"usd\" ]}'\n'{\"list\": [ {\"id\":\"CHF\",\"label\":\"Schweiz\"},{\"id\":\"EUR\",\"label\":\"Europa\", \"selected\": true}'",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 2
            },
            "end": {
              "line": 358,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "currencies",
          "type": "string | null | undefined",
          "description": "the string list of currencies for the dropdown. e.g. \"CHF,EUR,USD\"",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 2
            },
            "end": {
              "line": 390,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 6
            },
            "end": {
              "line": 248,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "connectedCallback() method is called when an element is added to the DOM.\nwebcomponent lifecycle event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 2
            },
            "end": {
              "line": 68,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Binds a fieldNode. Make sure the type of your field is accepted by the implemented component.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 116,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ]
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.\nAttributes that can be se are   `required`,`readonly`,`disabled` ,\nUse this after manual or scripted update of the attributes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 2
            },
            "end": {
              "line": 132,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaConstraintsChanged",
          "description": "overwrite onFnaConstraintsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "constraints"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 2
            },
            "end": {
              "line": 191,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_convertDataToMoneyObj",
          "description": "eslint-disable-next-line class-methods-use-this",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 2
            },
            "end": {
              "line": 221,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "currency"
            },
            {
              "name": "amount"
            },
            {
              "name": "obj"
            }
          ]
        },
        {
          "name": "_updateField",
          "description": "update amount field\nOne issue with number inputs is that their step size is 1 by default.\nIf you try to enter a number with a decimal (such as \"1.0\"), it will be considered invalid.\nIf you want to enter a value that requires decimals, you'll need to reflect this in the step value\n(e.g. step=\"0.01\" to allow decimals to two decimal places).",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 2
            },
            "end": {
              "line": 282,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldValueChanged",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 2
            },
            "end": {
              "line": 299,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "value"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "overwrite onFnaFieldNodeBecameInvalid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 2
            },
            "end": {
              "line": 328,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "overwrite onFnaFieldNodeBecameValid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 334,
              "column": 2
            },
            "end": {
              "line": 341,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_getElements",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 343,
              "column": 2
            },
            "end": {
              "line": 350,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setOptions",
          "description": "set options for currencies dropdown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 364,
              "column": 2
            },
            "end": {
              "line": 378,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "injectEntities",
          "description": "inject the currency entities for dropdown",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 396,
              "column": 2
            },
            "end": {
              "line": 407,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "entities"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updateSuggestions",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 409,
              "column": 2
            },
            "end": {
              "line": 421,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 454,
              "column": 2
            },
            "end": {
              "line": 478,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-money-input",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 35,
          "column": 7
        },
        "end": {
          "line": 479,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataMoneyInput",
      "attributes": [
        {
          "name": "options",
          "description": "the option object defines the currencies dropdown\n'{\"list\": [ \"chf\",\"eur\",\"usd\" ]}'\n'{\"list\": [ {\"id\":\"CHF\",\"label\":\"Schweiz\"},{\"id\":\"EUR\",\"label\":\"Europa\", \"selected\": true}'",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 2
            },
            "end": {
              "line": 358,
              "column": 3
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "currencies",
          "description": "the string list of currencies for the dropdown. e.g. \"CHF,EUR,USD\"",
          "sourceRange": {
            "start": {
              "line": 384,
              "column": 2
            },
            "end": {
              "line": 390,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 246,
              "column": 6
            },
            "end": {
              "line": 248,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 6
            },
            "end": {
              "line": 254,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-money-input",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-ui5-data-money-input-labeled`\nThe furo-ui5-data-money-input-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled input field",
      "path": "src/furo-ui5-data-money-input-labeled.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-money-input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Orchestrates the data field connection to the inside",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 2
            },
            "end": {
              "line": 83,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 2
            },
            "end": {
              "line": 105,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-money-input-labeled",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 7
        },
        "end": {
          "line": 106,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataMoneyInputLabeled",
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-money-input",
          "sourceRange": {
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-money-input-labeled",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-ui5-data-multi-input`\n\nThe furo-ui5-data-multi-input component represents the repeated strings. e.g. [\"aaa\",\"bbb\",\"ccc\"]",
      "summary": "data ui5 data multi input",
      "path": "src/furo-ui5-data-multi-input.js",
      "properties": [],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "connectedCallback() method is called when an element is added to the DOM.\nwebcomponent lifecycle event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 2
            },
            "end": {
              "line": 106,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.\nthose attributes can be set. `value-state`, `value-state-message`,  `placeholder`, `required`,`readonly`,`disabled`\nUse this after manual or scripted update of the attributes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 2
            },
            "end": {
              "line": 122,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 2
            },
            "end": {
              "line": 137,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaConstraintsChanged",
          "description": "overwrite onFnaConstraintsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 2
            },
            "end": {
              "line": 162,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "constraints"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "overwrite onFnaFieldNodeBecameInvalid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 2
            },
            "end": {
              "line": 174,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "overwrite onFnaFieldNodeBecameValid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 180,
              "column": 2
            },
            "end": {
              "line": 182,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValueStateMessage",
          "description": "update the value state and the value state message on demand",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 191,
              "column": 2
            },
            "end": {
              "line": 195,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueState"
            },
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetValueStateMessage",
          "description": "reset to previous value state",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 2
            },
            "end": {
              "line": 203,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNewDataInjected",
          "description": "overwrite onFnaFieldNewDataInjected",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 2
            },
            "end": {
              "line": 214,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaRepeatedFieldChanged",
          "description": "overwrite onFnaRepeatedFieldChanged",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 221,
              "column": 2
            },
            "end": {
              "line": 224,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldValueChanged",
          "description": "overwrite onFnaFieldValueChanged",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 231,
              "column": 2
            },
            "end": {
              "line": 234,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateItems",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 236,
              "column": 2
            },
            "end": {
              "line": 242,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createUi5Token",
          "description": "eslint-disable-next-line class-methods-use-this",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 2
            },
            "end": {
              "line": 252,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ]
        },
        {
          "name": "_triggerValueChangedEvent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 254,
              "column": 2
            },
            "end": {
              "line": 263,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_removeAllItems",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 265,
              "column": 2
            },
            "end": {
              "line": 267,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-multi-input",
          "description": "Basic usage (recommended for repeated strings)"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 15,
          "column": 7
        },
        "end": {
          "line": 268,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataMultiInput",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-multi-input"
    },
    {
      "description": "`furo-ui5-data-multi-input-labeled`\nThe furo-ui5-data-multi-input-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled textarea field",
      "path": "src/furo-ui5-data-multi-input-labeled.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-multi-input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "showValueHelpIcon",
          "type": "boolean | null | undefined",
          "description": "Determines whether a value help icon will be should in the end of the input. Pressing the icon will fire `value-help-trigger` event.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Orchestrates the data field connection to the inside",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 2
            },
            "end": {
              "line": 90,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 2
            },
            "end": {
              "line": 113,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-multi-input-labeled",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 7
        },
        "end": {
          "line": 114,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataMultiInputLabeled",
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-multi-input",
          "sourceRange": {
            "start": {
              "line": 40,
              "column": 6
            },
            "end": {
              "line": 40,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 6
            },
            "end": {
              "line": 46,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "show-value-help-icon",
          "description": "Determines whether a value help icon will be should in the end of the input. Pressing the icon will fire `value-help-trigger` event.",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-multi-input-labeled",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "The 'furo-ui5-data-number-input' component allows the user to enter and edit numbers with data binding.\n\nIt supports all features from the [SAP ui5 Input element](https://sap.github.io/ui5-webcomponents/playground/components/Input/).\n\nYou can bind any `number` type, any `furo.fat.xxx` number type or the `google.wrapper.xxx` number types.\n\n```html\n <furo-ui5-data-number-input\n    ƒ-bind-data=\"--daoCountry(*.data.population)\"\n ></furo-ui5-data-number-input>\n```\n\n### Specificity\n1. Attributes which are set in the html source will have the highest specificity and will never get overwritten by metas or fat.\n2. Attributes set in meta will have the lowest specificity and will be overwritten by attributes from fat.\n\n| meta \t| fat \t| html \t|\n|------\t|-----\t|------\t|\n| 1    \t| 10  \t| 100  \t|\n\n\n## supported FAT attributes\n - **\"readonly\":\"true\"** set the element to readonly\n - **\"required\":\"true\"** set the element to required\n - **\"disabled\":\"true\"** set the element to disabled\n - **\"placeholder\":\"string\"** set the placeholder for the element\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n- **placeholder:\"some string\"** set the placeholder for the element\n\nThe constraint **required** will mark the element as required\n\n## Methods\n**bind-data(fieldNode)**\nBind a entity field. You can use the entity even when no data was received.\n\nWhen you use @-object-ready from a furo-data-object which emits a EntityNode, just bind the field with --entity(*.fields.fieldname)",
      "summary": "data number input field",
      "path": "src/furo-ui5-data-number-input.js",
      "properties": [
        {
          "name": "nativeInputAttributes",
          "type": "?",
          "description": " eslint-disable-next-line class-methods-use-this",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 2
            },
            "end": {
              "line": 136,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "accInfo",
          "type": "*",
          "description": "rewrite get accInfo function\ninitiate _inputAccInfo in order to avoid error",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 301,
              "column": 2
            },
            "end": {
              "line": 306,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "valueStateMessage",
          "type": "(* | {})",
          "description": "overwrite to fix error",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 313,
              "column": 2
            },
            "end": {
              "line": 315,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "suggestionItems",
          "type": "(* | [])",
          "description": "overwrite to fix error",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 322,
              "column": 2
            },
            "end": {
              "line": 324,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "icon",
          "type": "(* | [])",
          "description": "overwrite to fix error",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 331,
              "column": 2
            },
            "end": {
              "line": 333,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "connectedCallback() method is called when an element is added to the DOM.\nwebcomponent lifecycle event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 109,
              "column": 2
            },
            "end": {
              "line": 127,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.\nthose attributes can be set. `value-state`, `value-state-message`,  `icon`, `placeholder`, `required`,`readonly`,`disabled`\nUse this after manual or scripted update of the attributes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 2
            },
            "end": {
              "line": 154,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateFNA",
          "description": "Handler function for the input value changes.\nThis is done to be able to remove the event-listeners as a protection for multiple calls",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 162,
              "column": 2
            },
            "end": {
              "line": 195,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "((function (): void) | *)"
          }
        },
        {
          "name": "_updateLabelsFromFat",
          "description": "labels are map <string,bool>, we handle every boolean attribute with the labels",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 203,
              "column": 2
            },
            "end": {
              "line": 237,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatLabels"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateAttributesFromFat",
          "description": "sync input attributes according to fat attributes",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 243,
              "column": 2
            },
            "end": {
              "line": 293,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatAttributes"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldValueChanged",
          "description": "overwrite onFnaFieldValueChanged",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 340,
              "column": 2
            },
            "end": {
              "line": 353,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaPlaceholderChanged",
          "description": "overwrite onFnaPlaceholderChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 360,
              "column": 2
            },
            "end": {
              "line": 368,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "placeholder"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 375,
              "column": 2
            },
            "end": {
              "line": 383,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaOptionsChanged",
          "description": "overwrite onFnaOptionsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 390,
              "column": 2
            },
            "end": {
              "line": 394,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaConstraintsChanged",
          "description": "overwrite onFnaConstraintsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 401,
              "column": 2
            },
            "end": {
              "line": 412,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "constraints"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "overwrite onFnaFieldNodeBecameInvalid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 419,
              "column": 2
            },
            "end": {
              "line": 424,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "overwrite onFnaFieldNodeBecameValid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 430,
              "column": 2
            },
            "end": {
              "line": 432,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setSuggestions",
          "description": "set suggestions as the ui5-suggestion-item element\nui5 suggestions sample data: [{\"text\":\"Spain\",\"icon\":\"world\",\"type\":\"Active\",\"infoState\":\"None\",\"group\":false,\"key\":0},.. ]\nfuro.Fieldoption as suggestions: [{\"id\": 1,\"display_name\":\"show 1\"}, ..]\nif the suggestion item has icon , the ui5 icons should be imported in your ui component",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 443,
              "column": 2
            },
            "end": {
              "line": 506,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "arr"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValueStateMessage",
          "description": "update the value state and the value state message on demand",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 515,
              "column": 2
            },
            "end": {
              "line": 519,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueState"
            },
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetValueStateMessage",
          "description": "reset to previous value state",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 525,
              "column": 2
            },
            "end": {
              "line": 527,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setIcon",
          "description": "set ui5 icon",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 534,
              "column": 2
            },
            "end": {
              "line": 544,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "icon"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-number-input",
          "description": "Basic usage (scalar , fat, wrapper values)"
        },
        {
          "url": "demo-furo-ui5-data-text-input",
          "description": "Basic usage (scalar , fat, wrapper values)"
        },
        {
          "url": "demo-furo-ui5-data-text-input-together",
          "description": "playground"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 57,
          "column": 7
        },
        "end": {
          "line": 545,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataNumberInput",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-number-input"
    },
    {
      "description": "`furo-ui5-data-number-input-labeled`\nThe furo-ui5-data-number-input-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled input field",
      "path": "src/furo-ui5-data-number-input-labeled.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-number-input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 55,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user and\nappears in disabled state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "focus",
          "description": "Focuses the underlying ui5 input element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 33,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options",
              "type": "Object",
              "description": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 2
            },
            "end": {
              "line": 42,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Orchestrates the data field connection to the inside",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 2
            },
            "end": {
              "line": 121,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-number-input-labeled",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 20,
          "column": 7
        },
        "end": {
          "line": 122,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataNumberInputLabeled",
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-number-input",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 49,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 6
            },
            "end": {
              "line": 55,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user and\nappears in disabled state.",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 6
            },
            "end": {
              "line": 62,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 68,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "icon",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-number-input-labeled",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "The 'furo-ui5-data-password-input' component allows the user to enter and edit password with data binding.\n\nIt supports all features from the [SAP ui5 Input element](https://sap.github.io/ui5-webcomponents/playground/components/Input/).\n\nYou can bind any `string` type, like `furo.fat.String` type or the `google.protobuf.StringValue` type.\n\n```html\n <furo-ui5-data-password-input\n    ƒ-bind-data=\"--daoCountry(*.data.name)\"\n ></furo-ui5-data-password-input>\n```\n\n### Specificity\n1. Attributes which are set in the html source will have the highest specificity and will never get overwritten by metas or fat.\n2. Attributes set in meta will have the lowest specificity and will be overwritten by attributes from fat.\n\n** meta \t<  fat \t< html \t**\n\n## supported FAT attributes\n - **\"readonly\":\"true\"** set the element to readonly\n - **\"required\":\"true\"** set the element to required\n - **\"disabled\":\"true\"** set the element to disabled\n - **\"icon\":\"home\"** set the icon\n - **\"placeholder\":\"string\"** set the placeholder for the element\n - **\"max\":\"number\"** set the maximum number of characters available in the input field.\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n- **placeholder:\"some string\"** set the placeholder for the element\n- **max:\"number\"** set the maximum number of characters available in the input field.\n\nThe constraint **required** will mark the element as required\n\n## Methods\n**bind-data(fieldNode)**\nBind a entity field. You can use the entity even when no data was received.\n\nWhen you use @-object-ready from a furo-data-object which emits a EntityNode, just bind the field with --entity(*.fields.fieldname)",
      "summary": "data password input field",
      "path": "src/furo-ui5-data-password-input.js",
      "properties": [
        {
          "name": "nativeInputAttributes",
          "type": "?",
          "description": " eslint-disable-next-line class-methods-use-this",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 138,
              "column": 2
            },
            "end": {
              "line": 140,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "accInfo",
          "type": "*",
          "description": "rewrite get accInfo function\ninitiate _inputAccInfo in order to avoid error",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 320,
              "column": 2
            },
            "end": {
              "line": 325,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "valueStateMessage",
          "type": "(* | {})",
          "description": "overwrite to fix error",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 332,
              "column": 2
            },
            "end": {
              "line": 334,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "suggestionItems",
          "type": "(* | [])",
          "description": "overwrite to fix error",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 341,
              "column": 2
            },
            "end": {
              "line": 343,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "icon",
          "type": "(* | [])",
          "description": "overwrite to fix error",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 2
            },
            "end": {
              "line": 352,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "connectedCallback() method is called when an element is added to the DOM.\nwebcomponent lifecycle event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 2
            },
            "end": {
              "line": 131,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.\nthose attributes can be set. `value-state`, `value-state-message`,  `icon`, `placeholder`, `required`,`readonly`,`disabled`\nUse this after manual or scripted update of the attributes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateFNA",
          "description": "Handler function for the input value changes.\nThis is done to be able to remove the event-listeners as a protection for multiple calls",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "((function (): void) | *)"
          }
        },
        {
          "name": "_updateLabelsFromFat",
          "description": "labels are map <string,bool>, we handle every boolean attribute with the labels",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 208,
              "column": 2
            },
            "end": {
              "line": 246,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatLabels"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateAttributesFromFat",
          "description": "sync input attributes according to fat attributes",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 252,
              "column": 2
            },
            "end": {
              "line": 312,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatAttributes"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldValueChanged",
          "description": "overwrite onFnaFieldValueChanged",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 359,
              "column": 2
            },
            "end": {
              "line": 372,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaPlaceholderChanged",
          "description": "overwrite onFnaPlaceholderChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 2
            },
            "end": {
              "line": 387,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "placeholder"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 394,
              "column": 2
            },
            "end": {
              "line": 404,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaOptionsChanged",
          "description": "overwrite onFnaOptionsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 411,
              "column": 2
            },
            "end": {
              "line": 415,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaConstraintsChanged",
          "description": "overwrite onFnaConstraintsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 422,
              "column": 2
            },
            "end": {
              "line": 440,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "constraints"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "overwrite onFnaFieldNodeBecameInvalid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 447,
              "column": 2
            },
            "end": {
              "line": 452,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "overwrite onFnaFieldNodeBecameValid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 458,
              "column": 2
            },
            "end": {
              "line": 460,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setSuggestions",
          "description": "set suggestions as the ui5-suggestion-item element\nui5 suggestions sample data: [{\"text\":\"Spain\",\"icon\":\"world\",\"type\":\"Active\",\"infoState\":\"None\",\"group\":false,\"key\":0},.. ]\nfuro.Fieldoption as suggestions: [{\"id\": 1,\"display_name\":\"show 1\"}, ..]\nif the suggestion item has icon , the ui5 icons should be imported in your ui component",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 471,
              "column": 2
            },
            "end": {
              "line": 534,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "arr"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValueStateMessage",
          "description": "update the value state and the value state message on demand",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 543,
              "column": 2
            },
            "end": {
              "line": 547,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueState"
            },
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetValueStateMessage",
          "description": "reset to previous value state",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 553,
              "column": 2
            },
            "end": {
              "line": 555,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "setIcon",
          "description": "set ui5 icon",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 562,
              "column": 2
            },
            "end": {
              "line": 580,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "icon"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "show",
          "description": "show password",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 585,
              "column": 2
            },
            "end": {
              "line": 590,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "hide",
          "description": "hide password",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 595,
              "column": 2
            },
            "end": {
              "line": 600,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggleVisibility",
          "description": "toggle visibility of the password. (show/hide) password",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 605,
              "column": 2
            },
            "end": {
              "line": 611,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-password-input",
          "description": "Basic usage (scalar , fat, wrapper values)"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 57,
          "column": 7
        },
        "end": {
          "line": 612,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5PasswordInput",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-password-input"
    },
    {
      "description": "`furo-ui5-data-password-input-labeled`\nThe furo-ui5-data-password-input-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled input field",
      "path": "src/furo-ui5-data-password-input-labeled.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-password-input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user and\nappears in disabled state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "focus",
          "description": "Focuses the underlying ui5 input element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 2
            },
            "end": {
              "line": 36,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options",
              "type": "Object",
              "description": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Orchestrates the data field connection to the inside",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 94,
              "column": 2
            },
            "end": {
              "line": 96,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 102,
              "column": 2
            },
            "end": {
              "line": 121,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-password-input-labeled",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 24,
          "column": 7
        },
        "end": {
          "line": 122,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataPasswordInputLabeled",
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-password-input",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user and\nappears in disabled state.",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-password-input-labeled",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-ui5-data-property`\n Field for type furo.Property. It works with repeated types an nonrepeating type. Supported\n\n ```html\n <!-- single Property -->\n <furo-ui5-data-property ƒ-bind-data=\"--entity(*.single_type_property)\"></furo-ui5-data-property>\n <!-- repeated Property -->\n <furo-ui5-data-property ƒ-bind-data=\"--entity(*.type_property)\"></furo-ui5-data-property>\n\n ```\n\n ## Example data for the data-object looks like this\n\n ```json\n \"single_type_property\": {\n   \"data\": {\n     \"@type\": \"google.type.Date\",\n     \"day\": 8,\n     \"month\":  11,\n     \"year\": 2022\n   },\n   \"display_name\": \"a date\",\n   \"id\": \"date\",\n   \"code\": \"date\",\n   \"meta\": {\n     \"fields\": {\n       \"data\": {\n         \"meta\": {\n           \"label\": \"Additional fields\",\n           \"hint\": \"this is data\"\n         },\n         \"constraints\": {\n           \"min\": {\n             \"value\": \"2019-09-09\",\n             \"message\": \"to small\"\n           }\n         }\n       }\n     }\n   }\n }\n ```\n## Example StringOptions Field\n\n```json\n{\n  \"data\": {\n       \"@type\": \"furo.StringOptionProperty\",\n       \"id\": \"bb\",\n       \"display_name\": \"Display\"\n     },\n     \"display_name\": \"Display\",\n     \"id\": \"opt\",\n     \"code\": \"option\",\n     \"meta\": {\n       \"fields\": {\n         \"data\": {\n           \"meta\": {\n             \"label\": \"Please select\",\n             \"hint\": \"datehint is data\",\n             \"repeated\": false,\n             \"options\": [\n               {\n                 \"id\": \"aa\",\n                 \"display_name\": \"The display a\"\n               },\n               {\n                 \"id\": \"bb\",\n                 \"display_name\": \"The display b\"\n               }\n             ]\n           }\n         }\n       }\n     }\n   }\n\n```\n\n The current type mappings are:\n\n- \"google.type.Date\": \"furo-data-date-input\"\n- \"furo.StringProperty\": \"furo-data-text-input\"\n- \"furo.IntegerProperty\": \"furo-data-number-input\"\n- \"furo.NumberProperty\": \"furo-data-number-input\"\n- \"furo.StringOptionProperty\": \"furo-data-collection-dropdown\"",
      "summary": "display and bind types of type any",
      "path": "src/furo-ui5-data-property.js",
      "properties": [],
      "methods": [
        {
          "name": "bindData",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 2
            },
            "end": {
              "line": 153,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propertyField"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createPropComponent",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 155,
              "column": 2
            },
            "end": {
              "line": 237,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "propertyField"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "disconnectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 239,
              "column": 2
            },
            "end": {
              "line": 246,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-property",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 99,
          "column": 7
        },
        "end": {
          "line": 259,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataProperty",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-property",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "The 'furo-ui5-data-radio-button' component allows the user to switch true and false for Bool with data binding.\n\nIt supports all features from the [SAP ui5 toggleButton element](https://sap.github.io/ui5-webcomponents/playground/components/ToggleButton/).\n\nYou can bind  `bool` type, `furo.fat.Bool` type or the `google.wrapper.BoolValue`  type.\n\n```html\n <furo-ui5-data-radio-button\n    ƒ-bind-data=\"--daoCountry(*.data.classified_as_risk_area)\"\n ></furo-ui5-data-radio-button>\n```\n```html\n <furo-ui5-radio-group>\n   <furo-ui5-data-radio-button name=\"group\"\n      ƒ-bind-data=\"--daoCountry(*.data.classified_as_risk_area)\"\n   ></furo-ui5-data-radio-button>\n   <furo-ui5-data-radio-button name=\"group\"\n      ƒ-bind-data=\"--daoCountry(*.data.classified_as_high_risk_area)\"\n   ></furo-ui5-data-radio-button>\n </furo-ui5-radio-group>\n```\n\n### Specificity\n1. Attributes which are set in the html source will have the highest specificity and will never get overwritten by metas or fat.\n2. Attributes set in meta will have the lowest specificity and will be overwritten by attributes from fat.\n\n| meta \t| fat \t| html \t|\n|------\t|-----\t|------\t|\n| 1    \t| 10  \t| 100  \t|\n\n\n## supported FAT attributes\n - **\"readonly\":\"true\"** set the element to readonly\n - **\"disabled\":\"true\"** set the element to disabled\n - **\"icon\":\"\"** set the icon\n - **\"design\":\"\"** set the design\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n\nThe constraint **required** will mark the element as required\n\n## Methods\n**bind-data(fieldNode)**\nBind a entity field. You can use the entity even when no data was received.\n\nWhen you use @-object-ready from a furo-data-object which emits a EntityNode, just bind the field with --entity(*.fields.fieldname)",
      "summary": "boolean toggle button",
      "path": "src/furo-ui5-data-radio-button.js",
      "properties": [],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "connectedCallback() method is called when an element is added to the DOM.\nwebcomponent lifecycle event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 2
            },
            "end": {
              "line": 120,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateFNA",
          "description": "Handler function for the toggleButton changes.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 127,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "((function (): void) | *)"
          }
        },
        {
          "name": "onFnaFieldValueChanged",
          "description": "overwrite onFnaFieldValueChanged",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 2
            },
            "end": {
              "line": 159,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateLabelsFromFat",
          "description": "labels are map <string,bool>, we handle every boolean attribute with the labels",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 191,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatLabels"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateAttributesFromFat",
          "description": "sync input attributes according to fat attributes",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 197,
              "column": 2
            },
            "end": {
              "line": 236,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatAttributes"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "overwrite onFnaFieldNodeBecameInvalid function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 241,
              "column": 2
            },
            "end": {
              "line": 243,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "overwrite onFnaFieldNodeBecameValid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 2
            },
            "end": {
              "line": 251,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setDesign",
          "description": "Updates the design",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 2
            },
            "end": {
              "line": 260,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "design"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetDesign",
          "description": "reset to previous value state",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 2
            },
            "end": {
              "line": 268,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaLabelChanged",
          "description": "overwrite onFnaLabelChanged function\nlabel is mapped to text",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 2
            },
            "end": {
              "line": 280,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 287,
              "column": 2
            },
            "end": {
              "line": 295,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-radio-button",
          "description": "Basic usage (scalar , fat, wrapper values)"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 61,
          "column": 7
        },
        "end": {
          "line": 296,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataRadioButton",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-radio-button"
    },
    {
      "description": "`furo-ui5-data-radio-button-group`\nThe furo-ui5-data-radio-button-group component enables users to select a single option from a set of options.\nWhen a furo-ui5-data-radio-button-group is selected by the user, the select event is fired.\nWhen a furo-ui5-data-radio-button-group that is within a group is selected, the one that was previously selected gets automatically deselected.\nYou can group radio buttons by using the group-name property.\n\n```\n<furo-ui5-data-radio-button-group\n   group-name=\"Option\"\n   ƒ-bind-data=\"--daoPerson(*.field_with_meta_options)\">\n</furo-ui5-data-radio-button-group>\n```\n```\n<furo-ui5-data-radio-button-group\n   group-name=\"Option\"\n   ƒ-bind-data=\"--daoPerson(*.field)\">\n     <ui5-radiobutton text=\"Option A\" selected name=\"Owner\"></ui5-radiobutton>\n     <ui5-radiobutton text=\"Option B with a very long text\" name=\"Owner\"></ui5-radiobutton>\n</furo-ui5-data-radio-button-group>\n```",
      "summary": "",
      "path": "src/furo-ui5-data-radio-button-group.js",
      "properties": [
        {
          "name": "_tagRadioButton",
          "type": "string",
          "description": "Inner radio component tag",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 4
            },
            "end": {
              "line": 44,
              "column": 24
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'ui5-radiobutton'"
        },
        {
          "name": "groupName",
          "type": "string",
          "description": "Defines the name of the inner radio button. Radio buttons with the same name will form a radio button group.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 50,
              "column": 4
            },
            "end": {
              "line": 50,
              "column": 18
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "''"
        },
        {
          "name": "activeFieldBinding",
          "type": "boolean",
          "description": "Flag to indicate if a field is attached\nDefault: false",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 4
            },
            "end": {
              "line": 57,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "idFieldPath",
          "type": "string",
          "description": "Defines the field path that is used from the injected RepeaterNode to identify the option items.\nPoint-separated path to the field\nE.g. data.partner.ulid\ndefault: id",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 4
            },
            "end": {
              "line": 66,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'id'"
        },
        {
          "name": "displayFieldPath",
          "type": "string",
          "description": "Defines the field path that is used from the injected RepeaterNode to display the option items.\nPoint-separated path to the field\nE.g. data.partner.display_name\ndefault: display_name",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 4
            },
            "end": {
              "line": 75,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'display_name'"
        },
        {
          "name": "valueFieldPath",
          "type": "string",
          "description": "Defines the field path that is used to update the bound component if the user has selected an option.\nPoint-separated path to the field\nMust be set if a data binding is specified.\ndefault: id",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 4
            },
            "end": {
              "line": 84,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'id'"
        },
        {
          "name": "_optionList",
          "type": "Array.<*>",
          "description": "Internal RepeaterNode\nDefines the ui5-select options.\nNote: Only one selected option is allowed. If more than one option is defined as selected, the last one would be considered as the selected one.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 4
            },
            "end": {
              "line": 93,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "[]"
        }
      ],
      "methods": [
        {
          "name": "bindData",
          "description": "overwrite bindData of FieldNodeAdapter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 2
            },
            "end": {
              "line": 138,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "bindOptions",
          "description": "Here a RepeaterNode can be connected to the component as an option list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 2
            },
            "end": {
              "line": 165,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "repeaterNode"
            }
          ]
        },
        {
          "name": "connectedCallback",
          "description": "connectedCallback() method is called when an element is added to the DOM.\nwebcomponent lifecycle event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 2
            },
            "end": {
              "line": 195,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.\nthose attributes can be set. `readonly`,`disabled`, `value-field-path`, `display-field-path`\nUse this after manual or scripted update of the attributes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 2
            },
            "end": {
              "line": 209,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldValueChanged",
          "description": "overwrite onFnaFieldValueChanged",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 216,
              "column": 2
            },
            "end": {
              "line": 225,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 2
            },
            "end": {
              "line": 250,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaOptionsChanged",
          "description": "Overwrite onFnaOptionsChanged\nNotifies when the options for the field is changed or set.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 258,
              "column": 2
            },
            "end": {
              "line": 262,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "selectOptionById",
          "description": "Selects an option by id",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 268,
              "column": 2
            },
            "end": {
              "line": 288,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ]
        },
        {
          "name": "_updateFNA",
          "description": "Handler function for the select value changes.\nThis is done to be able to remove the event-listeners as a protection for multiple calls",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 307,
              "column": 2
            },
            "end": {
              "line": 378,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "((function (): void) | *)"
          }
        },
        {
          "name": "_updateOptions",
          "description": "Maps and updates array of option",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 385,
              "column": 2
            },
            "end": {
              "line": 461,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "list"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [
        {
          "name": "getValueByPath",
          "description": "Let you get an attribute value by path",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 2
            },
            "end": {
              "line": 299,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            },
            {
              "name": "path"
            }
          ]
        }
      ],
      "demos": [
        {
          "url": "demo-furo-ui5-data-radio-button-group",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 35,
          "column": 7
        },
        "end": {
          "line": 462,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataRadioButtonGroup",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-radio-button-group",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`reference-search-item`\nRepeated item to display the search result set",
      "summary": "representation of a result item",
      "path": "src/ui5-reference-search-item.js",
      "properties": [],
      "methods": [
        {
          "name": "injectItem",
          "description": "Inject of the item\ndata of inner text of the element is defined with the attribute\ndisplay-field (default value: display_name)",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 28,
              "column": 2
            },
            "end": {
              "line": 31,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "item"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "deselect",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 2
            },
            "end": {
              "line": 35,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "preselect",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 37,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "select",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 2
            },
            "end": {
              "line": 46,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 11,
          "column": 7
        },
        "end": {
          "line": 47,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "StandardListItem.default",
      "name": "Ui5ReferenceSearchItem",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "ui5-reference-search-item",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "The furo-ui5-data-reference-search\n search a reference\n\n Bounded data must fullfill the  furo.reference signature. The service, deeplink,... is taken from the spec of your field.\n Do not forget to specify.\n\n *default usage*\n```html\n  <furo-ui5-data-reference-search\n  ƒ-bind-data=\"--data(*.is_person)\"\n  ></furo-ui5-data-reference-search>\n```\n\n *usage with a extended searcher*\n```html\n  <furo-ui5-data-reference-search\n  extended-searcher=\"country-filter\"\n  ƒ-bind-data=\"--data(*.is_person)\"\n  ></furo-ui5-data-reference-search>\n```\n\n *usage example for a non default response*\n```html\n  <furo-ui5-data-reference-search\n  extended-searcher=\"contact-filter\"\n  search-response-path=\"xx_entities\"\n  value-field-path=\"data.xx_id\"\n  display-field-path=\"data.xx_display_name\"\n  ƒ-bind-data=\"--data(*.is_person)\"\n  ></furo-ui5-data-reference-search-labeled>\n```\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n- **placeholder:\"some string\"** set the placeholder for the element\n- **max:\"number\"** set the maximum number of characters available in the input field.\n\nThe constraint **required** will mark the element as required\n\n## Methods\n**bind-data(fieldNode)**\nBind a entity field. This can be a scalar type or any complex type with 'id','display_name' signature.\n\nIf your type has a *reference* type signature ('id','display_name', 'link'), the service, and initial deep link is extracted from\nthe link part of your type.\n\nIf you bind a skalar field, the value which is set in 'valueFieldPath' will be set.\n\nWhen you use @-object-ready from a furo-data-object which emits a EntityNode, just bind the field with --entity(*.fields.fieldname)\n\n## Specs\nDefine a propper default value on the reference type.\n\n```yaml\nlink:\ntype: furo.Link\ndescription: HTS for the initial search (the default works on root resources only)\n__proto:\n   number: 3\n__ui: null\nmeta:\n  default: |\n    {\n         \"rel\": \"list\",\n         \"href\": \"/contacts\",\n         \"method\": \"GET\",\n         \"type\": \"contact.Contact\",\n         \"service\": \"Contacts\"\n     }\n  placeholder: \"\"\n  hint: \"\"\n  label: contact.Reference.link.label\n  options:\n    flags: []\n    list: []\n  readonly: false\n  repeated: false\n  typespecific: null\n\n```\n### API of a extended searcher\n### Searcher Mehtods\nThe only method you have to implement is **htsIn**. The reference-search will pass its own hts to the extended\nsearcher. A call on qpIn on the searcher will also pass the resulting hts to the extended searcher.\n\n### Searcher Events\nFire a **@-record-selected** to set the item on the reference-search.\nFire a **@-close-requested** to close the extended search.",
      "summary": "furo ui5 data reference search",
      "path": "src/furo-ui5-data-reference-search.js",
      "properties": [
        {
          "name": "service",
          "type": "string | null | undefined",
          "description": "Set the service. This is only needed when you do not use a bind or bind a scalar value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 2
            },
            "end": {
              "line": 389,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "searchResponsePath",
          "type": "string | null | undefined",
          "description": "Path to the node in the response value which contains the array with the selection items.\nBy default this goes to *entitites*",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 6
            },
            "end": {
              "line": 245,
              "column": 77
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valueFieldPath",
          "type": "string | null | undefined",
          "description": "Path to response value item which is used for the id.\nBy default this goes to *data.id*",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 6
            },
            "end": {
              "line": 250,
              "column": 69
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "displayFieldPath",
          "type": "string | null | undefined",
          "description": "Path to selection value node which is used for the display.\nBy default this goes to *data.display_name*",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 255,
              "column": 73
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "extendedValueFieldPath",
          "type": "string | null | undefined",
          "description": "Path to response value item of the exteded search which is used for the id.\nBy default this goes to *data.id*.\nOnly needed when your extended searcher does not have the id, display_name signature in the response.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 6
            },
            "end": {
              "line": 261,
              "column": 86
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "extendedDisplayFieldPath",
          "type": "string | null | undefined",
          "description": "Path to response value item of the exteded search which is used for the display.\nBy default this goes to *data.display_name*.\nOnly needed when your extended searcher does not have the id, display_name signature in the response.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 6
            },
            "end": {
              "line": 267,
              "column": 90
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Use this attribute to set a custom icon for your searcher",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 6
            },
            "end": {
              "line": 275,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disableSearchList",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field can not be searched.\n\nThis is very useful when you want enforce the usage of the extended search",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 6
            },
            "end": {
              "line": 284,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noDataText",
          "type": "string | null | undefined",
          "description": "hint text when result not found by search",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 6
            },
            "end": {
              "line": 291,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 6
            },
            "end": {
              "line": 300,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "placeholder",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 6
            },
            "end": {
              "line": 308,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "minTermLength",
          "type": "number | null | undefined",
          "description": "The minimal length of search term to trigger a search.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 313,
              "column": 6
            },
            "end": {
              "line": 316,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "maxItemsToDisplay",
          "type": "number | null | undefined",
          "description": "The maximal number of items to display.\n\nThis value will be set as page-size query-param for the backend.\n\nIf the response contains hts information with rel *next* a \"load more\" button will be displayed at the end\nof the list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "searchOnEnterOnly",
          "type": "boolean | null | undefined",
          "description": "Enable this, to avoid the automatic triggering of \"search\".\n\nThe user have to press enter to trigger the search. Min-term-length is respected.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 338,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 346,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "Disable",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 6
            },
            "end": {
              "line": 352,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "busy",
          "type": "boolean | null | undefined",
          "description": "This is used to activate the loading indicator.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "debounceTimeout",
          "type": "number | null | undefined",
          "description": "wait for this time between keystrokes to trigger a search to the service",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 366,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "extendedSearcher",
          "type": "string | null | undefined",
          "description": "Define the extended searcher. Do not forget to import the searcher you want to use.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 371,
              "column": 6
            },
            "end": {
              "line": 374,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "onFnaFieldValueChanged",
          "description": "This is triggered from the FieldNodeAdapter when the data has changed",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 172,
              "column": 2
            },
            "end": {
              "line": 198,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "connectedCallback",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 200,
              "column": 2
            },
            "end": {
              "line": 218,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateField",
          "description": "This is used to update the FieldNodeAdapter",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 224,
              "column": 2
            },
            "end": {
              "line": 233,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 391,
              "column": 2
            },
            "end": {
              "line": 706,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_closeList",
          "description": "Closes the list",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 712,
              "column": 2
            },
            "end": {
              "line": 715,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_showList",
          "description": "Opens the list and selects the last selected item",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 721,
              "column": 2
            },
            "end": {
              "line": 742,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaPlaceholderChanged",
          "description": "Update the placeholder from the FNA",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 749,
              "column": 2
            },
            "end": {
              "line": 754,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "placeholder"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "Updates the readonly state from FNA",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 761,
              "column": 2
            },
            "end": {
              "line": 768,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaConstraintsChanged",
          "description": "Updates the required constraint from the FNA",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 775,
              "column": 2
            },
            "end": {
              "line": 783,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "constraints"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "Updates the error state from FNA",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 790,
              "column": 2
            },
            "end": {
              "line": 795,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "Clears the error state from FNA",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 801,
              "column": 2
            },
            "end": {
              "line": 803,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValueStateMessage",
          "description": "updater for the value state and message",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 812,
              "column": 2
            },
            "end": {
              "line": 817,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueState"
            },
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetValueStateMessage",
          "description": "reset to previous value state",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 823,
              "column": 2
            },
            "end": {
              "line": 825,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.\n\nFollowing attributes can be set:\n- `value-state`\n- `value-state-message`\n- `icon`\n- `placeholder`\n- `required`\n- `readonly`\n- `disabled`\n\nUse this after manual or scripted update of the attributes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 841,
              "column": 2
            },
            "end": {
              "line": 850,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "htsIn",
          "description": "htsIn sets the HTS for the collection-agent.\n\nThis is only needed if you want to have fine grained control over the hts",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 860,
              "column": 2
            },
            "end": {
              "line": 862,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hts"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "qpIn",
          "description": "qpIn Use this to set query params manualy",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 869,
              "column": 2
            },
            "end": {
              "line": 871,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "qp"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 941,
              "column": 2
            },
            "end": {
              "line": 1029,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-reference-search",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 116,
          "column": 7
        },
        "end": {
          "line": 1030,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataReferenceSearch",
      "attributes": [
        {
          "name": "service",
          "description": "Set the service. This is only needed when you do not use a bind or bind a scalar value.",
          "sourceRange": {
            "start": {
              "line": 383,
              "column": 2
            },
            "end": {
              "line": 389,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "search-response-path",
          "description": "Path to the node in the response value which contains the array with the selection items.\nBy default this goes to *entitites*",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 6
            },
            "end": {
              "line": 245,
              "column": 77
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value-field-path",
          "description": "Path to response value item which is used for the id.\nBy default this goes to *data.id*",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 6
            },
            "end": {
              "line": 250,
              "column": 69
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "display-field-path",
          "description": "Path to selection value node which is used for the display.\nBy default this goes to *data.display_name*",
          "sourceRange": {
            "start": {
              "line": 255,
              "column": 6
            },
            "end": {
              "line": 255,
              "column": 73
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "extended-value-field-path",
          "description": "Path to response value item of the exteded search which is used for the id.\nBy default this goes to *data.id*.\nOnly needed when your extended searcher does not have the id, display_name signature in the response.",
          "sourceRange": {
            "start": {
              "line": 261,
              "column": 6
            },
            "end": {
              "line": 261,
              "column": 86
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "extended-display-field-path",
          "description": "Path to response value item of the exteded search which is used for the display.\nBy default this goes to *data.display_name*.\nOnly needed when your extended searcher does not have the id, display_name signature in the response.",
          "sourceRange": {
            "start": {
              "line": 267,
              "column": 6
            },
            "end": {
              "line": 267,
              "column": 90
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon",
          "description": "Use this attribute to set a custom icon for your searcher",
          "sourceRange": {
            "start": {
              "line": 275,
              "column": 6
            },
            "end": {
              "line": 275,
              "column": 28
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disable-search-list",
          "description": "A Boolean attribute which, if present, means this field can not be searched.\n\nThis is very useful when you want enforce the usage of the extended search",
          "sourceRange": {
            "start": {
              "line": 281,
              "column": 6
            },
            "end": {
              "line": 284,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-data-text",
          "description": "hint text when result not found by search",
          "sourceRange": {
            "start": {
              "line": 288,
              "column": 6
            },
            "end": {
              "line": 291,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "Overrides the required value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 297,
              "column": 6
            },
            "end": {
              "line": 300,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "placeholder",
          "description": "Overrides the hint text from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 6
            },
            "end": {
              "line": 308,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "min-term-length",
          "description": "The minimal length of search term to trigger a search.",
          "sourceRange": {
            "start": {
              "line": 313,
              "column": 6
            },
            "end": {
              "line": 316,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "max-items-to-display",
          "description": "The maximal number of items to display.\n\nThis value will be set as page-size query-param for the backend.\n\nIf the response contains hts information with rel *next* a \"load more\" button will be displayed at the end\nof the list.",
          "sourceRange": {
            "start": {
              "line": 325,
              "column": 6
            },
            "end": {
              "line": 328,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "search-on-enter-only",
          "description": "Enable this, to avoid the automatic triggering of \"search\".\n\nThe user have to press enter to trigger the search. Min-term-length is respected.",
          "sourceRange": {
            "start": {
              "line": 335,
              "column": 6
            },
            "end": {
              "line": 338,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "Overrides the readonly value from the **specs**.\n\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 344,
              "column": 6
            },
            "end": {
              "line": 346,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "Disable",
          "sourceRange": {
            "start": {
              "line": 350,
              "column": 6
            },
            "end": {
              "line": 352,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "busy",
          "description": "This is used to activate the loading indicator.",
          "sourceRange": {
            "start": {
              "line": 356,
              "column": 6
            },
            "end": {
              "line": 358,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "debounce-timeout",
          "description": "wait for this time between keystrokes to trigger a search to the service",
          "sourceRange": {
            "start": {
              "line": 363,
              "column": 6
            },
            "end": {
              "line": 366,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "extended-searcher",
          "description": "Define the extended searcher. Do not forget to import the searcher you want to use.",
          "sourceRange": {
            "start": {
              "line": 371,
              "column": 6
            },
            "end": {
              "line": 374,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-reference-search"
    },
    {
      "description": "`furo-ui5-data-reference-search-labeled`\nThe furo-ui5-data-reference-search-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled input field",
      "path": "src/furo-ui5-data-reference-search-labeled.js",
      "properties": [
        {
          "name": "service",
          "type": "string | null | undefined",
          "description": "the service name",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 31
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-reference-search",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 61,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valueFieldPath",
          "type": "string | null | undefined",
          "description": "Path to response value item which is used for the id.\nBy default this goes to *data.id*",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 69
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "displayFieldPath",
          "type": "string | null | undefined",
          "description": "Path to selection value node which is used for the display.\nBy default this goes to *data.display_name*",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 73
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "searchResponsePath",
          "type": "string | null | undefined",
          "description": "Path to the node in the response value which contains the array with the selection items.\nBy default this goes to *entitites*",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 77
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "extendedValueFieldPath",
          "type": "string | null | undefined",
          "description": "Path to response value item of the exteded search which is used for the id.\nBy default this goes to *data.id*.\nOnly needed when your extended searcher does not have the id, display_name signature in the response.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 86
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "extendedDisplayFieldPath",
          "type": "string | null | undefined",
          "description": "Path to response value item of the exteded search which is used for the display.\nBy default this goes to *data.display_name*.\nOnly needed when your extended searcher does not have the id, display_name signature in the response.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 90
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "placeholder",
          "type": "string | null | undefined",
          "description": "Overrides the hint text from the **specs**.\nUse with caution, normally the specs defines this value.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 35
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Use this attribute to set a custom icon for your searcher",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 97,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "disableSearchList",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field can not be searched.\n\nThis is very useful when you want enforce the usage of the extended search",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "extendedSearcher",
          "type": "string | null | undefined",
          "description": "Define the extended searcher. Do not forget to import the searcher you want to use.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 6
            },
            "end": {
              "line": 128,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "focus",
          "description": "Focuses the underlying ui5 input element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 39,
              "column": 2
            },
            "end": {
              "line": 41,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options",
              "type": "Object",
              "description": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 2
            },
            "end": {
              "line": 50,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Orchestrates the data field connection to the inside",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 2
            },
            "end": {
              "line": 138,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 144,
              "column": 2
            },
            "end": {
              "line": 170,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-reference-search",
          "description": "Simple use"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 7
        },
        "end": {
          "line": 187,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataReferenceSearchLabeled",
      "attributes": [
        {
          "name": "service",
          "description": "the service name",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 57,
              "column": 31
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "label",
          "description": "the label for the data-reference-search",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 6
            },
            "end": {
              "line": 61,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value-field-path",
          "description": "Path to response value item which is used for the id.\nBy default this goes to *data.id*",
          "sourceRange": {
            "start": {
              "line": 66,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 69
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "display-field-path",
          "description": "Path to selection value node which is used for the display.\nBy default this goes to *data.display_name*",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 73
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "search-response-path",
          "description": "Path to the node in the response value which contains the array with the selection items.\nBy default this goes to *entitites*",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 77
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "extended-value-field-path",
          "description": "Path to response value item of the exteded search which is used for the id.\nBy default this goes to *data.id*.\nOnly needed when your extended searcher does not have the id, display_name signature in the response.",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 86
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "extended-display-field-path",
          "description": "Path to response value item of the exteded search which is used for the display.\nBy default this goes to *data.display_name*.\nOnly needed when your extended searcher does not have the id, display_name signature in the response.",
          "sourceRange": {
            "start": {
              "line": 88,
              "column": 6
            },
            "end": {
              "line": 88,
              "column": 90
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "placeholder",
          "description": "Overrides the hint text from the **specs**.\nUse with caution, normally the specs defines this value.",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 35
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon",
          "description": "Use this attribute to set a custom icon for your searcher",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 6
            },
            "end": {
              "line": 97,
              "column": 28
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "disable-search-list",
          "description": "A Boolean attribute which, if present, means this field can not be searched.\n\nThis is very useful when you want enforce the usage of the extended search",
          "sourceRange": {
            "start": {
              "line": 103,
              "column": 6
            },
            "end": {
              "line": 106,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 110,
              "column": 6
            },
            "end": {
              "line": 112,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 113,
              "column": 6
            },
            "end": {
              "line": 115,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 6
            },
            "end": {
              "line": 121,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "extended-searcher",
          "description": "Define the extended searcher. Do not forget to import the searcher you want to use.",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 6
            },
            "end": {
              "line": 128,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-reference-search-labeled",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`ui5-data-repeat-delete`\nDeletes a repeated item. Built for furo-ui5-data-repeat",
      "summary": "",
      "path": "src/lib/ui5-data-repeat-delete.js",
      "properties": [
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "Description",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 6
            },
            "end": {
              "line": 22,
              "column": 28
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 30,
              "column": 2
            },
            "end": {
              "line": 40,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindItem",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 42,
              "column": 2
            },
            "end": {
              "line": 44,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "repeatedNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 2
            },
            "end": {
              "line": 85,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 12,
          "column": 0
        },
        "end": {
          "line": 86,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "Ui5DataRepeatDelete",
      "attributes": [
        {
          "name": "icon",
          "description": "Description",
          "sourceRange": {
            "start": {
              "line": 22,
              "column": 6
            },
            "end": {
              "line": 22,
              "column": 28
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "ui5-data-repeat-delete",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-ui5-data-repeat`\n Display for repeated fields.\n\n ```html\n <furo-ui5-data-repeat ƒ-bind-data=\"--data(*.repeaterfield)\"\n     repeated-component=\"furo-date-input\"\n     delete-icon=\"remove\"\n     ƒ-add=\"--addDateClicked\"\n     ></furo-ui5-data-repeat>\n\n     <!-- Add is controlled from outside, delete from inside of the item -->\n     <furo-ui5-data-repeat ƒ-bind-data=\"--data(*.repeatedcomplextype)\"\n     repeated-component=\"my-big-form\"\n     ƒ-add=\"--addClicked\"\n     ></furo-ui5-data-repeat>\n\n ```\n\n Every Attribute (boolean or string) which is set on furo-ui5-data-repeat which is not part of its own api, will be set on the child element.\n If you set condensed as an example, it will be set on the repeated element. It is not possible to set wires to the children.",
      "summary": "automatic display of repeated fields",
      "path": "src/furo-ui5-data-repeat.js",
      "properties": [
        {
          "name": "deleteIcon",
          "type": "String",
          "description": "Set the delete icon to enable deleting of a repeated element.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 19
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "undefined"
        },
        {
          "name": "repeatedComponent",
          "type": "string | null | undefined",
          "description": "repeated-component to be used for the items.\nThe component must support ƒ-bind-data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 2
            },
            "end": {
              "line": 165,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {}
          }
        },
        {
          "name": "identityPath",
          "type": "string | null | undefined",
          "description": "*OPTIONAL*\nIdentity path of a single item.\nUse this if you have a field which identifies the item.\n\nIf you do not set the identity-path, the index will be used.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 64
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "focusOnCreate",
          "type": "boolean | null | undefined",
          "description": "set this attribute to set the focus to the created item after calling add().",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 68
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "disables the add and delete method, note that the nodes from the model are not updated so the repeated elements\nare still editable. Prefer the usage of specs, metas or fat.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 91,
              "column": 48
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "onFnaRepeatedFieldChanged",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 55,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 60,
              "column": 2
            },
            "end": {
              "line": 62,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "createAttribute",
          "description": "Create a attribute for map<string,type> types\ncreate a field in a FieldNode, this is useful when using map<string,something>\nset the value option to init with values",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 101,
              "column": 2
            },
            "end": {
              "line": 113,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options",
              "description": "{\"fieldName\":\"name\",\"type\":\"string\", \"spec\":{..}}  spec is optional"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "createAttributeByString",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 2
            },
            "end": {
              "line": 117,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldname"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_checkSize",
          "description": "hide the element if array is empty",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 2
            },
            "end": {
              "line": 178,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "add",
          "description": "Adds a repeated item",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 2
            },
            "end": {
              "line": 193,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "addType",
          "description": "Adds a repeated item with type",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 199,
              "column": 2
            },
            "end": {
              "line": 203,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "type"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 209,
              "column": 2
            },
            "end": {
              "line": 212,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-repeat",
          "description": ""
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 38,
          "column": 7
        },
        "end": {
          "line": 248,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataRepeat",
      "attributes": [
        {
          "name": "repeated-component",
          "description": "repeated-component to be used for the items.\nThe component must support ƒ-bind-data",
          "sourceRange": {
            "start": {
              "line": 119,
              "column": 2
            },
            "end": {
              "line": 165,
              "column": 3
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "identity-path",
          "description": "*OPTIONAL*\nIdentity path of a single item.\nUse this if you have a field which identifies the item.\n\nIf you do not set the identity-path, the index will be used.",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 64
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "focus-on-create",
          "description": "set this attribute to set the focus to the created item after calling add().",
          "sourceRange": {
            "start": {
              "line": 86,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 68
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "disables the add and delete method, note that the nodes from the model are not updated so the repeated elements\nare still editable. Prefer the usage of specs, metas or fat.",
          "sourceRange": {
            "start": {
              "line": 91,
              "column": 6
            },
            "end": {
              "line": 91,
              "column": 48
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-repeat",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-ui5-data-segmented-button`\nThe furo-ui5-data-segmented-button component represents a drop-down list. The items inside define the available\noptions by using the furo-ui5-data-segmented-button component.\n\n```\n<furo-ui5-data-segmented-button\n   ƒ-bind-data=\"--daoPerson(*.field_with_meta_options)\">\n</furo-ui5-data-segmented-button>\n```\n```\n<furo-ui5-data-segmented-button\n   ƒ-bind-data=\"--daoPerson(*.field)\">\n     <ui5-toggle-button pressed>Option A</ui5-toggle-button>\n     <ui5-toggle-button>Option B</ui5-toggle-button>\n</furo-ui5-data-segmented-button>\n```",
      "summary": "segmented button",
      "path": "src/furo-ui5-data-segmented-button.js",
      "properties": [
        {
          "name": "_tagItemComponent",
          "type": "string",
          "description": "Inner component tag",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 46,
              "column": 4
            },
            "end": {
              "line": 46,
              "column": 26
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'ui5-toggle-button'"
        },
        {
          "name": "activeFieldBinding",
          "type": "boolean",
          "description": "Flag to indicate if a field is attached\nDefault: false",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 53,
              "column": 4
            },
            "end": {
              "line": 53,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "idFieldPath",
          "type": "string",
          "description": "Defines the field path that is used from the injected RepeaterNode to identify the option items.\nPoint-separated path to the field\nE.g. data.partner.ulid\ndefault: id",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 62,
              "column": 4
            },
            "end": {
              "line": 62,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'id'"
        },
        {
          "name": "displayFieldPath",
          "type": "string",
          "description": "Defines the field path that is used from the injected RepeaterNode to display the option items.\nPoint-separated path to the field\nE.g. data.partner.display_name\ndefault: display_name",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 4
            },
            "end": {
              "line": 71,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'display_name'"
        },
        {
          "name": "valueFieldPath",
          "type": "string",
          "description": "Defines the field path that is used to update the bound component if the user has selected an option.\nPoint-separated path to the field\nMust be set if a data binding is specified.\ndefault: id",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 4
            },
            "end": {
              "line": 80,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'id'"
        },
        {
          "name": "_optionList",
          "type": "Array.<*>",
          "description": "Internal RepeaterNode\nDefines the ui5-select options.\nNote: Only one selected option is allowed. If more than one option is defined as selected, the last one would be considered as the selected one.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 89,
              "column": 4
            },
            "end": {
              "line": 89,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "[]"
        }
      ],
      "methods": [
        {
          "name": "bindData",
          "description": "overwrite bindData of FieldNodeAdapter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 130,
              "column": 2
            },
            "end": {
              "line": 133,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "bindOptions",
          "description": "Here a RepeaterNode can be connected to the component as an option list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 139,
              "column": 2
            },
            "end": {
              "line": 160,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "repeaterNode"
            }
          ]
        },
        {
          "name": "connectedCallback",
          "description": "connectedCallback() method is called when an element is added to the DOM.\nwebcomponent lifecycle event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 167,
              "column": 2
            },
            "end": {
              "line": 186,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.\nthose attributes can be set. `readonly`,`disabled`, `value-field-path`, `display-field-path`\nUse this after manual or scripted update of the attributes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 193,
              "column": 2
            },
            "end": {
              "line": 200,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldValueChanged",
          "description": "overwrite onFnaFieldValueChanged",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 223,
              "column": 2
            },
            "end": {
              "line": 241,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaOptionsChanged",
          "description": "Overwrite onFnaOptionsChanged\nNotifies when the options for the field is changed or set.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 2
            },
            "end": {
              "line": 253,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "selectOptionById",
          "description": "Selects an option by id",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 259,
              "column": 2
            },
            "end": {
              "line": 281,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ]
        },
        {
          "name": "_updateFNA",
          "description": "Handler function for the select value changes.\nThis is done to be able to remove the event-listeners as a protection for multiple calls",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 300,
              "column": 2
            },
            "end": {
              "line": 380,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "((function (): void) | *)"
          }
        },
        {
          "name": "_updateOptions",
          "description": "Maps and updates array of option",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 387,
              "column": 2
            },
            "end": {
              "line": 467,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "list"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [
        {
          "name": "getValueByPath",
          "description": "Let you get an attribute value by path",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 290,
              "column": 2
            },
            "end": {
              "line": 292,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            },
            {
              "name": "path"
            }
          ]
        }
      ],
      "demos": [
        {
          "url": "demo-furo-ui5-data-segmented-button",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 37,
          "column": 7
        },
        "end": {
          "line": 468,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataSegmentedButton",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-segmented-button",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "this is a helper component to send `tablerow-selected` event by clicking the row or pressing the enter on the row.",
      "summary": "",
      "path": "src/lib/furo-ui5-table-row.js",
      "properties": [],
      "methods": [
        {
          "name": "focus",
          "description": "focus this row",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 49,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_select",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 62,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_arrowDownPressed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 2
            },
            "end": {
              "line": 78,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "event"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_arrowUpPressed",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 2
            },
            "end": {
              "line": 92,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 5,
          "column": 7
        },
        "end": {
          "line": 93,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "TableRow.default",
      "name": "FuroUi5TableRow",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-table-row"
    },
    {
      "description": "`furo-ui5-data-table` display entities in a ui5-table\n\n<furo-ui5-data-table\n no-data-text=\"No data available.\"\n ƒ-bind-data=\"--dao(*.entities)\"\n columns=\"data.id|min800, data.display_name|fix200, data.cost_limit, data.start\"\n></furo-ui5-data-table>",
      "summary": "",
      "path": "src/furo-ui5-data-table.js",
      "properties": [
        {
          "name": "context",
          "type": "string | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "columns",
          "type": "string | null | undefined",
          "description": "list of field-paths which should be as columns displayed\ncomma separated list of field's path. e.g. data.id, data.display|min800 , here `min800` represents the the minimum table width required to display this column. By default it is always displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 6
            },
            "end": {
              "line": 445,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "headers",
          "type": "string | null | undefined",
          "description": "list of headers of the columns. if this header is not defined. the datatable will use the labels of cloumns as the headers.\ncomma separated list of markdown string.\ne.g.\n- id --:|min800,  name :-:|min400, here `|min800` represents the the minimum table width required to display this column in pixel.\n- id --:|fix120,  name :-:|fix120, here `|fix120` represents a fixed table cell width in pixel.\nBy default the column is always displayed.\n\nDefault position of header is left-justified.\n\nSupported variant:\nright-justified: `--:` , center-justified: `:-:`",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 459,
              "column": 6
            },
            "end": {
              "line": 462,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "noDataText",
          "type": "string | null | undefined",
          "description": "the text which can be showed when there is no data in table.\nstring",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 467,
              "column": 6
            },
            "end": {
              "line": 470,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "stickyColumnHeader",
          "type": "boolean | null | undefined",
          "description": "define the header is sticky or not",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 477,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "popinFields",
          "type": "string | null | undefined",
          "description": "define the list of popin fields\ncomma separated list of field's path. e.g data.id, data.display_name",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 482,
              "column": 6
            },
            "end": {
              "line": 485,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "bindData",
          "description": "bind a repeated data",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 160,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "data"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focus",
          "description": "focus on the header of the table",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 165,
              "column": 2
            },
            "end": {
              "line": 178,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focusLast",
          "description": "focus the first row",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 183,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "focusFirst",
          "description": "focus the last row",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 190,
              "column": 2
            },
            "end": {
              "line": 192,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_init",
          "description": "init data table",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 198,
              "column": 2
            },
            "end": {
              "line": 240,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_bindColumnDataField",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 247,
              "column": 2
            },
            "end": {
              "line": 275,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldPath"
            },
            {
              "name": "index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_bindColumnTmplField",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 2
            },
            "end": {
              "line": 303,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldPath"
            },
            {
              "name": "index"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_parseWidth",
          "description": "eslint-disable-next-line class-methods-use-this",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 312,
              "column": 2
            },
            "end": {
              "line": 328,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "w"
            }
          ]
        },
        {
          "name": "_parsePosition",
          "description": "eslint-disable-next-line class-methods-use-this",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 337,
              "column": 2
            },
            "end": {
              "line": 355,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "t"
            }
          ]
        },
        {
          "name": "_getSpecFieldFromPath",
          "description": "eslint-disable-next-line consistent-return",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 365,
              "column": 2
            },
            "end": {
              "line": 393,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field"
            },
            {
              "name": "path"
            }
          ]
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 493,
              "column": 2
            },
            "end": {
              "line": 515,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-table",
          "description": "Basic usage"
        },
        {
          "url": "demo-furo-ui5-data-table-tmpl",
          "description": "Usage of Column Templates"
        },
        {
          "url": "demo-furo-ui5-data-table-repeats",
          "description": "Usage with Repeats"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 102,
          "column": 7
        },
        "end": {
          "line": 516,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataTable",
      "attributes": [
        {
          "name": "context",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 435,
              "column": 6
            },
            "end": {
              "line": 437,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "columns",
          "description": "list of field-paths which should be as columns displayed\ncomma separated list of field's path. e.g. data.id, data.display|min800 , here `min800` represents the the minimum table width required to display this column. By default it is always displayed.",
          "sourceRange": {
            "start": {
              "line": 442,
              "column": 6
            },
            "end": {
              "line": 445,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "headers",
          "description": "list of headers of the columns. if this header is not defined. the datatable will use the labels of cloumns as the headers.\ncomma separated list of markdown string.\ne.g.\n- id --:|min800,  name :-:|min400, here `|min800` represents the the minimum table width required to display this column in pixel.\n- id --:|fix120,  name :-:|fix120, here `|fix120` represents a fixed table cell width in pixel.\nBy default the column is always displayed.\n\nDefault position of header is left-justified.\n\nSupported variant:\nright-justified: `--:` , center-justified: `:-:`",
          "sourceRange": {
            "start": {
              "line": 459,
              "column": 6
            },
            "end": {
              "line": 462,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "no-data-text",
          "description": "the text which can be showed when there is no data in table.\nstring",
          "sourceRange": {
            "start": {
              "line": 467,
              "column": 6
            },
            "end": {
              "line": 470,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "sticky-column-header",
          "description": "define the header is sticky or not",
          "sourceRange": {
            "start": {
              "line": 474,
              "column": 6
            },
            "end": {
              "line": 477,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "popin-fields",
          "description": "define the list of popin fields\ncomma separated list of field's path. e.g data.id, data.display_name",
          "sourceRange": {
            "start": {
              "line": 482,
              "column": 6
            },
            "end": {
              "line": 485,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-table"
    },
    {
      "description": "`furo-ui5-data-text-input-labeled`\nThe furo-ui5-data-text-input-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled input field",
      "path": "src/furo-ui5-data-text-input-labeled.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-text-input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "Boolean",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "Boolean",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user and\nappears in disabled state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "Boolean",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "focus",
          "description": "Focuses the underlying ui5 input element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 33,
              "column": 2
            },
            "end": {
              "line": 35,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options",
              "type": "Object",
              "description": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 2
            },
            "end": {
              "line": 44,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Orchestrates the data field connection to the inside",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 2
            },
            "end": {
              "line": 98,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 104,
              "column": 2
            },
            "end": {
              "line": 123,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-text-input-labeled",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 23,
          "column": 7
        },
        "end": {
          "line": 124,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataTextInputLabeled",
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-text-input",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 6
            },
            "end": {
              "line": 51,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 58,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Boolean"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user and\nappears in disabled state.",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Boolean"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 73,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Boolean"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-text-input-labeled",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "The 'furo-ui5-data-textarea-input' component allows the user to enter and edit texts with data binding.\n\nIt supports all features from the [SAP ui5 Input element](https://sap.github.io/ui5-webcomponents/playground/components/Input/).\n\nYou can bind any `string` type, like `furo.fat.String` type or the `google.protobuf.StringValue` type.\n\n```html\n <furo-ui5-data-textarea-input\n    ƒ-bind-data=\"--daoCountry(*.data.name)\"\n ></furo-ui5-data-textarea-input>\n```\n\n### Specificity\n1. Attributes which are set in the html source will have the highest specificity and will never get overwritten by metas or fat.\n2. Attributes set in meta will have the lowest specificity and will be overwritten by attributes from fat.\n\n** meta \t<  fat \t< html \t**\n\n## supported FAT attributes\n - **\"readonly\":\"true\"** set the element to readonly\n - **\"required\":\"true\"** set the element to required\n - **\"disabled\":\"true\"** set the element to disabled\n - **\"placeholder\":\"string\"** set the placeholder for the element\n - **\"rows\":\"number\"** set the number of rows.\n - **\"growing\":\"true\"** Enables the ui5-textarea to automatically grow and shrink dynamically with its content.\n - **\"show-exceeded-text\":\"true\"** if set to true. the characters exceeding the maxlength value are selected on paste and the counter below the ui5-textarea displays their number. If set to false, the user is not allowed to enter more characters than what is set in the maxlength property.\n - **\"growing-max-lines\":\"number\"** Defines the maximum number of lines that the Web Component can grow.\n - **\"max\":\"number\"** set the maximum number of characters available in the input field.\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n- **placeholder:\"some string\"** set the placeholder for the element\n- **max:\"number\"** set the maximum number of characters available in the input field.\n\nThe constraint **required** will mark the element as required\n\n## Methods\n**bind-data(fieldNode)**\nBind a entity field. You can use the entity even when no data was received.\n\nWhen you use @-object-ready from a furo-data-object which emits a EntityNode, just bind the field with --entity(*.fields.fieldname)",
      "summary": "data textarea input field",
      "path": "src/furo-ui5-data-textarea-input.js",
      "properties": [
        {
          "name": "nativeInputAttributes",
          "type": "?",
          "description": " eslint-disable-next-line class-methods-use-this",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 143,
              "column": 2
            },
            "end": {
              "line": 145,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        },
        {
          "name": "valueStateMessage",
          "type": "(* | {})",
          "description": "overwrite to fix error",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 329,
              "column": 2
            },
            "end": {
              "line": 331,
              "column": 3
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": true
            }
          }
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "connectedCallback() method is called when an element is added to the DOM.\nwebcomponent lifecycle event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 120,
              "column": 2
            },
            "end": {
              "line": 136,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.\nthose attributes can be set. `value-state`, `value-state-message`,  `placeholder`, `required`,`readonly`,`disabled`\nUse this after manual or scripted update of the attributes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 2
            },
            "end": {
              "line": 161,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateFNA",
          "description": "Handler function for the input value changes.\nThis is done to be able to remove the event-listeners as a protection for multiple calls",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 169,
              "column": 2
            },
            "end": {
              "line": 202,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "((function (): void) | *)"
          }
        },
        {
          "name": "_updateLabelsFromFat",
          "description": "labels are map <string,bool>, we handle every boolean attribute with the labels",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 210,
              "column": 2
            },
            "end": {
              "line": 244,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatLabels"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateAttributesFromFat",
          "description": "sync input attributes according to fat attributes",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 250,
              "column": 2
            },
            "end": {
              "line": 322,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatAttributes"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldValueChanged",
          "description": "overwrite onFnaFieldValueChanged",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 338,
              "column": 2
            },
            "end": {
              "line": 351,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaPlaceholderChanged",
          "description": "overwrite onFnaPlaceholderChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 358,
              "column": 2
            },
            "end": {
              "line": 366,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "placeholder"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 373,
              "column": 2
            },
            "end": {
              "line": 381,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaConstraintsChanged",
          "description": "overwrite onFnaConstraintsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 388,
              "column": 2
            },
            "end": {
              "line": 406,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "constraints"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "overwrite onFnaFieldNodeBecameInvalid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 413,
              "column": 2
            },
            "end": {
              "line": 418,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "overwrite onFnaFieldNodeBecameValid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 424,
              "column": 2
            },
            "end": {
              "line": 426,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValueStateMessage",
          "description": "update the value state and the value state message on demand",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 435,
              "column": 2
            },
            "end": {
              "line": 439,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueState"
            },
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetValueStateMessage",
          "description": "reset to previous value state",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 445,
              "column": 2
            },
            "end": {
              "line": 447,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-textarea-input",
          "description": "Basic usage (scalar , fat, wrapper values)"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 56,
          "column": 7
        },
        "end": {
          "line": 448,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataTextareaInput",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-textarea-input"
    },
    {
      "description": "`furo-ui5-data-textarea-input-labeled`\nThe furo-ui5-data-textarea-input-labeled is a composition to easily use a complete input field with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled textarea field",
      "path": "src/furo-ui5-data-textarea-input-labeled.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-textarea-input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 72,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "showExceededText",
          "type": "boolean | null | undefined",
          "description": "Determines whether the characters exceeding the maximum allowed character count are visible in the furo-ui5-data-textarea-input.\n\nIf set to false, the user is not allowed to enter more characters than what is set in the maxlength property.\nIf set to true the characters exceeding the maxlength value are selected on paste and the counter below\nthe furo-ui5-data-textarea-input displays their number.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "rows",
          "type": "number | null | undefined",
          "description": "Defines the number of visible text lines for the component.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "growingMaxLines",
          "type": "number | null | undefined",
          "description": "Defines the maximum number of lines that the Web Component can grow.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "growing",
          "type": "boolean | null | undefined",
          "description": "Enables the furo-ui5-data-textarea to automatically grow and shrink dynamically with its content.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 6
            },
            "end": {
              "line": 102,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "focus",
          "description": "Focuses the underlying ui5 input element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options",
              "type": "Object",
              "description": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 47,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Orchestrates the data field connection to the inside",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 125,
              "column": 2
            },
            "end": {
              "line": 127,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 133,
              "column": 2
            },
            "end": {
              "line": 154,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-textarea-input-labeled",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 18,
          "column": 7
        },
        "end": {
          "line": 155,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataTextareaInputLabeled",
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-textarea-input",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "sourceRange": {
            "start": {
              "line": 58,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user.",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 6
            },
            "end": {
              "line": 72,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "show-exceeded-text",
          "description": "Determines whether the characters exceeding the maximum allowed character count are visible in the furo-ui5-data-textarea-input.\n\nIf set to false, the user is not allowed to enter more characters than what is set in the maxlength property.\nIf set to true the characters exceeding the maxlength value are selected on paste and the counter below\nthe furo-ui5-data-textarea-input displays their number.",
          "sourceRange": {
            "start": {
              "line": 80,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "rows",
          "description": "Defines the number of visible text lines for the component.",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "growing-max-lines",
          "description": "Defines the maximum number of lines that the Web Component can grow.",
          "sourceRange": {
            "start": {
              "line": 93,
              "column": 6
            },
            "end": {
              "line": 96,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "growing",
          "description": "Enables the furo-ui5-data-textarea to automatically grow and shrink dynamically with its content.",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 6
            },
            "end": {
              "line": 102,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-textarea-input-labeled",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "The 'furo-ui5-data-toggle-button' component allows the user to switch true and false for Bool with data binding.\n\nIt supports all features from the [SAP ui5 toggleButton element](https://sap.github.io/ui5-webcomponents/playground/components/ToggleButton/).\n\nYou can bind  `bool` type, `furo.fat.Bool` type or the `google.wrapper.BoolValue`  type.\n\n * ```html\n <furo-ui5-data-toggle-button\n    ƒ-bind-data=\"--daoCountry(*.data.classified_as_risk_area)\"\n ></furo-ui5-data-toggle-button>\n```\n\n### Specificity\n1. Attributes which are set in the html source will have the highest specificity and will never get overwritten by metas or fat.\n2. Attributes set in meta will have the lowest specificity and will be overwritten by attributes from fat.\n\n| meta \t| fat \t| html \t|\n|------\t|-----\t|------\t|\n| 1    \t| 10  \t| 100  \t|\n\n\n## supported FAT attributes\n - **\"readonly\":\"true\"** set the element to readonly\n - **\"disabled\":\"true\"** set the element to disabled\n - **\"icon\":\"\"** set the icon\n - **\"design\":\"\"** set the design\n\n## supported meta and constraints\n- **readonly: true** , set the element to readonly\n\nThe constraint **required** will mark the element as required\n\n## Methods\n**bind-data(fieldNode)**\nBind a entity field. You can use the entity even when no data was received.",
      "summary": "boolean toggle button",
      "path": "src/furo-ui5-data-toggle-button.js",
      "properties": [],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "connectedCallback() method is called when an element is added to the DOM.\nwebcomponent lifecycle event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 2
            },
            "end": {
              "line": 101,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 2
            },
            "end": {
              "line": 111,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateFNA",
          "description": "Handler function for the toggleButton changes.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 118,
              "column": 2
            },
            "end": {
              "line": 135,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "((function (): void) | *)"
          }
        },
        {
          "name": "onFnaFieldValueChanged",
          "description": "overwrite onFnaFieldValueChanged",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 141,
              "column": 2
            },
            "end": {
              "line": 150,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateLabelsFromFat",
          "description": "labels are map <string,bool>, we handle every boolean attribute with the labels",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 158,
              "column": 2
            },
            "end": {
              "line": 182,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatLabels"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateAttributesFromFat",
          "description": "sync input attributes according to fat attributes",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 2
            },
            "end": {
              "line": 227,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatAttributes"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "overwrite onFnaFieldNodeBecameInvalid function",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 2
            },
            "end": {
              "line": 234,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "overwrite onFnaFieldNodeBecameValid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 2
            },
            "end": {
              "line": 242,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setDesign",
          "description": "Updates the design",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 249,
              "column": 2
            },
            "end": {
              "line": 251,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "design"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetDesign",
          "description": "reset to previous value state",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 257,
              "column": 2
            },
            "end": {
              "line": 259,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaLabelChanged",
          "description": "overwrite onFnaLabelChanged function\nlabel is mapped to text",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 266,
              "column": 2
            },
            "end": {
              "line": 271,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "text"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 278,
              "column": 2
            },
            "end": {
              "line": 286,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-toggle-button",
          "description": "Basic usage (scalar , fat, wrapper values)"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 52,
          "column": 7
        },
        "end": {
          "line": 287,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataToggleButton",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-toggle-button"
    },
    {
      "description": "`furo-ui5-header-panel`\n A bindable **header** panel.\n\n **Info**: This component is intended to use as a header panel, if you need panels in your view, consider to use\n a ui5-panel directly. That is also the reason that the api does not match with ui5-panel.\n\n This component is a container which has a header and a content area and is used for grouping and displaying information.\n It can be collapsed to save space on the screen.",
      "summary": "A bindable header panel",
      "path": "src/furo-ui5-header-panel.js",
      "properties": [
        {
          "name": "headerText",
          "type": "string | null | undefined",
          "description": "Header Text",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 60
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "secondaryText",
          "type": "string | null | undefined",
          "description": "sub title",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 66
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "icon",
          "type": "string | null | undefined",
          "description": "icon",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 69,
              "column": 47
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "iconSize",
          "type": "string | null | undefined",
          "description": "size of the icon. Available options are: XS S M L XL. Default is S.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 56
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "collapsed",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 49
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "bindHeaderText",
          "description": "Bind any **scalar** field to set the title of the panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 94,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindSecondaryText",
          "description": "Bind any **scalar** field to set the secondaryText of the panel.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 100,
              "column": 2
            },
            "end": {
              "line": 110,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindNavNode",
          "description": "bind a furo.navigation.Navigationnode field",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 116,
              "column": 2
            },
            "end": {
              "line": 129,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindIcon",
          "description": "Bind any **scalar** field to set the title of the panel.\nDo not forget to import the icon you will use in your component.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 2
            },
            "end": {
              "line": 146,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "toggleCollapse",
          "description": "toggles the collapse state",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 151,
              "column": 2
            },
            "end": {
              "line": 153,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setNavNodeSignatureValues",
          "description": "update attributes according to the value of furo.navigation.Navigationnode signature",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 2
            },
            "end": {
              "line": 170,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 2
            },
            "end": {
              "line": 216,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 2
            },
            "end": {
              "line": 384,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-header-panel",
          "description": "Without data binding"
        },
        {
          "url": "demo-furo-ui5-header-panel-binding",
          "description": "With data binding"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 40,
          "column": 7
        },
        "end": {
          "line": 385,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5HeaderPanel",
      "attributes": [
        {
          "name": "header-text",
          "description": "Header Text",
          "sourceRange": {
            "start": {
              "line": 59,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 60
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "secondary-text",
          "description": "sub title",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 6
            },
            "end": {
              "line": 64,
              "column": 66
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon",
          "description": "icon",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 69,
              "column": 47
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "icon-size",
          "description": "size of the icon. Available options are: XS S M L XL. Default is S.",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 56
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "collapsed",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 6
            },
            "end": {
              "line": 76,
              "column": 49
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-header-panel",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-ui5-message-strip`\n\nThe furo-ui5-message-strip component enables the embedding of app-related messages. It displays 4 types of messages,\neach with corresponding semantic color and icon: Information, Positive, Warning and Negative.\nEach message can have a Close button, so that it can be removed from the UI, if needed.\n\nIt should be used together witch furo-ui5-message-strip-display. You can place those two components into different places.\nBest place the furo-ui5-message-strip-display on the main site. then you only need one furo-ui5-message-strip-display. It can work with n furo-ui5-message-strip.\nhttps://experience.sap.com/fiori-design-web/message-strip/\n\n ```\n <furo-ui5-message-strip-display></furo-ui5-message-strip-display>\n <furo-ui5-message-strip ƒ-show-information=\"--wire\"></furo-ui5-message-strip>\n ```",
      "summary": "furo ui5 message strip",
      "path": "src/furo-ui5-message-strip.js",
      "properties": [
        {
          "name": "noCloseButton",
          "type": "boolean | null | undefined",
          "description": "Defines whether the MessageStrip renders close icon.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noIcon",
          "type": "boolean | null | undefined",
          "description": "Defines whether the MessageStrip will show an icon in the beginning. You can directly provide an icon with the icon slot. Otherwise, the default icon for the type will be used.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "size",
          "type": "string | null | undefined",
          "description": "define the width of ui5-messagestrip. e.g. 200px",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "message",
          "type": "string | null | undefined",
          "description": "the text message of the message strip",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_requestDisplay",
          "description": "request display message strip.\ntrigger `open-furo-ui5-message-strip-requested` event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 2
            },
            "end": {
              "line": 91,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_close",
          "description": "the event `message-strip-closed` will be sent with payload when the MessageStrip is closed",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 2
            },
            "end": {
              "line": 100,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "noCloseButton",
          "description": "Defines whether the MessageStrip renders close icon.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 106,
              "column": 2
            },
            "end": {
              "line": 108,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "b"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "noIcon",
          "description": "Defines whether the MessageStrip will show an icon in the beginning.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 116,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "b"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "show",
          "description": "Compatibility function to avoid breaking change",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 123,
              "column": 2
            },
            "end": {
              "line": 129,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "msg"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "showInformation",
          "description": "shows an information message\nif the param msg is empty, the attribute message is used.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 136,
              "column": 2
            },
            "end": {
              "line": 145,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "msg"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "showSuccess",
          "description": "shows a success message\nif the param msg is empty, the attribute message is used.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 152,
              "column": 2
            },
            "end": {
              "line": 161,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "msg"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "showWarning",
          "description": "shows a warning message\nif the param msg is empty, the attribute message is used.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 2
            },
            "end": {
              "line": 177,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "msg"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "showError",
          "description": "shows an error message\nif the param msg is empty, the attribute message is used.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 184,
              "column": 2
            },
            "end": {
              "line": 193,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "msg"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "showGrpcLocalizedMessage",
          "description": "shows a google rpc status message (message LocalizedMessage)\nProvides a localized error message that is safe to return to the user\nwhich can be attached to an RPC error.\n\nRendering rules:\n- Every @type LocalizedMessage inside of details[] is displayed with a line break in the message strip.\n- One message strip element is created per RPC status.\n\nExample rpc status:\n\n```json\n{\n \"code\":3,\n \"message\":\"Missing mandatory values\",\n \"details\":[\n   {\"@type\":\"type.googleapis.com/google.rpc.LocalizedMessage\",\"locale\":\"en-GB\",\"message\":\"Please register all the mandatory values.\"},\n   {\"@type\":\"type.googleapis.com/google.rpc.LocalizedMessage\",\"locale\":\"en-GB\",\"message\":\"If you need help completing the data, call 0800-HELP-FURO.\"},\n   {\"@type\":\"type.googleapis.com/google.rpc.BadRequest\",\"field_violations\":[\n     {\"field\":\"short_form\",\"description\":\"The country designation (short form) should be set.\"},\n     {\"field\":\"id\",\"description\":\"The id should be ISO Alpha-2 code as described in the ISO 3166 international standard\"},\n     {\"field\":\"area\",\"description\":\"Please set a value for the field area.\"}]\n   }\n  ]}\n```\n\nExample message strip display:\n```\n| X  Please register all the mandatory values.\n|    If you need help completing the data, call 0800-HELP-FURO.\n```\n\nhttps://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto\nhttps://github.com/googleapis/googleapis/blob/master/google/rpc/error_details.proto",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 232,
              "column": 2
            },
            "end": {
              "line": 264,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rpcStatus"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "parseGrpcStatus",
          "description": "Deprecated function! Use showGrpcLocalizedMessage\nparse grpc status object. the message in grpc status will be used as the content massage",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 272,
              "column": 2
            },
            "end": {
              "line": 276,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "rpcStatus"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-message-strip-display",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 27,
          "column": 7
        },
        "end": {
          "line": 287,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5MessageStrip",
      "attributes": [
        {
          "name": "no-close-button",
          "description": "Defines whether the MessageStrip renders close icon.",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-icon",
          "description": "Defines whether the MessageStrip will show an icon in the beginning. You can directly provide an icon with the icon slot. Otherwise, the default icon for the type will be used.",
          "sourceRange": {
            "start": {
              "line": 57,
              "column": 6
            },
            "end": {
              "line": 60,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "size",
          "description": "define the width of ui5-messagestrip. e.g. 200px",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 6
            },
            "end": {
              "line": 67,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "message",
          "description": "the text message of the message strip",
          "sourceRange": {
            "start": {
              "line": 72,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-message-strip"
    },
    {
      "description": "`furo-ui5-message-strip-display`\n\n The furo-ui5-message-strip-display is the render component for the furo-ui5-message-strip component.\n The display component can be controlled by several furo-ui5-message-strip components.\n\n```\n <furo-ui5-message-strip-display></furo-ui5-message-strip-display>\n\n <furo-ui5-message-strip ƒ-show-information=\"--wire\"></furo-ui5-message-strip>\n <furo-ui5-message-strip ƒ-show-warning=\"--wire\" message=\"Static warning message\"></furo-ui5-message-strip>\n ```",
      "summary": "furo ui5 message strip",
      "path": "src/furo-ui5-message-strip-display.js",
      "properties": [],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 59,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearAll",
          "description": "Removes all strips",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 64,
              "column": 2
            },
            "end": {
              "line": 68,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "show",
          "description": "show notification list item.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 74,
              "column": 2
            },
            "end": {
              "line": 100,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "source"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-message-strip-display",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 25,
          "column": 7
        },
        "end": {
          "line": 122,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5MessageStripDisplay",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-message-strip-display"
    },
    {
      "description": "`furo-ui5-notification`\nLit element\n\n furo-ui5-notification should be used together witch furo-ui5-notification-list-display or furo-ui5-notification-group-display. you can place those two components into different places.\n best place the furo-ui5-notification-list(or group)-display on the main site. then you only need one furo-ui5-notification-list(or group)-display. it can work with n furo-ui5-notification.",
      "summary": "a banner",
      "path": "src/furo-ui5-notification.js",
      "properties": [
        {
          "name": "text",
          "type": "string | null | undefined",
          "description": "banner text content. Use *word* to mark as strong. Use \\n to insert a line break.\n\n*HTML tags will be stripped out.*",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 6
            },
            "end": {
              "line": 37,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "payload",
          "type": "Object | null | undefined",
          "description": "payload. can be a GRPC error or a notification message collection.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "_type",
          "type": "string | null | undefined",
          "description": "type of the notification. `grpc` or `notification`",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 47,
              "column": 6
            },
            "end": {
              "line": 47,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_requestListDisplay",
          "description": "request to display the notifications",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 55,
              "column": 2
            },
            "end": {
              "line": 62,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_requestGroupDisplay",
          "description": "request to display the notifications in group",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 68,
              "column": 2
            },
            "end": {
              "line": 75,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_close",
          "description": "trigger event when notification is closed",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 83,
              "column": 2
            },
            "end": {
              "line": 87,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_customAction",
          "description": "trigger events when notification actions are triggered",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 96,
              "column": 2
            },
            "end": {
              "line": 109,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "command"
            },
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "parseGrpcStatus",
          "description": "inject a grpc status object\nparse grpc status object and set the label according to the LocalizedMessage in status.\nhttps://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto .",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 2
            },
            "end": {
              "line": 121,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "status"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "injectNotificationCollection",
          "description": "inject an array of notification messages.\nthe notification message should be an array of the following object signature:\n{\n \"id\": 1,\n \"display_name\": \"\",\n \"heading\": \"heading 1\",\n \"message_priority\": \"High\",\n \"category\": \"warning\",\n \"category_priority\": \"High\",\n \"actions\": [\n   {\n     \"icon\":\"accept\",\n     \"command\":\"accept\",\n     \"text\": \"accept\"\n   },\n   {\n     \"icon\":\"message-error\",\n     \"command\":\"reject\",\n     \"text\": \"Reject\"\n   }\n ],\n \"message\": \"Markdown | Less | Pretty\\n--- | --- | ---\\n*Still* | `renders` | **nicely**\\n1 | 2 | 3\"\n}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 2
            },
            "end": {
              "line": 153,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "c"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-notification-list-display",
          "description": "ui5 notification display demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 19,
          "column": 7
        },
        "end": {
          "line": 162,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroUi5Notification",
      "attributes": [
        {
          "name": "text",
          "description": "banner text content. Use *word* to mark as strong. Use \\n to insert a line break.\n\n*HTML tags will be stripped out.*",
          "sourceRange": {
            "start": {
              "line": 35,
              "column": 6
            },
            "end": {
              "line": 37,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "payload",
          "description": "payload. can be a GRPC error or a notification message collection.",
          "sourceRange": {
            "start": {
              "line": 41,
              "column": 6
            },
            "end": {
              "line": 43,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-notification"
    },
    {
      "description": "`furo-ui5-notification-group`\nLit element\n\n best place the furo-ui5-notification-group on the main site. then you only need one furo-ui5-notification-group.\n you can also use more furo-ui5-notification-group for special needs. but You have to be sure the furo-ui5-notification-group can receive the notification events.",
      "summary": "ui5 notification group display",
      "path": "src/furo-ui5-notification-group-display.js",
      "properties": [
        {
          "name": "headerText",
          "type": "string | null | undefined",
          "description": "the header text of the notification",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "target",
          "type": "Object | null | undefined",
          "description": "the target dom object, which sends the notification event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 197,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Object"
            }
          }
        },
        {
          "name": "collapsed",
          "type": "boolean | null | undefined",
          "description": "Defines if the group is collapsed or expanded.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "showCounter",
          "type": "boolean | null | undefined",
          "description": "Defines if the items counter would be displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 6
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "showClose",
          "type": "boolean | null | undefined",
          "description": "Defines if the close button would be displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 6
            },
            "end": {
              "line": 217,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 31,
              "column": 2
            },
            "end": {
              "line": 68,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_groupNotifications",
          "description": "group the notification messages\nthe notification message should be an array of the following object signature:\n{\n \"id\": 1,\n \"display_name\": \"\",\n \"heading\": \"heading 1\",\n \"message_priority\": \"High\",\n \"category\": \"warning\",  // this attribute will be also used as group heading\n \"category_priority\": \"High\",\n \"actions\": [\n   {\n     \"icon\":\"accept\",\n     \"command\":\"accept\",\n     \"text\": \"accept\"\n   },\n   {\n     \"icon\":\"message-error\",\n     \"command\":\"reject\",\n     \"text\": \"Reject\"\n   }\n ],\n \"message\": \"Markdown | Less | Pretty\\n--- | --- | ---\\n*Still* | `renders` | **nicely**\\n1 | 2 | 3\"\n}",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 98,
              "column": 2
            },
            "end": {
              "line": 109,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "c"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_show",
          "description": "show notification list item.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 2
            },
            "end": {
              "line": 171,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "groups"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "clearAll",
          "description": "clear all notifications",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 176,
              "column": 2
            },
            "end": {
              "line": 178,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 242,
              "column": 2
            },
            "end": {
              "line": 246,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-notification-group-display",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 21,
          "column": 7
        },
        "end": {
          "line": 247,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5NotificationGroupDisplay",
      "attributes": [
        {
          "name": "header-text",
          "description": "the header text of the notification",
          "sourceRange": {
            "start": {
              "line": 188,
              "column": 6
            },
            "end": {
              "line": 191,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "target",
          "description": "the target dom object, which sends the notification event",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 6
            },
            "end": {
              "line": 197,
              "column": 7
            }
          },
          "metadata": {},
          "type": "Object | null | undefined"
        },
        {
          "name": "collapsed",
          "description": "Defines if the group is collapsed or expanded.",
          "sourceRange": {
            "start": {
              "line": 201,
              "column": 6
            },
            "end": {
              "line": 203,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "show-counter",
          "description": "Defines if the items counter would be displayed.",
          "sourceRange": {
            "start": {
              "line": 207,
              "column": 6
            },
            "end": {
              "line": 210,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "show-close",
          "description": "Defines if the close button would be displayed.",
          "sourceRange": {
            "start": {
              "line": 214,
              "column": 6
            },
            "end": {
              "line": 217,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-notification-group-display"
    },
    {
      "description": "`furo-ui5-notification-list`\n Displays google.rpc.Status messages in a grouped list.\n https://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto.\n\n Best place the furo-ui5-notification-list on the main site. then you only need one furo-ui5-notification-list.\n you can also use more than one furo-ui5-notification-list for special needs.\n But you have to be sure the furo-ui5-notification-list can receive the notification events from furo-ui5-notification.",
      "summary": "ui5 notification list",
      "path": "src/furo-ui5-notification-list-display.js",
      "properties": [
        {
          "name": "headerText",
          "type": "string | null | undefined",
          "description": "the header text of the notification",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "showClose",
          "type": "boolean | null | undefined",
          "description": "Defines if the close button would be displayed.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "noDataText",
          "type": "string | null | undefined",
          "description": "Defines the text that is displayed when the list contains no items.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "groupTitleMessage",
          "type": "string | null | undefined",
          "description": "Defines the notification group element title for notifications of type\n\"type.googleapis.com/google.rpc.LocalizedMessage\"",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "groupTitleHelp",
          "type": "string | null | undefined",
          "description": "Defines the notification group element title for notifications of type\n\"type.googleapis.com/google.rpc.Help\"",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "groupTitleBadRequest",
          "type": "string | null | undefined",
          "description": "Defines the notification group element title for notifications of type\n\"type.googleapis.com/google.rpc.BadRequest\"",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 90,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 115,
              "column": 2
            },
            "end": {
              "line": 164,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "parseGrpcStatus",
          "description": "parse grpc status object and set the notification text according to the LocalizedMessage in status.\nhttps://github.com/googleapis/googleapis/blob/master/google/rpc/status.proto.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 171,
              "column": 2
            },
            "end": {
              "line": 212,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "d"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "parseNotificationMessage",
          "description": "parse notification message and set the ui5 notification properties like priority, actions, heading..\nthe notification message should be a furo.notification type:\n{\n \"id\": 1,\n \"display_name\": \"\",\n \"heading\": \"heading 1\",\n \"message_priority\": \"High\",\n \"category\": \"warning\",\n \"category_priority\": \"High\",\n \"actions\": [\n   {\n     \"icon\":\"accept\",\n     \"command\":\"accept\",\n     \"text\": \"accept\"\n   },\n   {\n     \"icon\":\"message-error\",\n     \"command\":\"reject\",\n     \"text\": \"Reject\"\n   }\n ],\n \"message\": \"Markdown | Less | Pretty\\n--- | --- | ---\\n*Still* | `renders` | **nicely**\\n1 | 2 | 3\"\n}",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 240,
              "column": 2
            },
            "end": {
              "line": 248,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_show",
          "description": "shows grpc status notifications\nimplemented types are:\n- Bad Request with Field Violations\n-",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 256,
              "column": 2
            },
            "end": {
              "line": 275,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_dispatchNotificationCounterUpdates",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 277,
              "column": 2
            },
            "end": {
              "line": 286,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "count"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_createLocalizedMessageElement",
          "description": "Creates notification items of type @type: \"type.googleapis.com/google.rpc.LocalizedMessage\"",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 293,
              "column": 2
            },
            "end": {
              "line": 323,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise.<unknown>"
          }
        },
        {
          "name": "_createHelpElements",
          "description": "Creates notification items of type @type: \"type.googleapis.com/google.rpc.Help\"",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 330,
              "column": 2
            },
            "end": {
              "line": 370,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise.<unknown>"
          }
        },
        {
          "name": "_createBadRequestElements",
          "description": "Creates notification items of type @type: \"type.googleapis.com/google.rpc.BadRequest\"",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 377,
              "column": 2
            },
            "end": {
              "line": 419,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "Promise.<unknown>"
          }
        },
        {
          "name": "clearAll",
          "description": "clear all notifications",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 424,
              "column": 2
            },
            "end": {
              "line": 428,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 434,
              "column": 2
            },
            "end": {
              "line": 442,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-notification-list-display",
          "description": "ui5 notification display demo"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 24,
          "column": 7
        },
        "end": {
          "line": 443,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5NotificationListDisplay",
      "attributes": [
        {
          "name": "header-text",
          "description": "the header text of the notification",
          "sourceRange": {
            "start": {
              "line": 49,
              "column": 6
            },
            "end": {
              "line": 52,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "show-close",
          "description": "Defines if the close button would be displayed.",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 6
            },
            "end": {
              "line": 59,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "no-data-text",
          "description": "Defines the text that is displayed when the list contains no items.",
          "sourceRange": {
            "start": {
              "line": 63,
              "column": 6
            },
            "end": {
              "line": 66,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "group-title-message",
          "description": "Defines the notification group element title for notifications of type\n\"type.googleapis.com/google.rpc.LocalizedMessage\"",
          "sourceRange": {
            "start": {
              "line": 71,
              "column": 6
            },
            "end": {
              "line": 74,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "group-title-help",
          "description": "Defines the notification group element title for notifications of type\n\"type.googleapis.com/google.rpc.Help\"",
          "sourceRange": {
            "start": {
              "line": 79,
              "column": 6
            },
            "end": {
              "line": 82,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "group-title-bad-request",
          "description": "Defines the notification group element title for notifications of type\n\"type.googleapis.com/google.rpc.BadRequest\"",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 90,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-notification-list-display"
    },
    {
      "description": "`furo-ui5-pagination-bar`\nthis pagination element loops the hts array and find out the pagination\ninformation like prev, next, first and last",
      "summary": "Pagination Bar",
      "path": "src/furo-ui5-pagination-bar.js",
      "properties": [
        {
          "name": "currentPage",
          "type": "number | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Number"
            }
          }
        },
        {
          "name": "first",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "prev",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "next",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "last",
          "type": "boolean | null | undefined",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "inject",
          "description": "init pagination attributes",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 97,
              "column": 2
            },
            "end": {
              "line": 133,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "hts"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_disableAll",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 135,
              "column": 2
            },
            "end": {
              "line": 140,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getCurrentPage",
          "description": "get current page number via self link: page=xx",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 147,
              "column": 2
            },
            "end": {
              "line": 157,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "href"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_FBPReady",
          "description": "",
          "privacy": "protected",
          "sourceRange": {
            "start": {
              "line": 159,
              "column": 2
            },
            "end": {
              "line": 199,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 205,
              "column": 2
            },
            "end": {
              "line": 245,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "TemplateResult"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-pagination-bar",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 36,
          "column": 7
        },
        "end": {
          "line": 246,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5PaginationBar",
      "attributes": [
        {
          "name": "current-page",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 75,
              "column": 6
            },
            "end": {
              "line": 77,
              "column": 7
            }
          },
          "metadata": {},
          "type": "number | null | undefined"
        },
        {
          "name": "first",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 78,
              "column": 6
            },
            "end": {
              "line": 80,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "prev",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 81,
              "column": 6
            },
            "end": {
              "line": 83,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "next",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 84,
              "column": 6
            },
            "end": {
              "line": 86,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "last",
          "description": "",
          "sourceRange": {
            "start": {
              "line": 87,
              "column": 6
            },
            "end": {
              "line": 89,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-pagination-bar",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-ui5-radiogroup`\nThe furo-ui5-radiogroup enables users to create a radio group with n size of furo-ui5-data-radio-buttons inside.\nUse the components if you want to combine several bool fields into one radiogroup.\nOnly one value can be true.",
      "summary": "radio group",
      "path": "src/furo-ui5-radiogroup.js",
      "properties": [],
      "methods": [
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 18,
              "column": 2
            },
            "end": {
              "line": 45,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 51,
              "column": 2
            },
            "end": {
              "line": 56,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-radio-button",
          "description": "Sample of radio group"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 13,
          "column": 7
        },
        "end": {
          "line": 57,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5Radiogroup",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-radiogroup",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "`furo-ui5-data-propertylist-display` allows the user to show repeated properties (furo.Property) in a readonly mode.\nFor all other types you can use furo-ui5-data-display.\n\nThe type information of the property is used for the display of the individual attributes.\nE.g.\n```\n[\n {\n   \"code\": \"c0a7f550-0fbe-4046-8fa9-60c86327b6b1\",\n   \"data\": {\n      \"@type\": \"type.googleapis.com/furo.StringProperty\",\n     \"data\": \"01032020\"\n   },\n   \"flags\": [],\n   \"display_name\": \"Vertragsbeginn\",\n   \"id\": \"246d79a0-0a15-43c5-b18f-ac8a4a449df1\",\n   \"meta\": {}\n }\n]\n```\n\nYou can bind the furo.Property type (single and repeated).\n\n```html\n <furo-ui5-data-propertylist-display\n    ƒ-bind-data=\"--daoCountry(*.data.additional_data)\"\n ></furo-ui5-data-propertylist-display>\n```",
      "summary": "",
      "path": "src/furo-ui5-data-propertylist-display.js",
      "properties": [],
      "methods": [
        {
          "name": "bindData",
          "description": "Binds a RepeaterNode of type furo.Property.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 63,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "boolean"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-display",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 38,
          "column": 7
        },
        "end": {
          "line": 64,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "LitElement",
      "name": "FuroUi5DataPropertylistDisplay",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-propertylist-display",
      "mixins": [
        "FBP"
      ]
    },
    {
      "description": "The furo-ui5-data-select component is used to create a drop-down list. The items inside the furo-ui5-data-select define\nthe available options by using the ui5-option component. Use the function bindOptions to bind a RepeaterNode as a option list.\n\n```\n<furo-ui5-data-select\n   ƒ-bind-data=\"--entity(*.data.description)\"\n   ƒ-bind-options=\"--collection(*.entities)\">\n</furo-ui5-data-select>\n```",
      "summary": "data select field",
      "path": "src/furo-ui5-data-select.js",
      "properties": [
        {
          "name": "activeFieldBinding",
          "type": "boolean",
          "description": "Flag to indicate if a field is attached\nDefault: false",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 34,
              "column": 4
            },
            "end": {
              "line": 34,
              "column": 27
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "false"
        },
        {
          "name": "idFieldPath",
          "type": "string",
          "description": "Defines the field path that is used from the injected RepeaterNode to identify the option items.\nPoint-separated path to the field\nE.g. data.partner.ulid\ndefault: id",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 43,
              "column": 4
            },
            "end": {
              "line": 43,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'id'"
        },
        {
          "name": "displayFieldPath",
          "type": "string",
          "description": "Defines the field path that is used from the injected RepeaterNode to display the option items.\nPoint-separated path to the field\nE.g. data.partner.display_name\ndefault: display_name",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 4
            },
            "end": {
              "line": 52,
              "column": 25
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'display_name'"
        },
        {
          "name": "valueFieldPath",
          "type": "string",
          "description": "Defines the field path that is used to update the bound component if the user has selected an option.\nPoint-separated path to the field\nMust be set if a data binding is specified.\ndefault: id",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 61,
              "column": 4
            },
            "end": {
              "line": 61,
              "column": 23
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "'id'"
        },
        {
          "name": "_optionList",
          "type": "Array.<*>",
          "description": "Internal RepeaterNode\nDefines the ui5-select options.\nNote: Only one selected option is allowed. If more than one option is defined as selected, the last one would be considered as the selected one.",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 4
            },
            "end": {
              "line": 70,
              "column": 20
            }
          },
          "metadata": {
            "polymer": {
              "readOnly": false
            }
          },
          "defaultValue": "[]"
        }
      ],
      "methods": [
        {
          "name": "connectedCallback",
          "description": "connectedCallback() method is called when an element is added to the DOM.\nwebcomponent lifecycle event",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 114,
              "column": 2
            },
            "end": {
              "line": 142,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "readAttributes",
          "description": "Reads the attributes which are set on the component dom.\nthose attributes can be set. `value-state`, `required`,`readonly`,`disabled`, `value-field-path`, `display-field-path`\nUse this after manual or scripted update of the attributes.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 149,
              "column": 2
            },
            "end": {
              "line": 160,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindOptions",
          "description": "Here a RepeaterNode can be connected to the component as an option list.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 166,
              "column": 2
            },
            "end": {
              "line": 185,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "repeaterNode"
            }
          ]
        },
        {
          "name": "bindData",
          "description": "overwrite bindData of FieldNodeAdapter",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 192,
              "column": 2
            },
            "end": {
              "line": 195,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "boolean"
          }
        },
        {
          "name": "onFnaFieldValueChanged",
          "description": "overwrite onFnaFieldValueChanged",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 202,
              "column": 2
            },
            "end": {
              "line": 211,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "val"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaReadonlyChanged",
          "description": "overwrite onFnaReadonlyChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 218,
              "column": 2
            },
            "end": {
              "line": 227,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "readonly"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaOptionsChanged",
          "description": "overwrite onFnaOptionsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 234,
              "column": 2
            },
            "end": {
              "line": 238,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaConstraintsChanged",
          "description": "overwrite onFnaConstraintsChanged function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 245,
              "column": 2
            },
            "end": {
              "line": 256,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "constraints"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameInvalid",
          "description": "overwrite onFnaFieldNodeBecameInvalid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 263,
              "column": 2
            },
            "end": {
              "line": 268,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "validity"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "onFnaFieldNodeBecameValid",
          "description": "overwrite onFnaFieldNodeBecameValid function",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 274,
              "column": 2
            },
            "end": {
              "line": 276,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "selectOptionById",
          "description": "Selects an option by id",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 282,
              "column": 2
            },
            "end": {
              "line": 298,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "id"
            }
          ]
        },
        {
          "name": "_updateLabelsFromFat",
          "description": "labels are map <string,bool>, we handle every boolean attribute with the labels",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 306,
              "column": 2
            },
            "end": {
              "line": 340,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatLabels"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateAttributesFromFat",
          "description": "sync input attributes according to fat attributes",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 346,
              "column": 2
            },
            "end": {
              "line": 370,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fatAttributes"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_setValueStateMessage",
          "description": "update the value state and the value state message on demand",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 379,
              "column": 2
            },
            "end": {
              "line": 383,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "valueState"
            },
            {
              "name": "message"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_resetValueStateMessage",
          "description": "reset to previous value state",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 389,
              "column": 2
            },
            "end": {
              "line": 391,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateOptions",
          "description": "Maps and updates array of option",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 398,
              "column": 2
            },
            "end": {
              "line": 452,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "list"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_updateFNA",
          "description": "Handler function for the select value changes.\nThis is done to be able to remove the event-listeners as a protection for multiple calls",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 474,
              "column": 2
            },
            "end": {
              "line": 538,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "e"
            }
          ],
          "return": {
            "type": "((function (): void) | *)"
          }
        }
      ],
      "staticMethods": [
        {
          "name": "getValueByPath",
          "description": "Let you get an attribute value by path",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 461,
              "column": 2
            },
            "end": {
              "line": 466,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            },
            {
              "name": "path"
            }
          ]
        }
      ],
      "demos": [
        {
          "url": "demo-furo-ui5-data-select",
          "description": "Basic usage (scalar , fat, wrapper values)"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 25,
          "column": 7
        },
        "end": {
          "line": 539,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataSelect",
      "attributes": [],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-select"
    },
    {
      "description": "`furo-ui5-data-select-labeled`\nThe furo-ui5-data-select-labeled is a composition to easily use a complete data select with label according\nto the design specification of SAP Fiori Design System.",
      "summary": "labeled select",
      "path": "src/furo-ui5-data-select-labeled.js",
      "properties": [
        {
          "name": "label",
          "type": "string | null | undefined",
          "description": "the label for the data-number-input",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 29
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valueState",
          "type": "string | null | undefined",
          "description": "Defines the value state of the furo-ui5-data-select.\n\nAvailable options are:\nNone\nError\nWarning\nSuccess\nInformation",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 60
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "required",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "disabled",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user and\nappears in disabled state.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "readonly",
          "type": "boolean | null | undefined",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 84,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "Boolean"
            }
          }
        },
        {
          "name": "idFieldPath",
          "type": "string | null | undefined",
          "description": "Defines the field path that is used from the injected RepeaterNode to identify the option items.\nPoint-separated path to the field\nE.g. data.partner.ulid",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "displayFieldPath",
          "type": "string | null | undefined",
          "description": "Defines the field path that is used from the injected RepeaterNode to display the option items.\nPoint-separated path to the field\nE.g. data.partner.display_name",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 6
            },
            "end": {
              "line": 102,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        },
        {
          "name": "valueFieldPath",
          "type": "string | null | undefined",
          "description": "Defines the field path that is used to update the bound component if the user has selected an option.\nPoint-separated path to the field\nMust be set if a data binding is specified.",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 6
            },
            "end": {
              "line": 111,
              "column": 7
            }
          },
          "metadata": {
            "polymer": {
              "attributeType": "String"
            }
          }
        }
      ],
      "methods": [
        {
          "name": "focus",
          "description": "Focuses the underlying ui5 input element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 38,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "options",
              "type": "Object",
              "description": "https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "_FBPReady",
          "description": "flow is ready lifecycle method",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 47,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindData",
          "description": "Orchestrates the data field connection to the inside",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 134,
              "column": 2
            },
            "end": {
              "line": 136,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "bindOptions",
          "description": "Binds a repeaterNode to the furo-ui5-data-select component",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 142,
              "column": 2
            },
            "end": {
              "line": 144,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "repeaterNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "render",
          "description": "",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 150,
              "column": 2
            },
            "end": {
              "line": 174,
              "column": 3
            }
          },
          "metadata": {},
          "params": [],
          "return": {
            "type": "(TemplateResult | TemplateResult)"
          }
        }
      ],
      "staticMethods": [],
      "demos": [
        {
          "url": "demo-furo-ui5-data-select-labeled",
          "description": "Basic Usage"
        }
      ],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 22,
          "column": 7
        },
        "end": {
          "line": 175,
          "column": 1
        }
      },
      "privacy": "public",
      "superclass": "HTMLElement",
      "name": "FuroUi5DataSelectLabeled",
      "attributes": [
        {
          "name": "label",
          "description": "the label for the data-number-input",
          "sourceRange": {
            "start": {
              "line": 54,
              "column": 6
            },
            "end": {
              "line": 54,
              "column": 29
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value-state",
          "description": "Defines the value state of the furo-ui5-data-select.\n\nAvailable options are:\nNone\nError\nWarning\nSuccess\nInformation",
          "sourceRange": {
            "start": {
              "line": 65,
              "column": 6
            },
            "end": {
              "line": 65,
              "column": 60
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "required",
          "description": "A Boolean attribute which, if present, means this field is required and marked with *.",
          "sourceRange": {
            "start": {
              "line": 69,
              "column": 6
            },
            "end": {
              "line": 71,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "disabled",
          "description": "A Boolean attribute which, if present, means this field cannot be edited by the user and\nappears in disabled state.",
          "sourceRange": {
            "start": {
              "line": 76,
              "column": 6
            },
            "end": {
              "line": 78,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "readonly",
          "description": "A Boolean attribute which, if present, means this field is readonly.",
          "sourceRange": {
            "start": {
              "line": 82,
              "column": 6
            },
            "end": {
              "line": 84,
              "column": 7
            }
          },
          "metadata": {},
          "type": "boolean | null | undefined"
        },
        {
          "name": "id-field-path",
          "description": "Defines the field path that is used from the injected RepeaterNode to identify the option items.\nPoint-separated path to the field\nE.g. data.partner.ulid",
          "sourceRange": {
            "start": {
              "line": 90,
              "column": 6
            },
            "end": {
              "line": 93,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "display-field-path",
          "description": "Defines the field path that is used from the injected RepeaterNode to display the option items.\nPoint-separated path to the field\nE.g. data.partner.display_name",
          "sourceRange": {
            "start": {
              "line": 99,
              "column": 6
            },
            "end": {
              "line": 102,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        },
        {
          "name": "value-field-path",
          "description": "Defines the field path that is used to update the bound component if the user has selected an option.\nPoint-separated path to the field\nMust be set if a data binding is specified.",
          "sourceRange": {
            "start": {
              "line": 108,
              "column": 6
            },
            "end": {
              "line": 111,
              "column": 7
            }
          },
          "metadata": {},
          "type": "string | null | undefined"
        }
      ],
      "events": [],
      "styling": {
        "cssVariables": [],
        "selectors": []
      },
      "slots": [],
      "tagname": "furo-ui5-data-select-labeled",
      "mixins": [
        "FBP"
      ]
    }
  ],
  "classes": [
    {
      "description": "Helper class for binding ui5 labeled elements",
      "summary": "",
      "path": "src/lib/Ui5LabelDataBinding.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "bindData",
          "description": "bind data for labeled element",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 9,
              "column": 2
            },
            "end": {
              "line": 44,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "element"
            },
            {
              "name": "fieldNode",
              "type": "FieldNode"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "isFatType",
          "description": "check whether it is a fat type",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 52,
              "column": 2
            },
            "end": {
              "line": 59,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "field"
            }
          ],
          "return": {
            "type": "boolean"
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 3,
          "column": 7
        },
        "end": {
          "line": 60,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "Ui5LabelDataBinding"
    },
    {
      "description": "eslint-disable no-param-reassign",
      "summary": "",
      "path": "src/lib/DELETEMECollectionDropdownHelper.js",
      "properties": [],
      "methods": [],
      "staticMethods": [
        {
          "name": "triggerSetOptionItem",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 8,
              "column": 2
            },
            "end": {
              "line": 17,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "getValueByPath",
          "description": "eslint-disable-next-line class-methods-use-this",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 27,
              "column": 2
            },
            "end": {
              "line": 29,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "obj"
            },
            {
              "name": "path"
            }
          ]
        },
        {
          "name": "notifiySelectedItem",
          "description": "Triggers the item selected event",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 36,
              "column": 2
            },
            "end": {
              "line": 42,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            },
            {
              "name": "obj"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "findDisplayNameByValue",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 44,
              "column": 2
            },
            "end": {
              "line": 54,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            },
            {
              "name": "val"
            }
          ]
        },
        {
          "name": "listHasDataObjectValue",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 56,
              "column": 2
            },
            "end": {
              "line": 68,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "initDropdownItemWithoutCollectionInjection",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 70,
              "column": 2
            },
            "end": {
              "line": 115,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "updateField",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 117,
              "column": 2
            },
            "end": {
              "line": 127,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "mapDataToList",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 129,
              "column": 2
            },
            "end": {
              "line": 166,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            },
            {
              "name": "list"
            }
          ]
        },
        {
          "name": "setItemSelectedViaSelectedMark",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 168,
              "column": 2
            },
            "end": {
              "line": 179,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            },
            {
              "name": "list"
            }
          ]
        },
        {
          "name": "injectList",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 181,
              "column": 2
            },
            "end": {
              "line": 193,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            },
            {
              "name": "list"
            }
          ],
          "return": {
            "type": "void"
          }
        },
        {
          "name": "mapInputToInnerStruct",
          "description": "",
          "privacy": "public",
          "sourceRange": {
            "start": {
              "line": 195,
              "column": 2
            },
            "end": {
              "line": 219,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            },
            {
              "name": "collection"
            }
          ]
        },
        {
          "name": "setOptionItems",
          "description": "set option items",
          "privacy": "private",
          "sourceRange": {
            "start": {
              "line": 225,
              "column": 2
            },
            "end": {
              "line": 272,
              "column": 3
            }
          },
          "metadata": {},
          "params": [
            {
              "name": "caller"
            }
          ],
          "return": {
            "type": "void"
          }
        }
      ],
      "demos": [],
      "metadata": {},
      "sourceRange": {
        "start": {
          "line": 7,
          "column": 7
        },
        "end": {
          "line": 273,
          "column": 1
        }
      },
      "privacy": "public",
      "name": "CollectionDropdownHelper"
    }
  ]
}
