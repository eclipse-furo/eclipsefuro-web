// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import { FieldNode, Registry, STRING } from '@furo/open-models/dist/index';

/**
 * @interface ICubeServiceGetRequest
 */
export interface ICubeServiceGetRequest {
  /**
   *  ID of the cube
   */
  cubeId?: string;
  /**
   *  Partial Response, https://cloud.google.com/apis/design/design_patterns#partial_response
   *  use wildcard * to get all fields
   */
  fields?: string;
}

/**
 * @interface TCubeServiceGetRequest
 */
export interface TCubeServiceGetRequest {
  /**
   *  ID of the cube
   */
  cube_id?: string;
  /**
   *  Partial Response, https://cloud.google.com/apis/design/design_patterns#partial_response
   *  use wildcard * to get all fields
   */
  fields?: string;
}

/**
 * CubeServiceGetRequest
 */
export class CubeServiceGetRequest extends FieldNode {
  //  ID of the cube
  private _cubeId: STRING;

  //  Partial Response, https://cloud.google.com/apis/design/design_patterns#partial_response
  //  use wildcard * to get all fields
  private _fields: STRING;

  public __defaultValues: ICubeServiceGetRequest;

  constructor(
    initData?: ICubeServiceGetRequest,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'furo.cube.CubeServiceGetRequest';

    this.__meta.nodeFields = [
      {
        fieldName: 'cubeId',
        protoName: 'cube_id',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'fields',
        protoName: 'fields',
        FieldConstructor: STRING,
        constraints: {},
      },
    ];

    // Initialize the fields
    //  ID of the cube
    this._cubeId = new STRING(undefined, this, 'cubeId');

    //  Partial Response, https://cloud.google.com/apis/design/design_patterns#partial_response
    //  use wildcard * to get all fields
    this._fields = new STRING(undefined, this, 'fields');

    // Set required fields
    [].forEach(fieldName => {
      (
        this[fieldName as keyof CubeServiceGetRequest] as FieldNode
      ).__meta.required = true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {
      fields: '*',
    };

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (this[fieldName as keyof CubeServiceGetRequest] as FieldNode).__readonly =
        true;
    });

    this.__meta.isPristine = true;
  }

  //  ID of the cube
  public get cubeId(): STRING {
    return this._cubeId;
  }

  public set cubeId(v: string) {
    this.__PrimitivesSetter(this._cubeId, v);
  }

  //  Partial Response, https://cloud.google.com/apis/design/design_patterns#partial_response
  //  use wildcard * to get all fields
  public get fields(): STRING {
    return this._fields;
  }

  public set fields(v: string) {
    this.__PrimitivesSetter(this._fields, v);
  }

  fromLiteral(data: ICubeServiceGetRequest) {
    super.__fromLiteral(data);
  }

  toLiteral(): ICubeServiceGetRequest {
    return super.__toLiteral();
  }
}

Registry.register('furo.cube.CubeServiceGetRequest', CubeServiceGetRequest);
