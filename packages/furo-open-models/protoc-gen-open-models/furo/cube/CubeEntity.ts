// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import { FieldNode, Registry, STRING } from '@furo/open-models/dist/index';
import {
  CubeDefinition as FuroCubeCubeDefinition,
  ICubeDefinition as IFuroCubeCubeDefinition,
  TCubeDefinition as TFuroCubeCubeDefinition,
} from './CubeDefinition';

/**
 * @interface ICubeEntity
 */
export interface ICubeEntity {
  displayName?: string;
  description?: string;
  cube?: IFuroCubeCubeDefinition;
}

/**
 * @interface TCubeEntity
 */
export interface TCubeEntity {
  display_name?: string;
  description?: string;
  cube?: TFuroCubeCubeDefinition;
}

/**
 * CubeEntity
 */
export class CubeEntity extends FieldNode {
  private _displayName: STRING;

  private _description: STRING;

  private _cube: FuroCubeCubeDefinition;

  public __defaultValues: ICubeEntity;

  constructor(
    initData?: ICubeEntity,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'furo.cube.CubeEntity';

    this.__meta.nodeFields = [
      {
        fieldName: 'displayName',
        protoName: 'display_name',
        FieldConstructor: STRING,
        constraints: { read_only: true },
      },
      {
        fieldName: 'description',
        protoName: 'description',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'cube',
        protoName: 'cube',
        FieldConstructor: FuroCubeCubeDefinition,
        constraints: {},
      },
    ];

    // Initialize the fields
    this._displayName = new STRING(undefined, this, 'displayName');

    this._description = new STRING(undefined, this, 'description');

    this._cube = new FuroCubeCubeDefinition(undefined, this, 'cube');

    // Set required fields
    [].forEach(fieldName => {
      (this[fieldName as keyof CubeEntity] as FieldNode).__meta.required = true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {
      cube: { length: 222 },
    };

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    ['displayName'].forEach(fieldName => {
      (this[fieldName as keyof CubeEntity] as FieldNode).__readonly = true;
    });

    this.__meta.isPristine = true;
  }

  public get displayName(): STRING {
    return this._displayName;
  }

  public set displayName(v: string) {
    this.__PrimitivesSetter(this._displayName, v);
  }

  public get description(): STRING {
    return this._description;
  }

  public set description(v: string) {
    this.__PrimitivesSetter(this._description, v);
  }

  public get cube(): FuroCubeCubeDefinition {
    return this._cube;
  }

  public set cube(v: IFuroCubeCubeDefinition) {
    this.__TypeSetter(this._cube, v);
  }

  fromLiteral(data: ICubeEntity) {
    super.__fromLiteral(data);
  }

  toLiteral(): ICubeEntity {
    return super.__toLiteral();
  }
}

Registry.register('furo.cube.CubeEntity', CubeEntity);
