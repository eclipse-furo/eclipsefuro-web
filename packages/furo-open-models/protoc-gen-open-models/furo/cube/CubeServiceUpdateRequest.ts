// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import { FieldNode, Registry, STRING } from '@furo/open-models/dist/index';
import {
  CubeEntity as FuroCubeCubeEntity,
  ICubeEntity as IFuroCubeCubeEntity,
  TCubeEntity as TFuroCubeCubeEntity,
} from './CubeEntity';

/**
 * @interface ICubeServiceUpdateRequest
 */
export interface ICubeServiceUpdateRequest {
  /**
   *  ID of the cube
   */
  cubeId?: string;
  entity?: IFuroCubeCubeEntity;
}

/**
 * @interface TCubeServiceUpdateRequest
 */
export interface TCubeServiceUpdateRequest {
  /**
   *  ID of the cube
   */
  cube_id?: string;
  entity?: TFuroCubeCubeEntity;
}

/**
 * CubeServiceUpdateRequest
 */
export class CubeServiceUpdateRequest extends FieldNode {
  //  ID of the cube
  private _cubeId: STRING;

  private _entity: FuroCubeCubeEntity;

  public __defaultValues: ICubeServiceUpdateRequest;

  constructor(
    initData?: ICubeServiceUpdateRequest,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'furo.cube.CubeServiceUpdateRequest';

    this.__meta.nodeFields = [
      {
        fieldName: 'cubeId',
        protoName: 'cube_id',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'entity',
        protoName: 'entity',
        FieldConstructor: FuroCubeCubeEntity,
        constraints: {},
      },
    ];

    // Initialize the fields
    //  ID of the cube
    this._cubeId = new STRING(undefined, this, 'cubeId');

    this._entity = new FuroCubeCubeEntity(undefined, this, 'entity');

    // Set required fields
    [].forEach(fieldName => {
      (
        this[fieldName as keyof CubeServiceUpdateRequest] as FieldNode
      ).__meta.required = true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {};

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (
        this[fieldName as keyof CubeServiceUpdateRequest] as FieldNode
      ).__readonly = true;
    });

    this.__meta.isPristine = true;
  }

  //  ID of the cube
  public get cubeId(): STRING {
    return this._cubeId;
  }

  public set cubeId(v: string) {
    this.__PrimitivesSetter(this._cubeId, v);
  }

  public get entity(): FuroCubeCubeEntity {
    return this._entity;
  }

  public set entity(v: IFuroCubeCubeEntity) {
    this.__TypeSetter(this._entity, v);
  }

  fromLiteral(data: ICubeServiceUpdateRequest) {
    super.__fromLiteral(data);
  }

  toLiteral(): ICubeServiceUpdateRequest {
    return super.__toLiteral();
  }
}

Registry.register(
  'furo.cube.CubeServiceUpdateRequest',
  CubeServiceUpdateRequest,
);
