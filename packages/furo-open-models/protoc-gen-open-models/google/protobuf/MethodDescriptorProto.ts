// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import {
  BOOLEAN,
  FieldNode,
  Registry,
  STRING,
} from '@furo/open-models/dist/index';
import {
  IMethodOptions as IGoogleProtobufMethodOptions,
  MethodOptions as GoogleProtobufMethodOptions,
  TMethodOptions as TGoogleProtobufMethodOptions,
} from './MethodOptions';

/**
 * @interface IMethodDescriptorProto
 *  Describes a method of a service.
 */
export interface IMethodDescriptorProto {
  name?: string;
  /**
   *  Input and output type names.  These are resolved in the same way as
   *  FieldDescriptorProto.type_name, but must refer to a message type.
   */
  inputType?: string;
  outputType?: string;
  options?: IGoogleProtobufMethodOptions;
  /**
   *  Identifies if client streams multiple client messages
   */
  clientStreaming?: boolean;
  /**
   *  Identifies if server streams multiple server messages
   */
  serverStreaming?: boolean;
}

/**
 * @interface TMethodDescriptorProto
 *  Describes a method of a service.
 */
export interface TMethodDescriptorProto {
  name?: string;
  /**
   *  Input and output type names.  These are resolved in the same way as
   *  FieldDescriptorProto.type_name, but must refer to a message type.
   */
  input_type?: string;
  output_type?: string;
  options?: TGoogleProtobufMethodOptions;
  /**
   *  Identifies if client streams multiple client messages
   */
  client_streaming?: boolean;
  /**
   *  Identifies if server streams multiple server messages
   */
  server_streaming?: boolean;
}

/**
 * MethodDescriptorProto
 *  Describes a method of a service.
 */
export class MethodDescriptorProto extends FieldNode {
  private _name: STRING;

  //  Input and output type names.  These are resolved in the same way as
  //  FieldDescriptorProto.type_name, but must refer to a message type.
  private _inputType: STRING;

  private _outputType: STRING;

  private _options: GoogleProtobufMethodOptions;

  //  Identifies if client streams multiple client messages
  private _clientStreaming: BOOLEAN;

  //  Identifies if server streams multiple server messages
  private _serverStreaming: BOOLEAN;

  public __defaultValues: IMethodDescriptorProto;

  constructor(
    initData?: IMethodDescriptorProto,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'google.protobuf.MethodDescriptorProto';

    this.__meta.nodeFields = [
      {
        fieldName: 'name',
        protoName: 'name',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'inputType',
        protoName: 'input_type',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'outputType',
        protoName: 'output_type',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'options',
        protoName: 'options',
        FieldConstructor: GoogleProtobufMethodOptions,
        constraints: {},
      },
      {
        fieldName: 'clientStreaming',
        protoName: 'client_streaming',
        FieldConstructor: BOOLEAN,
        constraints: {},
      },
      {
        fieldName: 'serverStreaming',
        protoName: 'server_streaming',
        FieldConstructor: BOOLEAN,
        constraints: {},
      },
    ];

    // Initialize the fields
    this._name = new STRING(undefined, this, 'name');

    //  Input and output type names.  These are resolved in the same way as
    //  FieldDescriptorProto.type_name, but must refer to a message type.
    this._inputType = new STRING(undefined, this, 'inputType');

    this._outputType = new STRING(undefined, this, 'outputType');

    this._options = new GoogleProtobufMethodOptions(undefined, this, 'options');

    //  Identifies if client streams multiple client messages
    this._clientStreaming = new BOOLEAN(undefined, this, 'clientStreaming');

    //  Identifies if server streams multiple server messages
    this._serverStreaming = new BOOLEAN(undefined, this, 'serverStreaming');

    // Set required fields
    [].forEach(fieldName => {
      (
        this[fieldName as keyof MethodDescriptorProto] as FieldNode
      ).__meta.required = true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {};

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (this[fieldName as keyof MethodDescriptorProto] as FieldNode).__readonly =
        true;
    });

    this.__meta.isPristine = true;
  }

  public get name(): STRING {
    return this._name;
  }

  public set name(v: string) {
    this.__PrimitivesSetter(this._name, v);
  }

  //  Input and output type names.  These are resolved in the same way as
  //  FieldDescriptorProto.type_name, but must refer to a message type.
  public get inputType(): STRING {
    return this._inputType;
  }

  public set inputType(v: string) {
    this.__PrimitivesSetter(this._inputType, v);
  }

  public get outputType(): STRING {
    return this._outputType;
  }

  public set outputType(v: string) {
    this.__PrimitivesSetter(this._outputType, v);
  }

  public get options(): GoogleProtobufMethodOptions {
    return this._options;
  }

  public set options(v: IGoogleProtobufMethodOptions) {
    this.__TypeSetter(this._options, v);
  }

  //  Identifies if client streams multiple client messages
  public get clientStreaming(): BOOLEAN {
    return this._clientStreaming;
  }

  public set clientStreaming(v: boolean) {
    this.__PrimitivesSetter(this._clientStreaming, v);
  }

  //  Identifies if server streams multiple server messages
  public get serverStreaming(): BOOLEAN {
    return this._serverStreaming;
  }

  public set serverStreaming(v: boolean) {
    this.__PrimitivesSetter(this._serverStreaming, v);
  }

  fromLiteral(data: IMethodDescriptorProto) {
    super.__fromLiteral(data);
  }

  toLiteral(): IMethodDescriptorProto {
    return super.__toLiteral();
  }
}

Registry.register(
  'google.protobuf.MethodDescriptorProto',
  MethodDescriptorProto,
);
