// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import { FieldNode, INT32, Registry } from '@furo/open-models/dist/index';
import {
  ExtensionRangeOptions as GoogleProtobufExtensionRangeOptions,
  IExtensionRangeOptions as IGoogleProtobufExtensionRangeOptions,
  TExtensionRangeOptions as TGoogleProtobufExtensionRangeOptions,
} from './ExtensionRangeOptions';

/**
 * @interface IDescriptorProtoExtensionRange
 */
export interface IDescriptorProtoExtensionRange {
  start?: number; //  Inclusive.

  end?: number; //  Exclusive.

  options?: IGoogleProtobufExtensionRangeOptions;
}

/**
 * @interface TDescriptorProtoExtensionRange
 */
export interface TDescriptorProtoExtensionRange {
  start?: number; //  Inclusive.

  end?: number; //  Exclusive.

  options?: TGoogleProtobufExtensionRangeOptions;
}

/**
 * DescriptorProtoExtensionRange
 */
export class DescriptorProtoExtensionRange extends FieldNode {
  private _start: INT32; //  Inclusive.

  private _end: INT32; //  Exclusive.

  private _options: GoogleProtobufExtensionRangeOptions;

  public __defaultValues: IDescriptorProtoExtensionRange;

  constructor(
    initData?: IDescriptorProtoExtensionRange,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'google.protobuf.DescriptorProto.ExtensionRange';

    this.__meta.nodeFields = [
      {
        fieldName: 'start',
        protoName: 'start',
        FieldConstructor: INT32,
        constraints: {},
      },
      {
        fieldName: 'end',
        protoName: 'end',
        FieldConstructor: INT32,
        constraints: {},
      },
      {
        fieldName: 'options',
        protoName: 'options',
        FieldConstructor: GoogleProtobufExtensionRangeOptions,
        constraints: {},
      },
    ];

    // Initialize the fields
    this._start = new INT32(undefined, this, 'start');

    this._end = new INT32(undefined, this, 'end');

    this._options = new GoogleProtobufExtensionRangeOptions(
      undefined,
      this,
      'options',
    );

    // Set required fields
    [].forEach(fieldName => {
      (
        this[fieldName as keyof DescriptorProtoExtensionRange] as FieldNode
      ).__meta.required = true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {};

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (
        this[fieldName as keyof DescriptorProtoExtensionRange] as FieldNode
      ).__readonly = true;
    });

    this.__meta.isPristine = true;
  }

  public get start(): INT32 {
    return this._start;
  }

  public set start(v: number) {
    this.__PrimitivesSetter(this._start, v);
  }

  public get end(): INT32 {
    return this._end;
  }

  public set end(v: number) {
    this.__PrimitivesSetter(this._end, v);
  }

  public get options(): GoogleProtobufExtensionRangeOptions {
    return this._options;
  }

  public set options(v: IGoogleProtobufExtensionRangeOptions) {
    this.__TypeSetter(this._options, v);
  }

  fromLiteral(data: IDescriptorProtoExtensionRange) {
    super.__fromLiteral(data);
  }

  toLiteral(): IDescriptorProtoExtensionRange {
    return super.__toLiteral();
  }
}

Registry.register(
  'google.protobuf.DescriptorProto.ExtensionRange',
  DescriptorProtoExtensionRange,
);
