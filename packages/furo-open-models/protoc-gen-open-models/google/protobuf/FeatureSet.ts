// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import { ENUM, FieldNode, Registry } from '@furo/open-models/dist/index';
import { FeatureSetEnumType as GoogleProtobufFeatureSetEnumType } from './FeatureSet.EnumType';

import { FeatureSetFieldPresence as GoogleProtobufFeatureSetFieldPresence } from './FeatureSet.FieldPresence';

import { FeatureSetJsonFormat as GoogleProtobufFeatureSetJsonFormat } from './FeatureSet.JsonFormat';

import { FeatureSetMessageEncoding as GoogleProtobufFeatureSetMessageEncoding } from './FeatureSet.MessageEncoding';

import { FeatureSetRepeatedFieldEncoding as GoogleProtobufFeatureSetRepeatedFieldEncoding } from './FeatureSet.RepeatedFieldEncoding';

import { FeatureSetUtf8Validation as GoogleProtobufFeatureSetUtf8Validation } from './FeatureSet.Utf8Validation';

/**
 * @interface IFeatureSet
 *  TODO Enums in C++ gencode (and potentially other languages) are
 *  not well scoped.  This means that each of the feature enums below can clash
 *  with each other.  The short names we've chosen maximize call-site
 *  readability, but leave us very open to this scenario.  A future feature will
 *  be designed and implemented to handle this, hopefully before we ever hit a
 *  conflict here.
 */
export interface IFeatureSet {
  fieldPresence?: GoogleProtobufFeatureSetFieldPresence | string;
  enumType?: GoogleProtobufFeatureSetEnumType | string;
  repeatedFieldEncoding?:
    | GoogleProtobufFeatureSetRepeatedFieldEncoding
    | string;
  utf8Validation?: GoogleProtobufFeatureSetUtf8Validation | string;
  messageEncoding?: GoogleProtobufFeatureSetMessageEncoding | string;
  jsonFormat?: GoogleProtobufFeatureSetJsonFormat | string;
}

/**
 * @interface TFeatureSet
 *  TODO Enums in C++ gencode (and potentially other languages) are
 *  not well scoped.  This means that each of the feature enums below can clash
 *  with each other.  The short names we've chosen maximize call-site
 *  readability, but leave us very open to this scenario.  A future feature will
 *  be designed and implemented to handle this, hopefully before we ever hit a
 *  conflict here.
 */
export interface TFeatureSet {
  field_presence?: GoogleProtobufFeatureSetFieldPresence | string;
  enum_type?: GoogleProtobufFeatureSetEnumType | string;
  repeated_field_encoding?:
    | GoogleProtobufFeatureSetRepeatedFieldEncoding
    | string;
  utf8_validation?: GoogleProtobufFeatureSetUtf8Validation | string;
  message_encoding?: GoogleProtobufFeatureSetMessageEncoding | string;
  json_format?: GoogleProtobufFeatureSetJsonFormat | string;
}

/**
 * FeatureSet
 *  TODO Enums in C++ gencode (and potentially other languages) are
 *  not well scoped.  This means that each of the feature enums below can clash
 *  with each other.  The short names we've chosen maximize call-site
 *  readability, but leave us very open to this scenario.  A future feature will
 *  be designed and implemented to handle this, hopefully before we ever hit a
 *  conflict here.
 */
export class FeatureSet extends FieldNode {
  private _fieldPresence: ENUM<GoogleProtobufFeatureSetFieldPresence>;

  private _enumType: ENUM<GoogleProtobufFeatureSetEnumType>;

  private _repeatedFieldEncoding: ENUM<GoogleProtobufFeatureSetRepeatedFieldEncoding>;

  private _utf8Validation: ENUM<GoogleProtobufFeatureSetUtf8Validation>;

  private _messageEncoding: ENUM<GoogleProtobufFeatureSetMessageEncoding>;

  private _jsonFormat: ENUM<GoogleProtobufFeatureSetJsonFormat>;

  public __defaultValues: IFeatureSet;

  constructor(
    initData?: IFeatureSet,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'google.protobuf.FeatureSet';

    this.__meta.nodeFields = [
      {
        fieldName: 'fieldPresence',
        protoName: 'field_presence',
        FieldConstructor: ENUM<GoogleProtobufFeatureSetFieldPresence>,
        constraints: {},
      },
      {
        fieldName: 'enumType',
        protoName: 'enum_type',
        FieldConstructor: ENUM<GoogleProtobufFeatureSetEnumType>,
        constraints: {},
      },
      {
        fieldName: 'repeatedFieldEncoding',
        protoName: 'repeated_field_encoding',
        FieldConstructor: ENUM<GoogleProtobufFeatureSetRepeatedFieldEncoding>,
        constraints: {},
      },
      {
        fieldName: 'utf8Validation',
        protoName: 'utf8_validation',
        FieldConstructor: ENUM<GoogleProtobufFeatureSetUtf8Validation>,
        constraints: {},
      },
      {
        fieldName: 'messageEncoding',
        protoName: 'message_encoding',
        FieldConstructor: ENUM<GoogleProtobufFeatureSetMessageEncoding>,
        constraints: {},
      },
      {
        fieldName: 'jsonFormat',
        protoName: 'json_format',
        FieldConstructor: ENUM<GoogleProtobufFeatureSetJsonFormat>,
        constraints: {},
      },
    ];

    // Initialize the fields
    this._fieldPresence = new ENUM<GoogleProtobufFeatureSetFieldPresence>(
      undefined,
      GoogleProtobufFeatureSetFieldPresence,
      GoogleProtobufFeatureSetFieldPresence.FIELD_PRESENCE_UNKNOWN,
      this,
      'fieldPresence',
    );

    this._enumType = new ENUM<GoogleProtobufFeatureSetEnumType>(
      undefined,
      GoogleProtobufFeatureSetEnumType,
      GoogleProtobufFeatureSetEnumType.ENUM_TYPE_UNKNOWN,
      this,
      'enumType',
    );

    this._repeatedFieldEncoding =
      new ENUM<GoogleProtobufFeatureSetRepeatedFieldEncoding>(
        undefined,
        GoogleProtobufFeatureSetRepeatedFieldEncoding,
        GoogleProtobufFeatureSetRepeatedFieldEncoding.REPEATED_FIELD_ENCODING_UNKNOWN,
        this,
        'repeatedFieldEncoding',
      );

    this._utf8Validation = new ENUM<GoogleProtobufFeatureSetUtf8Validation>(
      undefined,
      GoogleProtobufFeatureSetUtf8Validation,
      GoogleProtobufFeatureSetUtf8Validation.UTF8_VALIDATION_UNKNOWN,
      this,
      'utf8Validation',
    );

    this._messageEncoding = new ENUM<GoogleProtobufFeatureSetMessageEncoding>(
      undefined,
      GoogleProtobufFeatureSetMessageEncoding,
      GoogleProtobufFeatureSetMessageEncoding.MESSAGE_ENCODING_UNKNOWN,
      this,
      'messageEncoding',
    );

    this._jsonFormat = new ENUM<GoogleProtobufFeatureSetJsonFormat>(
      undefined,
      GoogleProtobufFeatureSetJsonFormat,
      GoogleProtobufFeatureSetJsonFormat.JSON_FORMAT_UNKNOWN,
      this,
      'jsonFormat',
    );

    // Set required fields
    [].forEach(fieldName => {
      (this[fieldName as keyof FeatureSet] as FieldNode).__meta.required = true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {};

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (this[fieldName as keyof FeatureSet] as FieldNode).__readonly = true;
    });

    this.__meta.isPristine = true;
  }

  public get fieldPresence(): ENUM<GoogleProtobufFeatureSetFieldPresence> {
    return this._fieldPresence;
  }

  public set fieldPresence(v: GoogleProtobufFeatureSetFieldPresence) {
    this.__TypeSetter(this._fieldPresence, v);
  }

  public get enumType(): ENUM<GoogleProtobufFeatureSetEnumType> {
    return this._enumType;
  }

  public set enumType(v: GoogleProtobufFeatureSetEnumType) {
    this.__TypeSetter(this._enumType, v);
  }

  public get repeatedFieldEncoding(): ENUM<GoogleProtobufFeatureSetRepeatedFieldEncoding> {
    return this._repeatedFieldEncoding;
  }

  public set repeatedFieldEncoding(
    v: GoogleProtobufFeatureSetRepeatedFieldEncoding,
  ) {
    this.__TypeSetter(this._repeatedFieldEncoding, v);
  }

  public get utf8Validation(): ENUM<GoogleProtobufFeatureSetUtf8Validation> {
    return this._utf8Validation;
  }

  public set utf8Validation(v: GoogleProtobufFeatureSetUtf8Validation) {
    this.__TypeSetter(this._utf8Validation, v);
  }

  public get messageEncoding(): ENUM<GoogleProtobufFeatureSetMessageEncoding> {
    return this._messageEncoding;
  }

  public set messageEncoding(v: GoogleProtobufFeatureSetMessageEncoding) {
    this.__TypeSetter(this._messageEncoding, v);
  }

  public get jsonFormat(): ENUM<GoogleProtobufFeatureSetJsonFormat> {
    return this._jsonFormat;
  }

  public set jsonFormat(v: GoogleProtobufFeatureSetJsonFormat) {
    this.__TypeSetter(this._jsonFormat, v);
  }

  fromLiteral(data: IFeatureSet) {
    super.__fromLiteral(data);
  }

  toLiteral(): IFeatureSet {
    return super.__toLiteral();
  }
}

Registry.register('google.protobuf.FeatureSet', FeatureSet);
