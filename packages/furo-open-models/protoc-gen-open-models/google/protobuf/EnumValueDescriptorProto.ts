// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import {
  FieldNode,
  INT32,
  Registry,
  STRING,
} from '@furo/open-models/dist/index';
import {
  EnumValueOptions as GoogleProtobufEnumValueOptions,
  IEnumValueOptions as IGoogleProtobufEnumValueOptions,
  TEnumValueOptions as TGoogleProtobufEnumValueOptions,
} from './EnumValueOptions';

/**
 * @interface IEnumValueDescriptorProto
 *  Describes a value within an enum.
 */
export interface IEnumValueDescriptorProto {
  name?: string;
  number?: number;
  options?: IGoogleProtobufEnumValueOptions;
}

/**
 * @interface TEnumValueDescriptorProto
 *  Describes a value within an enum.
 */
export interface TEnumValueDescriptorProto {
  name?: string;
  number?: number;
  options?: TGoogleProtobufEnumValueOptions;
}

/**
 * EnumValueDescriptorProto
 *  Describes a value within an enum.
 */
export class EnumValueDescriptorProto extends FieldNode {
  private _name: STRING;

  private _number: INT32;

  private _options: GoogleProtobufEnumValueOptions;

  public __defaultValues: IEnumValueDescriptorProto;

  constructor(
    initData?: IEnumValueDescriptorProto,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'google.protobuf.EnumValueDescriptorProto';

    this.__meta.nodeFields = [
      {
        fieldName: 'name',
        protoName: 'name',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'number',
        protoName: 'number',
        FieldConstructor: INT32,
        constraints: {},
      },
      {
        fieldName: 'options',
        protoName: 'options',
        FieldConstructor: GoogleProtobufEnumValueOptions,
        constraints: {},
      },
    ];

    // Initialize the fields
    this._name = new STRING(undefined, this, 'name');

    this._number = new INT32(undefined, this, 'number');

    this._options = new GoogleProtobufEnumValueOptions(
      undefined,
      this,
      'options',
    );

    // Set required fields
    [].forEach(fieldName => {
      (
        this[fieldName as keyof EnumValueDescriptorProto] as FieldNode
      ).__meta.required = true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {};

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (
        this[fieldName as keyof EnumValueDescriptorProto] as FieldNode
      ).__readonly = true;
    });

    this.__meta.isPristine = true;
  }

  public get name(): STRING {
    return this._name;
  }

  public set name(v: string) {
    this.__PrimitivesSetter(this._name, v);
  }

  public get number(): INT32 {
    return this._number;
  }

  public set number(v: number) {
    this.__PrimitivesSetter(this._number, v);
  }

  public get options(): GoogleProtobufEnumValueOptions {
    return this._options;
  }

  public set options(v: IGoogleProtobufEnumValueOptions) {
    this.__TypeSetter(this._options, v);
  }

  fromLiteral(data: IEnumValueDescriptorProto) {
    super.__fromLiteral(data);
  }

  toLiteral(): IEnumValueDescriptorProto {
    return super.__toLiteral();
  }
}

Registry.register(
  'google.protobuf.EnumValueDescriptorProto',
  EnumValueDescriptorProto,
);
