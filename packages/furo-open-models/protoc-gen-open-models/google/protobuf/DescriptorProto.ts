// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import {
  ARRAY,
  FieldNode,
  Registry,
  STRING,
} from '@furo/open-models/dist/index';
import {
  DescriptorProtoExtensionRange as GoogleProtobufDescriptorProtoExtensionRange,
  IDescriptorProtoExtensionRange as IGoogleProtobufDescriptorProtoExtensionRange,
  TDescriptorProtoExtensionRange as TGoogleProtobufDescriptorProtoExtensionRange,
} from './DescriptorProto.ExtensionRange';

import {
  DescriptorProtoReservedRange as GoogleProtobufDescriptorProtoReservedRange,
  IDescriptorProtoReservedRange as IGoogleProtobufDescriptorProtoReservedRange,
  TDescriptorProtoReservedRange as TGoogleProtobufDescriptorProtoReservedRange,
} from './DescriptorProto.ReservedRange';

import {
  EnumDescriptorProto as GoogleProtobufEnumDescriptorProto,
  IEnumDescriptorProto as IGoogleProtobufEnumDescriptorProto,
  TEnumDescriptorProto as TGoogleProtobufEnumDescriptorProto,
} from './EnumDescriptorProto';

import {
  FieldDescriptorProto as GoogleProtobufFieldDescriptorProto,
  IFieldDescriptorProto as IGoogleProtobufFieldDescriptorProto,
  TFieldDescriptorProto as TGoogleProtobufFieldDescriptorProto,
} from './FieldDescriptorProto';

import {
  IMessageOptions as IGoogleProtobufMessageOptions,
  MessageOptions as GoogleProtobufMessageOptions,
  TMessageOptions as TGoogleProtobufMessageOptions,
} from './MessageOptions';

import {
  IOneofDescriptorProto as IGoogleProtobufOneofDescriptorProto,
  OneofDescriptorProto as GoogleProtobufOneofDescriptorProto,
  TOneofDescriptorProto as TGoogleProtobufOneofDescriptorProto,
} from './OneofDescriptorProto';

/**
 * @interface IDescriptorProto
 *  Describes a message type.
 */
export interface IDescriptorProto {
  name?: string;
  field?: IGoogleProtobufFieldDescriptorProto[];
  extension?: IGoogleProtobufFieldDescriptorProto[];
  nestedType?: IDescriptorProto[];
  enumType?: IGoogleProtobufEnumDescriptorProto[];
  extensionRange?: IGoogleProtobufDescriptorProtoExtensionRange[];
  oneofDecl?: IGoogleProtobufOneofDescriptorProto[];
  options?: IGoogleProtobufMessageOptions;
  reservedRange?: IGoogleProtobufDescriptorProtoReservedRange[];
  /**
   *  Reserved field names, which may not be used by fields in the same message.
   *  A given name may only be reserved once.
   */
  reservedName?: string[];
}

/**
 * @interface TDescriptorProto
 *  Describes a message type.
 */
export interface TDescriptorProto {
  name?: string;
  field?: TGoogleProtobufFieldDescriptorProto[];
  extension?: TGoogleProtobufFieldDescriptorProto[];
  nested_type?: TDescriptorProto[];
  enum_type?: TGoogleProtobufEnumDescriptorProto[];
  extension_range?: TGoogleProtobufDescriptorProtoExtensionRange[];
  oneof_decl?: TGoogleProtobufOneofDescriptorProto[];
  options?: TGoogleProtobufMessageOptions;
  reserved_range?: TGoogleProtobufDescriptorProtoReservedRange[];
  /**
   *  Reserved field names, which may not be used by fields in the same message.
   *  A given name may only be reserved once.
   */
  reserved_name?: string[];
}

/**
 * DescriptorProto
 *  Describes a message type.
 */
export class DescriptorProto extends FieldNode {
  private _name: STRING;

  private _field: ARRAY<
    GoogleProtobufFieldDescriptorProto,
    IGoogleProtobufFieldDescriptorProto
  >;

  private _extension: ARRAY<
    GoogleProtobufFieldDescriptorProto,
    IGoogleProtobufFieldDescriptorProto
  >;

  private _nestedType: ARRAY<DescriptorProto, IDescriptorProto>;

  private _enumType: ARRAY<
    GoogleProtobufEnumDescriptorProto,
    IGoogleProtobufEnumDescriptorProto
  >;

  private _extensionRange: ARRAY<
    GoogleProtobufDescriptorProtoExtensionRange,
    IGoogleProtobufDescriptorProtoExtensionRange
  >;

  private _oneofDecl: ARRAY<
    GoogleProtobufOneofDescriptorProto,
    IGoogleProtobufOneofDescriptorProto
  >;

  private _options: GoogleProtobufMessageOptions;

  private _reservedRange: ARRAY<
    GoogleProtobufDescriptorProtoReservedRange,
    IGoogleProtobufDescriptorProtoReservedRange
  >;

  //  Reserved field names, which may not be used by fields in the same message.
  //  A given name may only be reserved once.
  private _reservedName: ARRAY<STRING, string>;

  public __defaultValues: IDescriptorProto;

  constructor(
    initData?: IDescriptorProto,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'google.protobuf.DescriptorProto';

    this.__meta.nodeFields = [
      {
        fieldName: 'name',
        protoName: 'name',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'field',
        protoName: 'field',
        FieldConstructor: GoogleProtobufFieldDescriptorProto,
        constraints: {},
      },
      {
        fieldName: 'extension',
        protoName: 'extension',
        FieldConstructor: GoogleProtobufFieldDescriptorProto,
        constraints: {},
      },
      {
        fieldName: 'nestedType',
        protoName: 'nested_type',
        FieldConstructor: DescriptorProto,
        constraints: {},
      },
      {
        fieldName: 'enumType',
        protoName: 'enum_type',
        FieldConstructor: GoogleProtobufEnumDescriptorProto,
        constraints: {},
      },
      {
        fieldName: 'extensionRange',
        protoName: 'extension_range',
        FieldConstructor: GoogleProtobufDescriptorProtoExtensionRange,
        constraints: {},
      },
      {
        fieldName: 'oneofDecl',
        protoName: 'oneof_decl',
        FieldConstructor: GoogleProtobufOneofDescriptorProto,
        constraints: {},
      },
      {
        fieldName: 'options',
        protoName: 'options',
        FieldConstructor: GoogleProtobufMessageOptions,
        constraints: {},
      },
      {
        fieldName: 'reservedRange',
        protoName: 'reserved_range',
        FieldConstructor: GoogleProtobufDescriptorProtoReservedRange,
        constraints: {},
      },
      {
        fieldName: 'reservedName',
        protoName: 'reserved_name',
        FieldConstructor: STRING,
        constraints: {},
      },
    ];

    // Initialize the fields
    this._name = new STRING(undefined, this, 'name');

    this._field = new ARRAY<
      GoogleProtobufFieldDescriptorProto,
      IGoogleProtobufFieldDescriptorProto
    >(undefined, this, 'field');

    this._extension = new ARRAY<
      GoogleProtobufFieldDescriptorProto,
      IGoogleProtobufFieldDescriptorProto
    >(undefined, this, 'extension');

    this._nestedType = new ARRAY<DescriptorProto, IDescriptorProto>(
      undefined,
      this,
      'nestedType',
    );

    this._enumType = new ARRAY<
      GoogleProtobufEnumDescriptorProto,
      IGoogleProtobufEnumDescriptorProto
    >(undefined, this, 'enumType');

    this._extensionRange = new ARRAY<
      GoogleProtobufDescriptorProtoExtensionRange,
      IGoogleProtobufDescriptorProtoExtensionRange
    >(undefined, this, 'extensionRange');

    this._oneofDecl = new ARRAY<
      GoogleProtobufOneofDescriptorProto,
      IGoogleProtobufOneofDescriptorProto
    >(undefined, this, 'oneofDecl');

    this._options = new GoogleProtobufMessageOptions(
      undefined,
      this,
      'options',
    );

    this._reservedRange = new ARRAY<
      GoogleProtobufDescriptorProtoReservedRange,
      IGoogleProtobufDescriptorProtoReservedRange
    >(undefined, this, 'reservedRange');

    //  Reserved field names, which may not be used by fields in the same message.
    //  A given name may only be reserved once.
    this._reservedName = new ARRAY<STRING, string>(
      undefined,
      this,
      'reservedName',
    );

    // Set required fields
    [].forEach(fieldName => {
      (this[fieldName as keyof DescriptorProto] as FieldNode).__meta.required =
        true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {};

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (this[fieldName as keyof DescriptorProto] as FieldNode).__readonly = true;
    });

    this.__meta.isPristine = true;
  }

  public get name(): STRING {
    return this._name;
  }

  public set name(v: string) {
    this.__PrimitivesSetter(this._name, v);
  }

  public get field(): ARRAY<
    GoogleProtobufFieldDescriptorProto,
    IGoogleProtobufFieldDescriptorProto
  > {
    return this._field;
  }

  public set field(v: IGoogleProtobufFieldDescriptorProto[]) {
    this.__TypeSetter(this._field, v);
  }

  public get extension(): ARRAY<
    GoogleProtobufFieldDescriptorProto,
    IGoogleProtobufFieldDescriptorProto
  > {
    return this._extension;
  }

  public set extension(v: IGoogleProtobufFieldDescriptorProto[]) {
    this.__TypeSetter(this._extension, v);
  }

  public get nestedType(): ARRAY<DescriptorProto, IDescriptorProto> {
    return this._nestedType;
  }

  public set nestedType(v: IDescriptorProto[]) {
    this.__TypeSetter(this._nestedType, v);
  }

  public get enumType(): ARRAY<
    GoogleProtobufEnumDescriptorProto,
    IGoogleProtobufEnumDescriptorProto
  > {
    return this._enumType;
  }

  public set enumType(v: IGoogleProtobufEnumDescriptorProto[]) {
    this.__TypeSetter(this._enumType, v);
  }

  public get extensionRange(): ARRAY<
    GoogleProtobufDescriptorProtoExtensionRange,
    IGoogleProtobufDescriptorProtoExtensionRange
  > {
    return this._extensionRange;
  }

  public set extensionRange(v: IGoogleProtobufDescriptorProtoExtensionRange[]) {
    this.__TypeSetter(this._extensionRange, v);
  }

  public get oneofDecl(): ARRAY<
    GoogleProtobufOneofDescriptorProto,
    IGoogleProtobufOneofDescriptorProto
  > {
    return this._oneofDecl;
  }

  public set oneofDecl(v: IGoogleProtobufOneofDescriptorProto[]) {
    this.__TypeSetter(this._oneofDecl, v);
  }

  public get options(): GoogleProtobufMessageOptions {
    return this._options;
  }

  public set options(v: IGoogleProtobufMessageOptions) {
    this.__TypeSetter(this._options, v);
  }

  public get reservedRange(): ARRAY<
    GoogleProtobufDescriptorProtoReservedRange,
    IGoogleProtobufDescriptorProtoReservedRange
  > {
    return this._reservedRange;
  }

  public set reservedRange(v: IGoogleProtobufDescriptorProtoReservedRange[]) {
    this.__TypeSetter(this._reservedRange, v);
  }

  //  Reserved field names, which may not be used by fields in the same message.
  //  A given name may only be reserved once.
  public get reservedName(): ARRAY<STRING, string> {
    return this._reservedName;
  }

  public set reservedName(v: string[]) {
    this.__TypeSetter(this._reservedName, v);
  }

  fromLiteral(data: IDescriptorProto) {
    super.__fromLiteral(data);
  }

  toLiteral(): IDescriptorProto {
    return super.__toLiteral();
  }
}

Registry.register('google.protobuf.DescriptorProto', DescriptorProto);
