// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import { ARRAY, FieldNode, Registry } from '@furo/open-models/dist/index';
import {
  ISchemaOrReference as IOpenapiV3SchemaOrReference,
  SchemaOrReference as OpenapiV3SchemaOrReference,
  TSchemaOrReference as TOpenapiV3SchemaOrReference,
} from './SchemaOrReference';

/**
 * @interface IItemsItem
 */
export interface IItemsItem {
  schemaOrReference?: IOpenapiV3SchemaOrReference[];
}

/**
 * @interface TItemsItem
 */
export interface TItemsItem {
  schema_or_reference?: TOpenapiV3SchemaOrReference[];
}

/**
 * ItemsItem
 */
export class ItemsItem extends FieldNode {
  private _schemaOrReference: ARRAY<
    OpenapiV3SchemaOrReference,
    IOpenapiV3SchemaOrReference
  >;

  public __defaultValues: IItemsItem;

  constructor(
    initData?: IItemsItem,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'openapi.v3.ItemsItem';

    this.__meta.nodeFields = [
      {
        fieldName: 'schemaOrReference',
        protoName: 'schema_or_reference',
        FieldConstructor: OpenapiV3SchemaOrReference,
        constraints: {},
      },
    ];

    // Initialize the fields
    this._schemaOrReference = new ARRAY<
      OpenapiV3SchemaOrReference,
      IOpenapiV3SchemaOrReference
    >(undefined, this, 'schemaOrReference');

    // Set required fields
    [].forEach(fieldName => {
      (this[fieldName as keyof ItemsItem] as FieldNode).__meta.required = true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {};

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (this[fieldName as keyof ItemsItem] as FieldNode).__readonly = true;
    });

    this.__meta.isPristine = true;
  }

  public get schemaOrReference(): ARRAY<
    OpenapiV3SchemaOrReference,
    IOpenapiV3SchemaOrReference
  > {
    return this._schemaOrReference;
  }

  public set schemaOrReference(v: IOpenapiV3SchemaOrReference[]) {
    this.__TypeSetter(this._schemaOrReference, v);
  }

  fromLiteral(data: IItemsItem) {
    super.__fromLiteral(data);
  }

  toLiteral(): IItemsItem {
    return super.__toLiteral();
  }
}

Registry.register('openapi.v3.ItemsItem', ItemsItem);
