// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import { FieldNode, Registry, STRING } from '@furo/open-models/dist/index';
import {
  IPathItem as IOpenapiV3PathItem,
  PathItem as OpenapiV3PathItem,
  TPathItem as TOpenapiV3PathItem,
} from './PathItem';

/**
 * @interface INamedPathItem
 *  Automatically-generated message used to represent maps of PathItem as ordered (name,value) pairs.
 */
export interface INamedPathItem {
  /**
   *  Map key
   */
  name?: string;
  /**
   *  Mapped value
   */
  value?: IOpenapiV3PathItem;
}

/**
 * @interface TNamedPathItem
 *  Automatically-generated message used to represent maps of PathItem as ordered (name,value) pairs.
 */
export interface TNamedPathItem {
  /**
   *  Map key
   */
  name?: string;
  /**
   *  Mapped value
   */
  value?: TOpenapiV3PathItem;
}

/**
 * NamedPathItem
 *  Automatically-generated message used to represent maps of PathItem as ordered (name,value) pairs.
 */
export class NamedPathItem extends FieldNode {
  //  Map key
  private _name: STRING;

  //  Mapped value
  private _value: OpenapiV3PathItem;

  public __defaultValues: INamedPathItem;

  constructor(
    initData?: INamedPathItem,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'openapi.v3.NamedPathItem';

    this.__meta.nodeFields = [
      {
        fieldName: 'name',
        protoName: 'name',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'value',
        protoName: 'value',
        FieldConstructor: OpenapiV3PathItem,
        constraints: {},
      },
    ];

    // Initialize the fields
    //  Map key
    this._name = new STRING(undefined, this, 'name');

    //  Mapped value
    this._value = new OpenapiV3PathItem(undefined, this, 'value');

    // Set required fields
    [].forEach(fieldName => {
      (this[fieldName as keyof NamedPathItem] as FieldNode).__meta.required =
        true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {};

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (this[fieldName as keyof NamedPathItem] as FieldNode).__readonly = true;
    });

    this.__meta.isPristine = true;
  }

  //  Map key
  public get name(): STRING {
    return this._name;
  }

  public set name(v: string) {
    this.__PrimitivesSetter(this._name, v);
  }

  //  Mapped value
  public get value(): OpenapiV3PathItem {
    return this._value;
  }

  public set value(v: IOpenapiV3PathItem) {
    this.__TypeSetter(this._value, v);
  }

  fromLiteral(data: INamedPathItem) {
    super.__fromLiteral(data);
  }

  toLiteral(): INamedPathItem {
    return super.__toLiteral();
  }
}

Registry.register('openapi.v3.NamedPathItem', NamedPathItem);
