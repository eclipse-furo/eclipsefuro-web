// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import { ARRAY, FieldNode, Registry } from '@furo/open-models/dist/index';
import {
  INamedAny as IOpenapiV3NamedAny,
  NamedAny as OpenapiV3NamedAny,
  TNamedAny as TOpenapiV3NamedAny,
} from './NamedAny';

import {
  INamedPathItem as IOpenapiV3NamedPathItem,
  NamedPathItem as OpenapiV3NamedPathItem,
  TNamedPathItem as TOpenapiV3NamedPathItem,
} from './NamedPathItem';

/**
 * @interface IPaths
 *  Holds the relative paths to the individual endpoints and their operations. The path is appended to the URL from the `Server Object` in order to construct the full URL.  The Paths MAY be empty, due to ACL constraints.
 */
export interface IPaths {
  path?: IOpenapiV3NamedPathItem[];
  specificationExtension?: IOpenapiV3NamedAny[];
}

/**
 * @interface TPaths
 *  Holds the relative paths to the individual endpoints and their operations. The path is appended to the URL from the `Server Object` in order to construct the full URL.  The Paths MAY be empty, due to ACL constraints.
 */
export interface TPaths {
  path?: TOpenapiV3NamedPathItem[];
  specification_extension?: TOpenapiV3NamedAny[];
}

/**
 * Paths
 *  Holds the relative paths to the individual endpoints and their operations. The path is appended to the URL from the `Server Object` in order to construct the full URL.  The Paths MAY be empty, due to ACL constraints.
 */
export class Paths extends FieldNode {
  private _path: ARRAY<OpenapiV3NamedPathItem, IOpenapiV3NamedPathItem>;

  private _specificationExtension: ARRAY<OpenapiV3NamedAny, IOpenapiV3NamedAny>;

  public __defaultValues: IPaths;

  constructor(
    initData?: IPaths,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'openapi.v3.Paths';

    this.__meta.nodeFields = [
      {
        fieldName: 'path',
        protoName: 'path',
        FieldConstructor: OpenapiV3NamedPathItem,
        constraints: {},
      },
      {
        fieldName: 'specificationExtension',
        protoName: 'specification_extension',
        FieldConstructor: OpenapiV3NamedAny,
        constraints: {},
      },
    ];

    // Initialize the fields
    this._path = new ARRAY<OpenapiV3NamedPathItem, IOpenapiV3NamedPathItem>(
      undefined,
      this,
      'path',
    );

    this._specificationExtension = new ARRAY<
      OpenapiV3NamedAny,
      IOpenapiV3NamedAny
    >(undefined, this, 'specificationExtension');

    // Set required fields
    [].forEach(fieldName => {
      (this[fieldName as keyof Paths] as FieldNode).__meta.required = true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {};

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (this[fieldName as keyof Paths] as FieldNode).__readonly = true;
    });

    this.__meta.isPristine = true;
  }

  public get path(): ARRAY<OpenapiV3NamedPathItem, IOpenapiV3NamedPathItem> {
    return this._path;
  }

  public set path(v: IOpenapiV3NamedPathItem[]) {
    this.__TypeSetter(this._path, v);
  }

  public get specificationExtension(): ARRAY<
    OpenapiV3NamedAny,
    IOpenapiV3NamedAny
  > {
    return this._specificationExtension;
  }

  public set specificationExtension(v: IOpenapiV3NamedAny[]) {
    this.__TypeSetter(this._specificationExtension, v);
  }

  fromLiteral(data: IPaths) {
    super.__fromLiteral(data);
  }

  toLiteral(): IPaths {
    return super.__toLiteral();
  }
}

Registry.register('openapi.v3.Paths', Paths);
