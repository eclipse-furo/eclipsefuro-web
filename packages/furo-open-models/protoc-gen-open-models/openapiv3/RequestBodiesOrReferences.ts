// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import { ARRAY, FieldNode, Registry } from '@furo/open-models/dist/index';
import {
  INamedRequestBodyOrReference as IOpenapiV3NamedRequestBodyOrReference,
  NamedRequestBodyOrReference as OpenapiV3NamedRequestBodyOrReference,
  TNamedRequestBodyOrReference as TOpenapiV3NamedRequestBodyOrReference,
} from './NamedRequestBodyOrReference';

/**
 * @interface IRequestBodiesOrReferences
 */
export interface IRequestBodiesOrReferences {
  additionalProperties?: IOpenapiV3NamedRequestBodyOrReference[];
}

/**
 * @interface TRequestBodiesOrReferences
 */
export interface TRequestBodiesOrReferences {
  additional_properties?: TOpenapiV3NamedRequestBodyOrReference[];
}

/**
 * RequestBodiesOrReferences
 */
export class RequestBodiesOrReferences extends FieldNode {
  private _additionalProperties: ARRAY<
    OpenapiV3NamedRequestBodyOrReference,
    IOpenapiV3NamedRequestBodyOrReference
  >;

  public __defaultValues: IRequestBodiesOrReferences;

  constructor(
    initData?: IRequestBodiesOrReferences,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'openapi.v3.RequestBodiesOrReferences';

    this.__meta.nodeFields = [
      {
        fieldName: 'additionalProperties',
        protoName: 'additional_properties',
        FieldConstructor: OpenapiV3NamedRequestBodyOrReference,
        constraints: {},
      },
    ];

    // Initialize the fields
    this._additionalProperties = new ARRAY<
      OpenapiV3NamedRequestBodyOrReference,
      IOpenapiV3NamedRequestBodyOrReference
    >(undefined, this, 'additionalProperties');

    // Set required fields
    [].forEach(fieldName => {
      (
        this[fieldName as keyof RequestBodiesOrReferences] as FieldNode
      ).__meta.required = true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {};

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (
        this[fieldName as keyof RequestBodiesOrReferences] as FieldNode
      ).__readonly = true;
    });

    this.__meta.isPristine = true;
  }

  public get additionalProperties(): ARRAY<
    OpenapiV3NamedRequestBodyOrReference,
    IOpenapiV3NamedRequestBodyOrReference
  > {
    return this._additionalProperties;
  }

  public set additionalProperties(v: IOpenapiV3NamedRequestBodyOrReference[]) {
    this.__TypeSetter(this._additionalProperties, v);
  }

  fromLiteral(data: IRequestBodiesOrReferences) {
    super.__fromLiteral(data);
  }

  toLiteral(): IRequestBodiesOrReferences {
    return super.__toLiteral();
  }
}

Registry.register(
  'openapi.v3.RequestBodiesOrReferences',
  RequestBodiesOrReferences,
);
