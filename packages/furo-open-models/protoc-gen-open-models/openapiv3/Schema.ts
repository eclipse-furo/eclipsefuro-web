// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import {
  ARRAY,
  BOOLEAN,
  DOUBLE,
  FieldNode,
  INT64,
  RECURSION,
  Registry,
  STRING,
} from '@furo/open-models/dist/index';
import {
  AdditionalPropertiesItem as OpenapiV3AdditionalPropertiesItem,
  IAdditionalPropertiesItem as IOpenapiV3AdditionalPropertiesItem,
  TAdditionalPropertiesItem as TOpenapiV3AdditionalPropertiesItem,
} from './AdditionalPropertiesItem';

import {
  IXAny as IOpenapiV3Any,
  TXAny as TOpenapiV3Any,
  XAny as OpenapiV3Any,
} from './Any';

import {
  DefaultType as OpenapiV3DefaultType,
  IDefaultType as IOpenapiV3DefaultType,
  TDefaultType as TOpenapiV3DefaultType,
} from './DefaultType';

import {
  Discriminator as OpenapiV3Discriminator,
  IDiscriminator as IOpenapiV3Discriminator,
  TDiscriminator as TOpenapiV3Discriminator,
} from './Discriminator';

import {
  ExternalDocs as OpenapiV3ExternalDocs,
  IExternalDocs as IOpenapiV3ExternalDocs,
  TExternalDocs as TOpenapiV3ExternalDocs,
} from './ExternalDocs';

import {
  IItemsItem as IOpenapiV3ItemsItem,
  ItemsItem as OpenapiV3ItemsItem,
  TItemsItem as TOpenapiV3ItemsItem,
} from './ItemsItem';

import {
  INamedAny as IOpenapiV3NamedAny,
  NamedAny as OpenapiV3NamedAny,
  TNamedAny as TOpenapiV3NamedAny,
} from './NamedAny';

import {
  IProperties as IOpenapiV3Properties,
  Properties as OpenapiV3Properties,
  TProperties as TOpenapiV3Properties,
} from './Properties';

import {
  ISchemaOrReference as IOpenapiV3SchemaOrReference,
  SchemaOrReference as OpenapiV3SchemaOrReference,
  TSchemaOrReference as TOpenapiV3SchemaOrReference,
} from './SchemaOrReference';

import {
  IXml as IOpenapiV3Xml,
  TXml as TOpenapiV3Xml,
  Xml as OpenapiV3Xml,
} from './Xml';

/**
 * @interface ISchema
 *  The Schema Object allows the definition of input and output data types. These types can be objects, but also primitives and arrays. This object is an extended subset of the JSON Schema Specification Wright Draft 00.  For more information about the properties, see JSON Schema Core and JSON Schema Validation. Unless stated otherwise, the property definitions follow the JSON Schema.
 */
export interface ISchema {
  nullable?: boolean;
  discriminator?: IOpenapiV3Discriminator;
  readOnly?: boolean;
  writeOnly?: boolean;
  xml?: IOpenapiV3Xml;
  externalDocs?: IOpenapiV3ExternalDocs;
  example?: IOpenapiV3Any;
  deprecated?: boolean;
  title?: string;
  multipleOf?: number;
  maximum?: number;
  exclusiveMaximum?: boolean;
  minimum?: number;
  exclusiveMinimum?: boolean;
  maxLength?: string;
  minLength?: string;
  pattern?: string;
  maxItems?: string;
  minItems?: string;
  uniqueItems?: boolean;
  maxProperties?: string;
  minProperties?: string;
  required?: string[];
  enum?: IOpenapiV3Any[];
  type?: string;
  allOf?: IOpenapiV3SchemaOrReference[];
  oneOf?: IOpenapiV3SchemaOrReference[];
  anyOf?: IOpenapiV3SchemaOrReference[];
  not?: ISchema;
  items?: IOpenapiV3ItemsItem;
  properties?: IOpenapiV3Properties;
  additionalProperties?: IOpenapiV3AdditionalPropertiesItem;
  default?: IOpenapiV3DefaultType;
  description?: string;
  format?: string;
  specificationExtension?: IOpenapiV3NamedAny[];
}

/**
 * @interface TSchema
 *  The Schema Object allows the definition of input and output data types. These types can be objects, but also primitives and arrays. This object is an extended subset of the JSON Schema Specification Wright Draft 00.  For more information about the properties, see JSON Schema Core and JSON Schema Validation. Unless stated otherwise, the property definitions follow the JSON Schema.
 */
export interface TSchema {
  nullable?: boolean;
  discriminator?: TOpenapiV3Discriminator;
  read_only?: boolean;
  write_only?: boolean;
  xml?: TOpenapiV3Xml;
  external_docs?: TOpenapiV3ExternalDocs;
  example?: TOpenapiV3Any;
  deprecated?: boolean;
  title?: string;
  multiple_of?: number;
  maximum?: number;
  exclusive_maximum?: boolean;
  minimum?: number;
  exclusive_minimum?: boolean;
  max_length?: string;
  min_length?: string;
  pattern?: string;
  max_items?: string;
  min_items?: string;
  unique_items?: boolean;
  max_properties?: string;
  min_properties?: string;
  required?: string[];
  enum?: TOpenapiV3Any[];
  type?: string;
  all_of?: TOpenapiV3SchemaOrReference[];
  one_of?: TOpenapiV3SchemaOrReference[];
  any_of?: TOpenapiV3SchemaOrReference[];
  not?: TSchema;
  items?: TOpenapiV3ItemsItem;
  properties?: TOpenapiV3Properties;
  additional_properties?: TOpenapiV3AdditionalPropertiesItem;
  default?: TOpenapiV3DefaultType;
  description?: string;
  format?: string;
  specification_extension?: TOpenapiV3NamedAny[];
}

/**
 * Schema
 *  The Schema Object allows the definition of input and output data types. These types can be objects, but also primitives and arrays. This object is an extended subset of the JSON Schema Specification Wright Draft 00.  For more information about the properties, see JSON Schema Core and JSON Schema Validation. Unless stated otherwise, the property definitions follow the JSON Schema.
 */
export class Schema extends FieldNode {
  private _nullable: BOOLEAN;

  private _discriminator: OpenapiV3Discriminator;

  private _readOnly: BOOLEAN;

  private _writeOnly: BOOLEAN;

  private _xml: OpenapiV3Xml;

  private _externalDocs: OpenapiV3ExternalDocs;

  private _example: OpenapiV3Any;

  private _deprecated: BOOLEAN;

  private _title: STRING;

  private _multipleOf: DOUBLE;

  private _maximum: DOUBLE;

  private _exclusiveMaximum: BOOLEAN;

  private _minimum: DOUBLE;

  private _exclusiveMinimum: BOOLEAN;

  private _maxLength: INT64;

  private _minLength: INT64;

  private _pattern: STRING;

  private _maxItems: INT64;

  private _minItems: INT64;

  private _uniqueItems: BOOLEAN;

  private _maxProperties: INT64;

  private _minProperties: INT64;

  private _required: ARRAY<STRING, string>;

  private _enum: ARRAY<OpenapiV3Any, IOpenapiV3Any>;

  private _type: STRING;

  private _allOf: ARRAY<
    OpenapiV3SchemaOrReference,
    IOpenapiV3SchemaOrReference
  >;

  private _oneOf: ARRAY<
    OpenapiV3SchemaOrReference,
    IOpenapiV3SchemaOrReference
  >;

  private _anyOf: ARRAY<
    OpenapiV3SchemaOrReference,
    IOpenapiV3SchemaOrReference
  >;

  private _not: RECURSION<Schema, ISchema>;

  private _items: OpenapiV3ItemsItem;

  private _properties: OpenapiV3Properties;

  private _additionalProperties: OpenapiV3AdditionalPropertiesItem;

  private _default: OpenapiV3DefaultType;

  private _description: STRING;

  private _format: STRING;

  private _specificationExtension: ARRAY<OpenapiV3NamedAny, IOpenapiV3NamedAny>;

  public __defaultValues: ISchema;

  constructor(
    initData?: ISchema,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'openapi.v3.Schema';

    this.__meta.nodeFields = [
      {
        fieldName: 'nullable',
        protoName: 'nullable',
        FieldConstructor: BOOLEAN,
        constraints: {},
      },
      {
        fieldName: 'discriminator',
        protoName: 'discriminator',
        FieldConstructor: OpenapiV3Discriminator,
        constraints: {},
      },
      {
        fieldName: 'readOnly',
        protoName: 'read_only',
        FieldConstructor: BOOLEAN,
        constraints: {},
      },
      {
        fieldName: 'writeOnly',
        protoName: 'write_only',
        FieldConstructor: BOOLEAN,
        constraints: {},
      },
      {
        fieldName: 'xml',
        protoName: 'xml',
        FieldConstructor: OpenapiV3Xml,
        constraints: {},
      },
      {
        fieldName: 'externalDocs',
        protoName: 'external_docs',
        FieldConstructor: OpenapiV3ExternalDocs,
        constraints: {},
      },
      {
        fieldName: 'example',
        protoName: 'example',
        FieldConstructor: OpenapiV3Any,
        constraints: {},
      },
      {
        fieldName: 'deprecated',
        protoName: 'deprecated',
        FieldConstructor: BOOLEAN,
        constraints: {},
      },
      {
        fieldName: 'title',
        protoName: 'title',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'multipleOf',
        protoName: 'multiple_of',
        FieldConstructor: DOUBLE,
        constraints: {},
      },
      {
        fieldName: 'maximum',
        protoName: 'maximum',
        FieldConstructor: DOUBLE,
        constraints: {},
      },
      {
        fieldName: 'exclusiveMaximum',
        protoName: 'exclusive_maximum',
        FieldConstructor: BOOLEAN,
        constraints: {},
      },
      {
        fieldName: 'minimum',
        protoName: 'minimum',
        FieldConstructor: DOUBLE,
        constraints: {},
      },
      {
        fieldName: 'exclusiveMinimum',
        protoName: 'exclusive_minimum',
        FieldConstructor: BOOLEAN,
        constraints: {},
      },
      {
        fieldName: 'maxLength',
        protoName: 'max_length',
        FieldConstructor: INT64,
        constraints: {},
      },
      {
        fieldName: 'minLength',
        protoName: 'min_length',
        FieldConstructor: INT64,
        constraints: {},
      },
      {
        fieldName: 'pattern',
        protoName: 'pattern',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'maxItems',
        protoName: 'max_items',
        FieldConstructor: INT64,
        constraints: {},
      },
      {
        fieldName: 'minItems',
        protoName: 'min_items',
        FieldConstructor: INT64,
        constraints: {},
      },
      {
        fieldName: 'uniqueItems',
        protoName: 'unique_items',
        FieldConstructor: BOOLEAN,
        constraints: {},
      },
      {
        fieldName: 'maxProperties',
        protoName: 'max_properties',
        FieldConstructor: INT64,
        constraints: {},
      },
      {
        fieldName: 'minProperties',
        protoName: 'min_properties',
        FieldConstructor: INT64,
        constraints: {},
      },
      {
        fieldName: 'required',
        protoName: 'required',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'enum',
        protoName: 'enum',
        FieldConstructor: OpenapiV3Any,
        constraints: {},
      },
      {
        fieldName: 'type',
        protoName: 'type',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'allOf',
        protoName: 'all_of',
        FieldConstructor: OpenapiV3SchemaOrReference,
        constraints: {},
      },
      {
        fieldName: 'oneOf',
        protoName: 'one_of',
        FieldConstructor: OpenapiV3SchemaOrReference,
        constraints: {},
      },
      {
        fieldName: 'anyOf',
        protoName: 'any_of',
        FieldConstructor: OpenapiV3SchemaOrReference,
        constraints: {},
      },
      {
        fieldName: 'not',
        protoName: 'not',
        FieldConstructor: Schema,
        constraints: {},
      },
      {
        fieldName: 'items',
        protoName: 'items',
        FieldConstructor: OpenapiV3ItemsItem,
        constraints: {},
      },
      {
        fieldName: 'properties',
        protoName: 'properties',
        FieldConstructor: OpenapiV3Properties,
        constraints: {},
      },
      {
        fieldName: 'additionalProperties',
        protoName: 'additional_properties',
        FieldConstructor: OpenapiV3AdditionalPropertiesItem,
        constraints: {},
      },
      {
        fieldName: 'default',
        protoName: 'default',
        FieldConstructor: OpenapiV3DefaultType,
        constraints: {},
      },
      {
        fieldName: 'description',
        protoName: 'description',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'format',
        protoName: 'format',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'specificationExtension',
        protoName: 'specification_extension',
        FieldConstructor: OpenapiV3NamedAny,
        constraints: {},
      },
    ];

    // Initialize the fields
    this._nullable = new BOOLEAN(undefined, this, 'nullable');

    this._discriminator = new OpenapiV3Discriminator(
      undefined,
      this,
      'discriminator',
    );

    this._readOnly = new BOOLEAN(undefined, this, 'readOnly');

    this._writeOnly = new BOOLEAN(undefined, this, 'writeOnly');

    this._xml = new OpenapiV3Xml(undefined, this, 'xml');

    this._externalDocs = new OpenapiV3ExternalDocs(
      undefined,
      this,
      'externalDocs',
    );

    this._example = new OpenapiV3Any(undefined, this, 'example');

    this._deprecated = new BOOLEAN(undefined, this, 'deprecated');

    this._title = new STRING(undefined, this, 'title');

    this._multipleOf = new DOUBLE(undefined, this, 'multipleOf');

    this._maximum = new DOUBLE(undefined, this, 'maximum');

    this._exclusiveMaximum = new BOOLEAN(undefined, this, 'exclusiveMaximum');

    this._minimum = new DOUBLE(undefined, this, 'minimum');

    this._exclusiveMinimum = new BOOLEAN(undefined, this, 'exclusiveMinimum');

    this._maxLength = new INT64(undefined, this, 'maxLength');

    this._minLength = new INT64(undefined, this, 'minLength');

    this._pattern = new STRING(undefined, this, 'pattern');

    this._maxItems = new INT64(undefined, this, 'maxItems');

    this._minItems = new INT64(undefined, this, 'minItems');

    this._uniqueItems = new BOOLEAN(undefined, this, 'uniqueItems');

    this._maxProperties = new INT64(undefined, this, 'maxProperties');

    this._minProperties = new INT64(undefined, this, 'minProperties');

    this._required = new ARRAY<STRING, string>(undefined, this, 'required');

    this._enum = new ARRAY<OpenapiV3Any, IOpenapiV3Any>(
      undefined,
      this,
      'enum',
    );

    this._type = new STRING(undefined, this, 'type');

    this._allOf = new ARRAY<
      OpenapiV3SchemaOrReference,
      IOpenapiV3SchemaOrReference
    >(undefined, this, 'allOf');

    this._oneOf = new ARRAY<
      OpenapiV3SchemaOrReference,
      IOpenapiV3SchemaOrReference
    >(undefined, this, 'oneOf');

    this._anyOf = new ARRAY<
      OpenapiV3SchemaOrReference,
      IOpenapiV3SchemaOrReference
    >(undefined, this, 'anyOf');

    this._not = new RECURSION<Schema, ISchema>(undefined, this, 'not');

    this._items = new OpenapiV3ItemsItem(undefined, this, 'items');

    this._properties = new OpenapiV3Properties(undefined, this, 'properties');

    this._additionalProperties = new OpenapiV3AdditionalPropertiesItem(
      undefined,
      this,
      'additionalProperties',
    );

    this._default = new OpenapiV3DefaultType(undefined, this, 'default');

    this._description = new STRING(undefined, this, 'description');

    this._format = new STRING(undefined, this, 'format');

    this._specificationExtension = new ARRAY<
      OpenapiV3NamedAny,
      IOpenapiV3NamedAny
    >(undefined, this, 'specificationExtension');

    // Set required fields
    [].forEach(fieldName => {
      (this[fieldName as keyof Schema] as FieldNode).__meta.required = true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {};

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (this[fieldName as keyof Schema] as FieldNode).__readonly = true;
    });

    this.__meta.isPristine = true;
  }

  public get nullable(): BOOLEAN {
    return this._nullable;
  }

  public set nullable(v: boolean) {
    this.__PrimitivesSetter(this._nullable, v);
  }

  public get discriminator(): OpenapiV3Discriminator {
    return this._discriminator;
  }

  public set discriminator(v: IOpenapiV3Discriminator) {
    this.__TypeSetter(this._discriminator, v);
  }

  public get readOnly(): BOOLEAN {
    return this._readOnly;
  }

  public set readOnly(v: boolean) {
    this.__PrimitivesSetter(this._readOnly, v);
  }

  public get writeOnly(): BOOLEAN {
    return this._writeOnly;
  }

  public set writeOnly(v: boolean) {
    this.__PrimitivesSetter(this._writeOnly, v);
  }

  public get xml(): OpenapiV3Xml {
    return this._xml;
  }

  public set xml(v: IOpenapiV3Xml) {
    this.__TypeSetter(this._xml, v);
  }

  public get externalDocs(): OpenapiV3ExternalDocs {
    return this._externalDocs;
  }

  public set externalDocs(v: IOpenapiV3ExternalDocs) {
    this.__TypeSetter(this._externalDocs, v);
  }

  public get example(): OpenapiV3Any {
    return this._example;
  }

  public set example(v: IOpenapiV3Any) {
    this.__TypeSetter(this._example, v);
  }

  public get deprecated(): BOOLEAN {
    return this._deprecated;
  }

  public set deprecated(v: boolean) {
    this.__PrimitivesSetter(this._deprecated, v);
  }

  public get title(): STRING {
    return this._title;
  }

  public set title(v: string) {
    this.__PrimitivesSetter(this._title, v);
  }

  public get multipleOf(): DOUBLE {
    return this._multipleOf;
  }

  public set multipleOf(v: number) {
    this.__PrimitivesSetter(this._multipleOf, v);
  }

  public get maximum(): DOUBLE {
    return this._maximum;
  }

  public set maximum(v: number) {
    this.__PrimitivesSetter(this._maximum, v);
  }

  public get exclusiveMaximum(): BOOLEAN {
    return this._exclusiveMaximum;
  }

  public set exclusiveMaximum(v: boolean) {
    this.__PrimitivesSetter(this._exclusiveMaximum, v);
  }

  public get minimum(): DOUBLE {
    return this._minimum;
  }

  public set minimum(v: number) {
    this.__PrimitivesSetter(this._minimum, v);
  }

  public get exclusiveMinimum(): BOOLEAN {
    return this._exclusiveMinimum;
  }

  public set exclusiveMinimum(v: boolean) {
    this.__PrimitivesSetter(this._exclusiveMinimum, v);
  }

  public get maxLength(): INT64 {
    return this._maxLength;
  }

  public set maxLength(v: bigint) {
    this.__PrimitivesSetter(this._maxLength, v);
  }

  public get minLength(): INT64 {
    return this._minLength;
  }

  public set minLength(v: bigint) {
    this.__PrimitivesSetter(this._minLength, v);
  }

  public get pattern(): STRING {
    return this._pattern;
  }

  public set pattern(v: string) {
    this.__PrimitivesSetter(this._pattern, v);
  }

  public get maxItems(): INT64 {
    return this._maxItems;
  }

  public set maxItems(v: bigint) {
    this.__PrimitivesSetter(this._maxItems, v);
  }

  public get minItems(): INT64 {
    return this._minItems;
  }

  public set minItems(v: bigint) {
    this.__PrimitivesSetter(this._minItems, v);
  }

  public get uniqueItems(): BOOLEAN {
    return this._uniqueItems;
  }

  public set uniqueItems(v: boolean) {
    this.__PrimitivesSetter(this._uniqueItems, v);
  }

  public get maxProperties(): INT64 {
    return this._maxProperties;
  }

  public set maxProperties(v: bigint) {
    this.__PrimitivesSetter(this._maxProperties, v);
  }

  public get minProperties(): INT64 {
    return this._minProperties;
  }

  public set minProperties(v: bigint) {
    this.__PrimitivesSetter(this._minProperties, v);
  }

  public get required(): ARRAY<STRING, string> {
    return this._required;
  }

  public set required(v: string[]) {
    this.__TypeSetter(this._required, v);
  }

  public get enum(): ARRAY<OpenapiV3Any, IOpenapiV3Any> {
    return this._enum;
  }

  public set enum(v: IOpenapiV3Any[]) {
    this.__TypeSetter(this._enum, v);
  }

  public get type(): STRING {
    return this._type;
  }

  public set type(v: string) {
    this.__PrimitivesSetter(this._type, v);
  }

  public get allOf(): ARRAY<
    OpenapiV3SchemaOrReference,
    IOpenapiV3SchemaOrReference
  > {
    return this._allOf;
  }

  public set allOf(v: IOpenapiV3SchemaOrReference[]) {
    this.__TypeSetter(this._allOf, v);
  }

  public get oneOf(): ARRAY<
    OpenapiV3SchemaOrReference,
    IOpenapiV3SchemaOrReference
  > {
    return this._oneOf;
  }

  public set oneOf(v: IOpenapiV3SchemaOrReference[]) {
    this.__TypeSetter(this._oneOf, v);
  }

  public get anyOf(): ARRAY<
    OpenapiV3SchemaOrReference,
    IOpenapiV3SchemaOrReference
  > {
    return this._anyOf;
  }

  public set anyOf(v: IOpenapiV3SchemaOrReference[]) {
    this.__TypeSetter(this._anyOf, v);
  }

  public get not(): RECURSION<Schema, ISchema> {
    return this._not;
  }

  public set not(v: ISchema) {
    this.__TypeSetter(this._not, v);
  }

  public get items(): OpenapiV3ItemsItem {
    return this._items;
  }

  public set items(v: IOpenapiV3ItemsItem) {
    this.__TypeSetter(this._items, v);
  }

  public get properties(): OpenapiV3Properties {
    return this._properties;
  }

  public set properties(v: IOpenapiV3Properties) {
    this.__TypeSetter(this._properties, v);
  }

  public get additionalProperties(): OpenapiV3AdditionalPropertiesItem {
    return this._additionalProperties;
  }

  public set additionalProperties(v: IOpenapiV3AdditionalPropertiesItem) {
    this.__TypeSetter(this._additionalProperties, v);
  }

  public get default(): OpenapiV3DefaultType {
    return this._default;
  }

  public set default(v: IOpenapiV3DefaultType) {
    this.__TypeSetter(this._default, v);
  }

  public get description(): STRING {
    return this._description;
  }

  public set description(v: string) {
    this.__PrimitivesSetter(this._description, v);
  }

  public get format(): STRING {
    return this._format;
  }

  public set format(v: string) {
    this.__PrimitivesSetter(this._format, v);
  }

  public get specificationExtension(): ARRAY<
    OpenapiV3NamedAny,
    IOpenapiV3NamedAny
  > {
    return this._specificationExtension;
  }

  public set specificationExtension(v: IOpenapiV3NamedAny[]) {
    this.__TypeSetter(this._specificationExtension, v);
  }

  fromLiteral(data: ISchema) {
    super.__fromLiteral(data);
  }

  toLiteral(): ISchema {
    return super.__toLiteral();
  }
}

Registry.register('openapi.v3.Schema', Schema);
