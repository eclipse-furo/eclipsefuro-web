// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import {
  ARRAY,
  FieldNode,
  Registry,
  STRING,
} from '@furo/open-models/dist/index';
import {
  Components as OpenapiV3Components,
  IComponents as IOpenapiV3Components,
  TComponents as TOpenapiV3Components,
} from './Components';

import {
  ExternalDocs as OpenapiV3ExternalDocs,
  IExternalDocs as IOpenapiV3ExternalDocs,
  TExternalDocs as TOpenapiV3ExternalDocs,
} from './ExternalDocs';

import {
  IInfo as IOpenapiV3Info,
  Info as OpenapiV3Info,
  TInfo as TOpenapiV3Info,
} from './Info';

import {
  INamedAny as IOpenapiV3NamedAny,
  NamedAny as OpenapiV3NamedAny,
  TNamedAny as TOpenapiV3NamedAny,
} from './NamedAny';

import {
  IPaths as IOpenapiV3Paths,
  Paths as OpenapiV3Paths,
  TPaths as TOpenapiV3Paths,
} from './Paths';

import {
  ISecurityRequirement as IOpenapiV3SecurityRequirement,
  SecurityRequirement as OpenapiV3SecurityRequirement,
  TSecurityRequirement as TOpenapiV3SecurityRequirement,
} from './SecurityRequirement';

import {
  IServer as IOpenapiV3Server,
  Server as OpenapiV3Server,
  TServer as TOpenapiV3Server,
} from './Server';

import {
  ITag as IOpenapiV3Tag,
  TTag as TOpenapiV3Tag,
  Tag as OpenapiV3Tag,
} from './Tag';

/**
 * @interface IDocument
 */
export interface IDocument {
  openapi?: string;
  info?: IOpenapiV3Info;
  servers?: IOpenapiV3Server[];
  paths?: IOpenapiV3Paths;
  components?: IOpenapiV3Components;
  security?: IOpenapiV3SecurityRequirement[];
  tags?: IOpenapiV3Tag[];
  externalDocs?: IOpenapiV3ExternalDocs;
  specificationExtension?: IOpenapiV3NamedAny[];
}

/**
 * @interface TDocument
 */
export interface TDocument {
  openapi?: string;
  info?: TOpenapiV3Info;
  servers?: TOpenapiV3Server[];
  paths?: TOpenapiV3Paths;
  components?: TOpenapiV3Components;
  security?: TOpenapiV3SecurityRequirement[];
  tags?: TOpenapiV3Tag[];
  external_docs?: TOpenapiV3ExternalDocs;
  specification_extension?: TOpenapiV3NamedAny[];
}

/**
 * Document
 */
export class Document extends FieldNode {
  private _openapi: STRING;

  private _info: OpenapiV3Info;

  private _servers: ARRAY<OpenapiV3Server, IOpenapiV3Server>;

  private _paths: OpenapiV3Paths;

  private _components: OpenapiV3Components;

  private _security: ARRAY<
    OpenapiV3SecurityRequirement,
    IOpenapiV3SecurityRequirement
  >;

  private _tags: ARRAY<OpenapiV3Tag, IOpenapiV3Tag>;

  private _externalDocs: OpenapiV3ExternalDocs;

  private _specificationExtension: ARRAY<OpenapiV3NamedAny, IOpenapiV3NamedAny>;

  public __defaultValues: IDocument;

  constructor(
    initData?: IDocument,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'openapi.v3.Document';

    this.__meta.nodeFields = [
      {
        fieldName: 'openapi',
        protoName: 'openapi',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'info',
        protoName: 'info',
        FieldConstructor: OpenapiV3Info,
        constraints: {},
      },
      {
        fieldName: 'servers',
        protoName: 'servers',
        FieldConstructor: OpenapiV3Server,
        constraints: {},
      },
      {
        fieldName: 'paths',
        protoName: 'paths',
        FieldConstructor: OpenapiV3Paths,
        constraints: {},
      },
      {
        fieldName: 'components',
        protoName: 'components',
        FieldConstructor: OpenapiV3Components,
        constraints: {},
      },
      {
        fieldName: 'security',
        protoName: 'security',
        FieldConstructor: OpenapiV3SecurityRequirement,
        constraints: {},
      },
      {
        fieldName: 'tags',
        protoName: 'tags',
        FieldConstructor: OpenapiV3Tag,
        constraints: {},
      },
      {
        fieldName: 'externalDocs',
        protoName: 'external_docs',
        FieldConstructor: OpenapiV3ExternalDocs,
        constraints: {},
      },
      {
        fieldName: 'specificationExtension',
        protoName: 'specification_extension',
        FieldConstructor: OpenapiV3NamedAny,
        constraints: {},
      },
    ];

    // Initialize the fields
    this._openapi = new STRING(undefined, this, 'openapi');

    this._info = new OpenapiV3Info(undefined, this, 'info');

    this._servers = new ARRAY<OpenapiV3Server, IOpenapiV3Server>(
      undefined,
      this,
      'servers',
    );

    this._paths = new OpenapiV3Paths(undefined, this, 'paths');

    this._components = new OpenapiV3Components(undefined, this, 'components');

    this._security = new ARRAY<
      OpenapiV3SecurityRequirement,
      IOpenapiV3SecurityRequirement
    >(undefined, this, 'security');

    this._tags = new ARRAY<OpenapiV3Tag, IOpenapiV3Tag>(
      undefined,
      this,
      'tags',
    );

    this._externalDocs = new OpenapiV3ExternalDocs(
      undefined,
      this,
      'externalDocs',
    );

    this._specificationExtension = new ARRAY<
      OpenapiV3NamedAny,
      IOpenapiV3NamedAny
    >(undefined, this, 'specificationExtension');

    // Set required fields
    [].forEach(fieldName => {
      (this[fieldName as keyof Document] as FieldNode).__meta.required = true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {};

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (this[fieldName as keyof Document] as FieldNode).__readonly = true;
    });

    this.__meta.isPristine = true;
  }

  public get openapi(): STRING {
    return this._openapi;
  }

  public set openapi(v: string) {
    this.__PrimitivesSetter(this._openapi, v);
  }

  public get info(): OpenapiV3Info {
    return this._info;
  }

  public set info(v: IOpenapiV3Info) {
    this.__TypeSetter(this._info, v);
  }

  public get servers(): ARRAY<OpenapiV3Server, IOpenapiV3Server> {
    return this._servers;
  }

  public set servers(v: IOpenapiV3Server[]) {
    this.__TypeSetter(this._servers, v);
  }

  public get paths(): OpenapiV3Paths {
    return this._paths;
  }

  public set paths(v: IOpenapiV3Paths) {
    this.__TypeSetter(this._paths, v);
  }

  public get components(): OpenapiV3Components {
    return this._components;
  }

  public set components(v: IOpenapiV3Components) {
    this.__TypeSetter(this._components, v);
  }

  public get security(): ARRAY<
    OpenapiV3SecurityRequirement,
    IOpenapiV3SecurityRequirement
  > {
    return this._security;
  }

  public set security(v: IOpenapiV3SecurityRequirement[]) {
    this.__TypeSetter(this._security, v);
  }

  public get tags(): ARRAY<OpenapiV3Tag, IOpenapiV3Tag> {
    return this._tags;
  }

  public set tags(v: IOpenapiV3Tag[]) {
    this.__TypeSetter(this._tags, v);
  }

  public get externalDocs(): OpenapiV3ExternalDocs {
    return this._externalDocs;
  }

  public set externalDocs(v: IOpenapiV3ExternalDocs) {
    this.__TypeSetter(this._externalDocs, v);
  }

  public get specificationExtension(): ARRAY<
    OpenapiV3NamedAny,
    IOpenapiV3NamedAny
  > {
    return this._specificationExtension;
  }

  public set specificationExtension(v: IOpenapiV3NamedAny[]) {
    this.__TypeSetter(this._specificationExtension, v);
  }

  fromLiteral(data: IDocument) {
    super.__fromLiteral(data);
  }

  toLiteral(): IDocument {
    return super.__toLiteral();
  }
}

Registry.register('openapi.v3.Document', Document);
