// Code generated by furo protoc-gen-open-models. DO NOT EDIT.
// protoc-gen-open-models version: ????

import {
  ARRAY,
  FieldNode,
  Registry,
  STRING,
} from '@furo/open-models/dist/index';
import {
  IXAny as IOpenapiV3Any,
  TXAny as TOpenapiV3Any,
  XAny as OpenapiV3Any,
} from './Any';

import {
  INamedAny as IOpenapiV3NamedAny,
  NamedAny as OpenapiV3NamedAny,
  TNamedAny as TOpenapiV3NamedAny,
} from './NamedAny';

/**
 * @interface IExample
 */
export interface IExample {
  summary?: string;
  description?: string;
  value?: IOpenapiV3Any;
  externalValue?: string;
  specificationExtension?: IOpenapiV3NamedAny[];
}

/**
 * @interface TExample
 */
export interface TExample {
  summary?: string;
  description?: string;
  value?: TOpenapiV3Any;
  external_value?: string;
  specification_extension?: TOpenapiV3NamedAny[];
}

/**
 * Example
 */
export class Example extends FieldNode {
  private _summary: STRING;

  private _description: STRING;

  private _value: OpenapiV3Any;

  private _externalValue: STRING;

  private _specificationExtension: ARRAY<OpenapiV3NamedAny, IOpenapiV3NamedAny>;

  public __defaultValues: IExample;

  constructor(
    initData?: IExample,
    parent?: FieldNode,
    parentAttributeName?: string,
  ) {
    super(undefined, parent, parentAttributeName);
    this.__meta.typeName = 'openapi.v3.Example';

    this.__meta.nodeFields = [
      {
        fieldName: 'summary',
        protoName: 'summary',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'description',
        protoName: 'description',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'value',
        protoName: 'value',
        FieldConstructor: OpenapiV3Any,
        constraints: {},
      },
      {
        fieldName: 'externalValue',
        protoName: 'external_value',
        FieldConstructor: STRING,
        constraints: {},
      },
      {
        fieldName: 'specificationExtension',
        protoName: 'specification_extension',
        FieldConstructor: OpenapiV3NamedAny,
        constraints: {},
      },
    ];

    // Initialize the fields
    this._summary = new STRING(undefined, this, 'summary');

    this._description = new STRING(undefined, this, 'description');

    this._value = new OpenapiV3Any(undefined, this, 'value');

    this._externalValue = new STRING(undefined, this, 'externalValue');

    this._specificationExtension = new ARRAY<
      OpenapiV3NamedAny,
      IOpenapiV3NamedAny
    >(undefined, this, 'specificationExtension');

    // Set required fields
    [].forEach(fieldName => {
      (this[fieldName as keyof Example] as FieldNode).__meta.required = true;
    });

    // Default values from openAPI annotations
    this.__defaultValues = {};

    // Initialize the fields with init data
    if (initData !== undefined) {
      this.__fromLiteral({ ...this.__defaultValues, ...initData });
    } else {
      this.__fromLiteral(this.__defaultValues);
    }

    // Set readonly fields after the init, so child nodes are readonly too
    [].forEach(fieldName => {
      (this[fieldName as keyof Example] as FieldNode).__readonly = true;
    });

    this.__meta.isPristine = true;
  }

  public get summary(): STRING {
    return this._summary;
  }

  public set summary(v: string) {
    this.__PrimitivesSetter(this._summary, v);
  }

  public get description(): STRING {
    return this._description;
  }

  public set description(v: string) {
    this.__PrimitivesSetter(this._description, v);
  }

  public get value(): OpenapiV3Any {
    return this._value;
  }

  public set value(v: IOpenapiV3Any) {
    this.__TypeSetter(this._value, v);
  }

  public get externalValue(): STRING {
    return this._externalValue;
  }

  public set externalValue(v: string) {
    this.__PrimitivesSetter(this._externalValue, v);
  }

  public get specificationExtension(): ARRAY<
    OpenapiV3NamedAny,
    IOpenapiV3NamedAny
  > {
    return this._specificationExtension;
  }

  public set specificationExtension(v: IOpenapiV3NamedAny[]) {
    this.__TypeSetter(this._specificationExtension, v);
  }

  fromLiteral(data: IExample) {
    super.__fromLiteral(data);
  }

  toLiteral(): IExample {
    return super.__toLiteral();
  }
}

Registry.register('openapi.v3.Example', Example);
